<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LumiSoft.Net</name>
    </assembly>
    <members>
        <member name="T:LumiSoft.Net.AsyncOP">
            <summary>
            This is base class for asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncOP.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncOP.IsCompleted">
            <summary>
            Gets if asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncOP.IsCompletedSynchronously">
            <summary>
            Gets if operation completed synchronously.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AsyncOP_State">
            <summary>
            Specifies asynchronous operation state.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AsyncOP_State.WaitingForStart">
            <summary>
            Operation waits for start.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AsyncOP_State.Active">
            <summary>
            Operation processing is in progress.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AsyncOP_State.Completed">
            <summary>
            Operations is completed.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.AsyncOP_State.Disposed">
            <summary>
            Operation is disposed.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_e_Authenticate">
            <summary>
            This class provides data for server userName/password authentications.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_e_Authenticate.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="authorizationID">Authorization ID.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the argumnets has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_Authenticate.IsAuthenticated">
            <summary>
            Gets or sets if specified user is authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_Authenticate.AuthorizationID">
            <summary>
            Gets authorization ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_Authenticate.UserName">
            <summary>
            Gets user name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_Authenticate.Password">
            <summary>
            Gets password.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_e_UserInfo">
            <summary>
            This class provides data for server authentication mechanisms <b>GetUserInfo</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_e_UserInfo.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User name.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_UserInfo.UserExists">
            <summary>
            Gets or sets if specified user exists.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_UserInfo.UserName">
            <summary>
            Gets user name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_e_UserInfo.Password">
            <summary>
            Gets or sets user password.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg">
            <summary>
            This class implements Google Gmail OAUTH version 1.0.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="consumerKey">OAuth consumer key.</param>
            <param name="consumerSecret">OAuth consumer secret.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>consumerKey</b> or <b>consumerSecret</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is riased when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetRequestToken">
            <summary>
            Gets Gmail request Token.
            </summary>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetRequestToken(System.String)">
            <summary>
            Gets Gmail request Token.
            </summary>
            <param name="callback">OAuth callback Url.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>callback</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetAuthorizationUrl">
            <summary>
            Gets Gmail authorization Url.
            </summary>
            <returns>Returns Gmail authorization Url.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetAccessToken(System.String)">
            <summary>
            Gets Gmail access token.
            </summary>
            <param name="verificationCode">Google provided verfification code on authorization Url.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>verificationCode</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetXOAuthStringForSmtp">
            <summary>
            Gets Gmail XOAUTH authentication string.
            </summary>
            <returns>Returns Gmail XOAUTH authentication string.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetXOAuthStringForSmtp(System.String)">
            <summary>
            Gets Gmail XOAUTH authentication string.
            </summary>
            <param name="email">Gmail email address.</param>
            <returns>Returns Gmail XOAUTH authentication string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>email</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetXOAuthStringForImap">
            <summary>
            Gets Gmail XOAUTH authentication string.
            </summary>
            <returns>Returns Gmail XOAUTH authentication string.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetXOAuthStringForImap(System.String)">
            <summary>
            Gets Gmail XOAUTH authentication string.
            </summary>
            <param name="email">Gmail email address.</param>
            <returns>Returns Gmail XOAUTH authentication string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>email</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetUserEmail">
            <summary>
            Gets user Gmail email address. 
            </summary>
            <returns>Returns user Gmail email address.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called in invalid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GenerateTimeStamp">
            <summary>
            Creates the timestamp for the signature.        
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GenerateNonce">
            <summary>
            Creates a nonce for the signature.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.Email">
            <summary>
            Gets user Gmail email address. Returns null if no GetUserEmail method ever called.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.Auth_HttpDigest">
            <summary>
            Implements http digest access authentication. Defined in RFC 2617.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="digestResponse">Server/Client returned digest response.</param>
            <param name="requestMethod">Request method.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Client constructor. This is used to build valid Authorization response to server.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <param name="cnonce">Client nonce value.</param>
            <param name="uri">Request URI.</param>
            <param name="digestResponse">Server authenticate resposne.</param>
            <param name="requestMethod">Request method.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.#ctor(System.String,System.String,System.String)">
            <summary>
            Server constructor. This is used to build valid Authenticate response to client.
            </summary>
            <param name="realm">Realm(domain).</param>
            <param name="nonce">Nonce value.</param>
            <param name="opaque">Opaque value.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.Authenticate(System.String,System.String)">
            <summary>
            Authenticates specified user and password using this class parameters.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns true if authenticated, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.Parse(System.String)">
            <summary>
            Parses authetication info from client digest response.
            </summary>
            <param name="digestResponse">Client returned digest response.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.CalculateRspAuth(System.String,System.String)">
            <summary>
            Calculates 'rspauth' value.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns 'rspauth' value.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.CalculateResponse(System.String,System.String)">
            <summary>
            Calculates response value.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">User password.</param>
            <returns>Returns calculated rsponse value.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.ToString">
            <summary>
            Converts this to valid digest string.
            </summary>
            <returns>Returns digest string.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.ToChallange">
            <summary>
            Creates 'Challange' data using this class info. 
            </summary>
            <returns>Returns Challange data.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.ToChallange(System.Boolean)">
            <summary>
            Creates 'Challange' data using this class info. 
            </summary>
            <param name="addAuthMethod">Specifies if 'digest ' authe method string constant is added.</param>
            <returns>Returns Challange data.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.ToAuthorization">
            <summary>
            Creates 'Authorization' data using this class info.
            </summary>
            <returns>Return Authorization data.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.ToAuthorization(System.Boolean)">
            <summary>
            Creates 'Authorization' data using this class info.
            </summary>
            <param name="addAuthMethod">Specifies if 'digest ' authe method string constant is added.</param>
            <returns>Return Authorization data.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.CreateNonce">
            <summary>
            Creates valid nonce value.
            </summary>
            <returns>Returns nonce value.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest.CreateOpaque">
            <summary>
            Creates valid opaque value.
            </summary>
            <returns>Renturn opaque value.</returns>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.RequestMethod">
            <summary>
            Gets or sets request method.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Realm">
            <summary>
            Gets or sets a string to be displayed to users so they know which username and password 
            to use. This string should contain at least the name of the host performing the 
            authentication and might additionally indicate the collection of users who might have access.
            An example might be "registered_users@gotham.news.com".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Nonce">
            <summary>
            Gets or sets a server-specified unique data string. It is recommended that this 
            string be base64 or hexadecimal data. 
            Suggested value: base64(time-stamp hex(time-stamp ":" ETag ":" private-key)).
            </summary>
            <exception cref="T:System.ArgumentException">Is raised when invalid value is specified.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Opaque">
            <summary>
            Gets or sets string of data, specified by the server, which should be returned by the client unchanged.
            It is recommended that this string be base64 or hexadecimal data.
            </summary>
            <exception cref="T:System.ArgumentException">Is raised when invalid value is specified.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Algorithm">
            <summary>
            Gets or sets algorithm to use to produce the digest and a checksum.
            This is normally MD5 or MD5-sess.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Response">
            <summary>
            Gets a string of 32 hex digits computed by HTTP digest algorithm, 
            which proves that the user knows a password.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.UserName">
            <summary>
            Gets or sets user name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Password">
            <summary>
            Gets or sets password.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Uri">
            <summary>
            Gets the URI from Request-URI.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.Qop">
            <summary>
            Gets or sets value what indicates "quality of protection" the client has applied to
            the message. If present, its value MUST be one of the alternatives the server indicated
            it supports in the WWW-Authenticate header. This directive is optional in order to preserve 
            backward compatibility.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.CNonce">
            <summary>
            Gets or sets Client nonce value. This MUST be specified if a qop directive is sent (see above), and
            MUST NOT be specified if the server did not send a qop directive in the WWW-Authenticate header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest.NonceCount">
            <summary>
            Gets or stets nonce count. This MUST be specified if a qop directive is sent (see above), and
            MUST NOT be specified if the server did not send a qop directive in the WWW-Authenticate 
            header field.  The nc-value is the hexadecimal count of the number of requests.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager">
            <summary>
            HTTP digest authentication nonce manager.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.NonceEntry">
            <summary>
            This class represents nonce entry in active nonces collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.NonceEntry.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="nonce"></param>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.NonceEntry.Nonce">
            <summary>
            Gets nonce value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.NonceEntry.CreateTime">
            <summary>
            Gets time when this nonce entry was created.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.Dispose">
            <summary>
            Cleans up nay resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.CreateNonce">
            <summary>
            Creates new nonce and adds it to active nonces collection.
            </summary>
            <returns>Returns new created nonce.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.NonceExists(System.String)">
            <summary>
            Checks if specified nonce exists in active nonces collection.
            </summary>
            <param name="nonce">Nonce to check.</param>
            <returns>Returns true if nonce exists in active nonces collection, otherwise returns false.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.RemoveNonce(System.String)">
            <summary>
            Removes specified nonce from active nonces collection.
            </summary>
            <param name="nonce">Nonce to remove.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.RemoveExpiredNonces">
            <summary>
            Removes not used nonces what has expired.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.Auth_HttpDigest_NonceManager.ExpireTime">
            <summary>
            Gets or sets nonce expire time in seconds.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client">
            <summary>
            This base class for client SASL authentication mechanisms. Defined in RFC 4422.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>serverResponse</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client.Name">
            <summary>
            Gets IANA-registered SASL authentication mechanism name.
            </summary>
            <remarks>The registered list is available from: http://www.iana.org/assignments/sasl-mechanisms .</remarks>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client.SupportsInitialResponse">
            <summary>
            Gets if the authentication method supports SASL client "inital response".
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_CramMd5">
            <summary>
            Implements "CRAM-MD5" authenticaiton.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_CramMd5.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">User password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_CramMd5.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>serverResponse</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called when authentication is completed.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_CramMd5.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_CramMd5.Name">
            <summary>
            Returns always "LOGIN".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_CramMd5.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_DigestMd5">
            <summary>
            Implements "DIGEST-MD5" authenticaiton.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_DigestMd5.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="protocol">Protocol name. For example: SMTP.</param>
            <param name="server">Remote server name or IP address.</param>
            <param name="userName">User login name.</param>
            <param name="password">User password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>protocol</b>,<b>server</b>,<b>userName</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_DigestMd5.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>serverResponse</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called when authentication is completed.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_DigestMd5.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_DigestMd5.Name">
            <summary>
            Returns always "DIGEST-MD5".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_DigestMd5.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Login">
            <summary>
            Implements "LOGIN" authenticaiton.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Login.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">User password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Login.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>serverResponse</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called when authentication is completed.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Login.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Login.Name">
            <summary>
            Returns always "LOGIN".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Login.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm">
            <summary>
            Implements NTLM authentication.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType1">
            <summary>
            This class represents NTLM type 1 message.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType1.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="domain">Domain name.</param>
            <param name="host">Host name.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>domain</b> or <b>host</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType1.ToByte">
            <summary>
            Converts this to binary NTML type 1 message.
            </summary>
            <returns>Returns this as binary NTML type 1 message.</returns>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType2">
            <summary>
            This class represents NTLM type 2 message.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType2.#ctor(System.Byte[])">
            <summary>
            Default constructor.
            </summary>
            <param name="nonce">NTLM 8 byte nonce.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>nonce</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType2.Parse(System.Byte[])">
            <summary>
            Parses NTLM type 2 message.
            </summary>
            <param name="data">NTLM type 2 message.</param>
            <returns>Returns parsed NTLM type 2 message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType2.Nonce">
            <summary>
            Gets nonce.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType3">
            <summary>
            This class represents NTLM type 3 message.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType3.#ctor(System.String,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Default constructor.
            </summary>
            <param name="domain">Domain name.</param>
            <param name="user">User name.</param>
            <param name="host">Host name.</param>
            <param name="lm">Lan Manager response.</param>
            <param name="nt">NT response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>domain</b>,<b>user</b>,<b>host</b>,<b>lm</b> or <b>nt</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.MessageType3.ToByte">
            <summary>
            Converts this to binary NTML type 3 message.
            </summary>
            <returns>Returns this as binary NTML type 3 message.</returns>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.NTLM_Utils">
            <summary>
            This class provides NTLM related utility methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.NTLM_Utils.CalculateLM(System.Byte[],System.String)">
            <summary>
            Calculates NTLM NT response.
            </summary>
            <param name="nonce">Server nonce.</param>
            <param name="password">Password.</param>
            <returns>Returns NTLM NT response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>nonce</b> or <b>password</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.NTLM_Utils.CalculateNT(System.Byte[],System.String)">
            <summary>
            Calculates NTLM LM response.
            </summary>
            <param name="nonce">Server nonce.</param>
            <param name="password">Password.</param>
            <returns>Returns NTLM LM response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>nonce</b> or <b>password</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="domain">Domain name.</param>
            <param name="userName">User login name.</param>
            <param name="password">Password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>domain</b>,<b>userName</b> or <b>passowrd</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called when authentication is completed.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.Name">
            <summary>
            Returns always "NTLM".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Ntlm.SupportsInitialResponse">
            <summary>
            Gets if the authentication method supports SASL client "inital response".
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain">
            <summary>
            Implements "PLAIN" authenticaiton.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">User password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called when authentication is completed.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain.Name">
            <summary>
            Returns always "PLAIN".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_Plain.SupportsInitialResponse">
            <summary>
            Gets if the authentication method supports SASL client "inital response".
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth">
            <summary>
            This class implements <b>XOAUTH</b> authentication.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User login name.</param>
            <param name="authString">OAUTH authentication string. For example you can use <see cref="M:LumiSoft.Net.AUTH.AUTH_Gmail_OAuth1_3leg.GetXOAuthStringForImap"/> to get valid string.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> or <b>authString</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is riased when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="serverResponse">Server sent SASL response.</param>
            <returns>Returns challange request what must be sent to server or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>serverResponse</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is called when authentication is completed.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth.Name">
            <summary>
            Returns always "LOGIN".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_Client_XOAuth.SupportsInitialResponse">
            <summary>
            Returns always true, because XOAUTH authentication method supports SASL client "inital response".
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge">
            <summary>
            This class represents SASL DIGEST-MD5 authentication <b>digest-challenge</b>. Defined in RFC 2831.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.#ctor(System.String[],System.String,System.String[],System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="realm">Realm value.</param>
            <param name="nonce">Nonce value.</param>
            <param name="qopOptions">Quality of protections supported. Normally this is "auth".</param>
            <param name="stale">Stale value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>realm</b>,<b>nonce</b> or <b>qopOptions</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.#ctor">
            <summary>
            Internal parse constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Parse(System.String)">
            <summary>
            Parses DIGEST-MD5 challenge from challenge-string.
            </summary>
            <param name="challenge">Challenge string.</param>
            <returns>Returns DIGEST-MD5 challenge.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>challenge</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when challenge parsing + validation fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.ToChallenge">
            <summary>
            Returns DIGEST-MD5 "digest-challenge" string.
            </summary>
            <returns>Returns DIGEST-MD5 "digest-challenge" string.</returns>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Realm">
            <summary>
            Gets realm value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Nonce">
            <summary>
            Gets nonce value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.QopOptions">
            <summary>
            Gets qop-options value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Stale">
            <summary>
            Gets if stale value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Maxbuf">
            <summary>
            Gets maxbuf value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Charset">
            <summary>
            Gets charset value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.Algorithm">
            <summary>
            Gets algorithm value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge.CipherOpts">
            <summary>
            Gets cipher-opts value. For more info see RFC 2831.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response">
            <summary>
            This class represents SASL DIGEST-MD5 authentication <b>digest-response</b>. Defined in RFC 2831.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.#ctor(LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Challenge,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="challenge">Client challenge.</param>
            <param name="realm">Realm value. This must be one value of the challenge Realm.</param>
            <param name="userName">User name.</param>
            <param name="password">User password.</param>
            <param name="cnonce">Client nonce value.</param>
            <param name="nonceCount">Nonce count. One-based client authentication attempt number. Normally this value is 1.</param>
            <param name="qop">Indicates what "quality of protection" the client accepted. This must be one value of the challenge QopOptions.</param>
            <param name="digestUri">Digest URI.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>challenge</b>,<b>realm</b>,<b>password</b>,<b>nonce</b>,<b>qop</b> or <b>digestUri</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.#ctor">
            <summary>
            Internal parse constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Parse(System.String)">
            <summary>
            Parses DIGEST-MD5 response from response-string.
            </summary>
            <param name="digestResponse">Response string.</param>
            <returns>Returns DIGEST-MD5 response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>digestResponse</b> isnull reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when response parsing + validation fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Authenticate(System.String,System.String)">
            <summary>
            Authenticates user.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns true if user authenticated, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> or <b>password</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.ToResponse">
            <summary>
            Creates digest response for challenge.
            </summary>
            <returns>Returns digest response.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.ToRspauthResponse(System.String,System.String)">
            <summary>
            Creates <b>response-auth</b> response for client.
            </summary>
            <returns>Returns <b>response-auth</b> response.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.CalculateResponse(System.String,System.String)">
            <summary>
            Calculates digest response.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns digest response.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.a1(System.String,System.String)">
            <summary>
            Calculates A1 value.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns A1 value.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.a2">
            <summary>
            Calculates A2 value.
            </summary>
            <returns>Returns A2 value.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.h(System.Byte[])">
            <summary>
            Computes MD5 hash.
            </summary>
            <param name="value">Value to process.</param>
            <returns>Return MD5 hash.</returns>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.hex(System.Byte[])">
            <summary>
            Converts value to hex string.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>Returns hex string.</returns>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.UserName">
            <summary>
            Gets user name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Realm">
            <summary>
            Gets realm(domain) name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Nonce">
            <summary>
            Gets nonce value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Cnonce">
            <summary>
            Gets cnonce value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.NonceCount">
            <summary>
            Gets nonce count.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Qop">
            <summary>
            Gets "quality of protection" value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.DigestUri">
            <summary>
            Gets digest URI value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Response">
            <summary>
            Gets response value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Charset">
            <summary>
            Gets charset value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Cipher">
            <summary>
            Gets cipher value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_DigestMD5_Response.Authzid">
            <summary>
            Gets authorization ID.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism">
            <summary>
            This base class for server SASL authentication mechanisms.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.Reset">
            <summary>
            Resets any authentication state data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="clientResponse">Client sent SASL response.</param>
            <returns>Retunrns challange response what must be sent to client or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>clientRespone</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.IsAuthenticated">
            <summary>
            Gets if user has authenticated sucessfully.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.Name">
            <summary>
            Gets IANA-registered SASL authentication mechanism name.
            </summary>
            <remarks>The registered list is available from: http://www.iana.org/assignments/sasl-mechanisms .</remarks>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.RequireSSL">
            <summary>
            Gets if specified SASL mechanism is available only to SSL connection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism.Tags">
            <summary>
            Gets user data items collection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5">
            <summary>
            Implements "CRAM-MD5" authenticaiton. Defined in RFC 2195.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="requireSSL">Specifies if this mechanism is available to SSL connections only.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.Reset">
            <summary>
            Resets any authentication state data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="clientResponse">Client sent SASL response.</param>
            <returns>Retunrns challange response what must be sent to client or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>clientResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.HmacMd5(System.String,System.String)">
            <summary>
            Calculates keyed md5 hash from specifieed text and with specified hash key.
            </summary>
            <param name="hashKey">MD5 key.</param>
            <param name="text">Text to hash.</param>
            <returns>Returns MD5 hash.</returns>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.IsAuthenticated">
            <summary>
            Gets if user has authenticated sucessfully.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.Name">
            <summary>
            Returns always "CRAM-MD5".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.RequireSSL">
            <summary>
            Gets if specified SASL mechanism is available only to SSL connection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.GetUserInfo">
            <summary>
            Is called when authentication mechanism needs to get user info to complete atuhentication.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_CramMd5.OnGetUserInfo(System.String)">
            <summary>
            Raises <b>GetUserInfo</b> event.
            </summary>
            <param name="userName">User name.</param>
            <returns>Returns specified user info.</returns>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5">
            <summary>
            Implements "DIGEST-MD5" authenticaiton. Defined in RFC 2831.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="requireSSL">Specifies if this mechanism is available to SSL connections only.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.Reset">
            <summary>
            Resets any authentication state data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="clientResponse">Client sent SASL response.</param>
            <returns>Retunrns challange response what must be sent to client or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>clientResponse</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.IsAuthenticated">
            <summary>
            Gets if user has authenticated sucessfully.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.Name">
            <summary>
            Returns always "DIGEST-MD5".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.RequireSSL">
            <summary>
            Gets if specified SASL mechanism is available only to SSL connection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.Realm">
            <summary>
            Gets or sets realm value.
            </summary>
            <remarks>Normally this is host or domain name.</remarks>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.GetUserInfo">
            <summary>
            Is called when authentication mechanism needs to get user info to complete atuhentication.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_DigestMd5.OnGetUserInfo(System.String)">
            <summary>
            Raises <b>GetUserInfo</b> event.
            </summary>
            <param name="userName">User name.</param>
            <returns>Returns specified user info.</returns>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login">
            <summary>
            Implements "LOGIN" authenticaiton.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="requireSSL">Specifies if this mechanism is available to SSL connections only.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.Reset">
            <summary>
            Resets any authentication state data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="clientResponse">Client sent SASL response.</param>
            <returns>Retunrns challange response what must be sent to client or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>clientResponse</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.IsAuthenticated">
            <summary>
            Gets if user has authenticated sucessfully.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.Name">
            <summary>
            Returns always "LOGIN".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.RequireSSL">
            <summary>
            Gets if specified SASL mechanism is available only to SSL connection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.Authenticate">
            <summary>
            Is called when authentication mechanism needs to authenticate specified user.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Login.OnAuthenticate(System.String,System.String,System.String)">
            <summary>
            Raises <b>Authenticate</b> event.
            </summary>
            <param name="authorizationID">Authorization ID.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns authentication result.</returns>
        </member>
        <member name="T:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain">
            <summary>
            Implements "PLAIN" authenticaiton. Defined in RFC 4616.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="requireSSL">Specifies if this mechanism is available to SSL connections only.</param>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.Reset">
            <summary>
            Resets any authentication state data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.Continue(System.Byte[])">
            <summary>
            Continues authentication process.
            </summary>
            <param name="clientResponse">Client sent SASL response.</param>
            <returns>Retunrns challange response what must be sent to client or null if authentication has completed.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>clientResponse</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.IsCompleted">
            <summary>
            Gets if the authentication exchange has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.IsAuthenticated">
            <summary>
            Gets if user has authenticated sucessfully.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.Name">
            <summary>
            Returns always "PLAIN".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.RequireSSL">
            <summary>
            Gets if specified SASL mechanism is available only to SSL connection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.UserName">
            <summary>
            Gets user login name.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.Authenticate">
            <summary>
            Is called when authentication mechanism needs to authenticate specified user.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AUTH.AUTH_SASL_ServerMechanism_Plain.OnAuthenticate(System.String,System.String,System.String)">
            <summary>
            Raises <b>Authenticate</b> event.
            </summary>
            <param name="authorizationID">Authorization ID.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns authentication result.</returns>
        </member>
        <member name="T:LumiSoft.Net.ByteBuilder">
            <summary>
            Implements byte data builder.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ByteBuilder.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ByteBuilder.Append(System.String)">
            <summary>
            Appends specified string value to the buffer. String is encoded with <see cref="P:LumiSoft.Net.ByteBuilder.Charset"/>.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is aised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.ByteBuilder.Append(System.Text.Encoding,System.String)">
            <summary>
            Appends specified string value to the buffer.
            </summary>
            <param name="charset">Character encoding.</param>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is aised when <b>charset</b> or <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.ByteBuilder.Append(System.Byte[])">
            <summary>
            Appends specified byte[] value to the buffer.
            </summary>
            <param name="value">Byte value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.ByteBuilder.Append(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Appends specified byte[] value to the buffer.
            </summary>
            <param name="value">Byte value.</param>
            <param name="offset">Offset in the value.</param>
            <param name="count">Number of bytes to append.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.ByteBuilder.ToByte">
            <summary>
            Returns this as byte[] data.
            </summary>
            <returns>Returns this as byte[] data.</returns>
        </member>
        <member name="P:LumiSoft.Net.ByteBuilder.Count">
            <summary>
            Gets number of bytes in byte builder buffer.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.ByteBuilder.Charset">
            <summary>
            Gets or sets default charset encoding used for string related operations.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value is set.</exception>
        </member>
        <member name="T:LumiSoft.Net.ErrorEventHandler">
            <summary>
            Represent the method what will handle Error event.
            </summary>
            <param name="sender">Delegate caller.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="T:LumiSoft.Net.Error_EventArgs">
            <summary>
            Provides data for the SysError event for servers.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Error_EventArgs.#ctor(System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Default constructor.
            </summary>
            <param name="x"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="P:LumiSoft.Net.Error_EventArgs.Exception">
            <summary>
            Occured error's exception.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Error_EventArgs.StackTrace">
            <summary>
            Occured error's stacktrace.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Error_EventArgs.Text">
            <summary>
            Gets comment text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Client.TransferType">
            <summary>
            Transfer type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.FTP.Client.TransferType.Ascii">
            <summary>
            ASCII transfer data.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.FTP.Client.TransferType.Binary">
            <summary>
            Binary transfer data. 
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Client.FTP_Client">
            <summary>
            This class implements FTP client. Defined in RFC 959.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection">
            <summary>
            This class implements FTP client data connection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.#ctor(LumiSoft.Net.FTP.Client.FTP_Client)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Data connection owner FTP client.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.SwitchToActive">
            <summary>
            Swtiches FTP data connection to active mode.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.SwitchToPassive(System.Net.IPEndPoint)">
            <summary>
            Swtiches FTP data connection to passive mode and connects to the sepcified FTP server.
            </summary>
            <param name="remoteEP">FTP server IP end point.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.ReadAll(System.IO.Stream)">
            <summary>
            Reads all data from FTP data connection and stores to the specified stream.
            </summary>
            <param name="stream">Stream where to store data.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.WriteAll(System.IO.Stream)">
            <summary>
            Writes all data from the specified stream to FTP data connection.
            </summary>
            <param name="stream">Stream which data to write.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.WaitFtpServerToConnect(System.Int32)">
            <summary>
            Waits FTP server to connect to this data connection.
            </summary>
            <param name="waitTime">Wait time out in seconds.</param>
            <returns>Returns connected network stream.</returns>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.CreateSocket">
            <summary>
            Creates new socket for data connection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.CleanUpSocket">
            <summary>
            Cleans up socket for reuse.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.TransferStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies all source stream data to the specified target stream.
            </summary>
            <param name="source">Source stream.</param>
            <param name="target">Target stream.</param>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.LocalEndPoint">
            <summary>
            Gets data connection local IP end point.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.LastActivity">
            <summary>
            Gets last time when data connection has read or written data.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.DataConnection.IsActive">
            <summary>
            Gets if there is active read or write job in data stream.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.#ctor">
            <summary>
            Default connection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Dispose">
            <summary>
            Clean up any resources being used. This method is thread-safe.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Disconnect">
            <summary>
            Closes connection to FTP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Reinitialize">
            <summary>
            Terminates the user and flushes all state information on the server. The connection is left open. 
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Authenticate(System.String,System.String)">
            <summary>
            Authenticates user. Authenticate method chooses strongest possible authentication method supported by server.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">Password.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or is already authenticated.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>userName</b> is null.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Noop">
            <summary>
            Send NOOP command to server. This method can be used for keeping connection alive(not timing out).
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Abort">
            <summary>
            Aborts an active file transfer.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.GetCurrentDir">
            <summary>
            Gets current working directory in the sFTP server.
            </summary>
            <returns>Returns current working directory.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.SetCurrentDir(System.String)">
            <summary>
            Changes the current working directory on the server.
            </summary>
            <param name="path">Directory absolute or relative path to the current working directory.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.GetList">
            <summary>
            Gets files and directories in the current server directory.
            </summary>
            <returns>Returns current working directory listing.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.GetList(System.String)">
            <summary>
            Gets files and directories in the current server directory.
            </summary>
            <param name="path">Directory or file name which listing to get. Value null means current directory will be listed.</param>
            <returns>Returns current working directory listing.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or FTP data connection has active read/write operation.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.GetFile(System.String,System.String)">
            <summary>
            Gets specified file from FTP server.
            </summary>
            <param name="path">File absolute or relative path to the current working directory.</param>
            <param name="storePath">Local file path where to store received file.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or FTP data connection has active read/write operation.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> or <b>storePath</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.GetFile(System.String,System.IO.Stream)">
            <summary>
            Gets specified file from FTP server.
            </summary>
            <param name="path">File absolute or relative path to the current working directory.</param>
            <param name="stream">Stream where to store received file.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or FTP data connection has active read/write operation.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> or <b>stream</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.AppendToFile(System.String,System.IO.Stream)">
            <summary>
            Appends specified data to the existing file. If existing file doesn't exist, it will be created.
            </summary>
            <param name="path">FTP server file absolute or relative path to the current working directory.</param>
            <param name="stream">Stream which data append to the specified FTP server file.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or FTP data connection has active read/write operation.</exception>
            <exception cref="T:System.ArgumentNullException">Is raied when <b>file</b> or <b>stream</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.StoreFile(System.String,System.String)">
            <summary>
            Stores specified file to FTP server.
            </summary>
            <param name="path">File absolute or relative path to the current working directory.</param>
            <param name="sourcePath">File path which to store to FTP server.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or FTP data connection has active read/write operation.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> or <b>sourcePath</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.StoreFile(System.String,System.IO.Stream)">
            <summary>
            Stores specified file to FTP server.
            </summary>
            <param name="path">File absolute or relative path to the current working directory.</param>
            <param name="stream">Stream which data to store to FTP server.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected or FTP data connection has active read/write operation.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> or <b>stream</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DeleteFile(System.String)">
            <summary>
            Deletes specified file from ftp server.
            </summary>
            <param name="path">File absolute or relative path to the current working directory.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Rename(System.String,System.String)">
            <summary>
            Renames file or directory to the new specified name.
            </summary>
            <param name="fromPath">Exisitng file or directory absolute or relative path to the current working directory.</param>
            <param name="toPath">New file or directory absolute or relative path to the current working directory.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>fromPath</b> or <b>toPath</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.CreateDirectory(System.String)">
            <summary>
            Creates a directory on the FTP server.
            </summary>
            <param name="path">Directory absolute or relative path to the current working directory.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.DeleteDirectory(System.String)">
            <summary>
            Deletes specified directory from FTP server.
            </summary>
            <param name="path">Directory absolute or relative path to the current working directory.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when FTP client is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>path</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.FTP.Client.FTP_ClientException">Is raised when FTP server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.SetTransferType(LumiSoft.Net.FTP.Client.TransferType)">
            <summary>
            Sets transfer typr.
            </summary>
            <param name="type">Transfer type.</param>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Port">
            <summary>
            Sends PORT command to server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.Pasv">
            <summary>
            Sends PASV command to server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.ReadResponse">
            <summary>
            Reads FTP server response line(s).
            </summary>
            <returns>Returns FTP server response.</returns>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_Client.OnConnected">
            <summary>
            This method is called after TCP client has sucessfully connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.TransferMode">
            <summary>
            Gets or sets data connection establish mode.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.DataIP">
            <summary>
            Gets or sets local IP address to use for data connection. Value null means that system will allocate it.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.DataPortRange">
            <summary>
            Gets or sets ports what data connection may use. Value null means that system will allocate it.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.GreetingText">
            <summary>
            Gets greeting text which was sent by FTP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and FTP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.ExtenededCapabilities">
            <summary>
            Gets FTP exteneded capabilities supported by FTP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and FTP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_Client.AuthenticatedUserIdentity">
            <summary>
            Gets session authenticated user identity, returns null if not authenticated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and FTP client is not connected.</exception>
        </member>
        <member name="T:LumiSoft.Net.FTP.Client.FTP_ClientException">
            <summary>
            FTP client exception.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.Client.FTP_ClientException.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="responseLine">FTP server response line.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseLine</b> is null.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_ClientException.StatusCode">
            <summary>
            Gets FTP status code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_ClientException.ResponseText">
            <summary>
            Gets FTP server response text after status code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.Client.FTP_ClientException.IsPermanentError">
            <summary>
            Gets if it is permanent FTP(5xx) error.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.FTP_ListItem">
            <summary>
            This class holds single file or directory in the FTP server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.FTP.FTP_ListItem.#ctor(System.String,System.Int64,System.DateTime,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">Directory or file name.</param>
            <param name="size">File size in bytes, zero for directory.</param>
            <param name="modified">Directory or file last modification time.</param>
            <param name="isDir">Specifies if list item is directory or file.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.FTP.FTP_ListItem.IsDir">
            <summary>
            Gets if current item is directory.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.FTP_ListItem.IsFile">
            <summary>
            Gets if current item is file.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.FTP_ListItem.Name">
            <summary>
            Gets the name of the file or directory.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.FTP_ListItem.Size">
            <summary>
            Gets file size in bytes.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.FTP.FTP_ListItem.Modified">
            <summary>
            Gets last time file or direcory was modified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.FTP.FTP_TransferMode">
            <summary>
            Specifies FTP data connection transfer mode.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.FTP.FTP_TransferMode.Active">
            <summary>
            Active transfer mode - FTP server opens data connection FTP client.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.FTP.FTP_TransferMode.Passive">
            <summary>
            Passive transfer mode - FTP client opens data connection FTP server.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.HostEntry">
            <summary>
            This class represent DNS host entry.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.HostEntry.#ctor(System.String,System.Net.IPAddress[],System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="hostName">DNS host name.</param>
            <param name="ipAddresses">Host IP addresses.</param>
            <param name="aliases">Host aliases(CNAME).</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>hostName</b> or <b>ipAddresses</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.HostEntry.HostName">
            <summary>
            Gets DNS host name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.HostEntry.Addresses">
            <summary>
            Gets list of IP addresses that are associated with a host.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.HostEntry.Aliases">
            <summary>
            Gets list of aliases(CNAME) that are associated with a host.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IAsyncOP">
            <summary>
            Represents asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client">
            <summary>
            IMAP v4 Client. Defined in RFC 3501.
            </summary>
            <example>
            <code>
            /*
             To make this code to work, you need to import following namespaces:
             using LumiSoft.Net.IMAP.Client; 
            */
            
            using(IMAP_Client imap = new IMAP_Client()){
                imap.Connect("host",143);
                // Call Capability even if you don't care about capabilities, it also controls IMAP client features.
                imap.Capability();
                
                imap.Authenticate(... choose auth method ...);
            
                // Do do your stuff ...
            }
            </code>
            </example>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdLine">
            <summary>
            This class represent IMAP single command line.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdLine.#ctor(System.Byte[],System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="data">Command line data.</param>
            <param name="logText">Command line log text.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> or <b>logText</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdLine.Data">
            <summary>
            Gets command line data.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdLine.LogText">
            <summary>
            Gets command line data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1">
            <summary>
            This class is base class for simple(request -> response) IMAP commands.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CmdLines">
            <summary>
            Gets command lines.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Disconnect">
            <summary>
            Closes connection to IMAP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not connected.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTls">
            <summary>
            Switches connection to secure connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.#ctor(System.Net.Security.RemoteCertificateValidationCallback,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="certCallback">SSL server certificate validation callback. Value null means any certificate is accepted.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.ProcessCmdResult(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Processes STARTTLS command result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP)">
            <summary>
            Executes STARTTLS command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.StartTlsAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Login(System.String,System.String)">
            <summary>
            Authenticates user using IMAP-LOGIN method.
            </summary>
            <param name="user">User name.</param>
            <param name="password">Password.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>user</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.#ctor(System.String,System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="user">User login name.</param>
            <param name="password">User password.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>user</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP)">
            <summary>
            Executes LOGIN command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.LoginAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Authenticate(LumiSoft.Net.AUTH.AUTH_SASL_Client)">
            <summary>
            Sends AUTHENTICATE command to IMAP server.
            </summary>
            <param name="sasl">SASL authentication.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sasl</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when IMAP server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.#ctor(LumiSoft.Net.AUTH.AUTH_SASL_Client)">
            <summary>
            Default constructor.
            </summary>
            <param name="sasl">SASL authentication.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sasl</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.AuthenticateCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when AUTHENTICATE command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.AuthenticateReadResponseCompleted(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP)">
            <summary>
            Is called when IMAP server response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP)">
            <summary>
            Starts sending AUTHENTICATE command to IMAP server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticateAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not connected or connection is already authenticated.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespaces">
            <summary>
            Gets IMAP server namespaces.
            </summary>
            <returns>Returns namespaces responses.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetNamespacesAsyncOP)">
            <summary>
            Executes NAMESPACE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolders(System.String)">
            <summary>
            Gets folders list.
            </summary>
            <param name="filter">Folders filter. If this value is null, all folders are returned.</param>
            <returns>Returns folders list.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
            <remarks>
            The character "*" is a wildcard, and matches zero or more
            characters at this position.  The character "%" is similar to "*",
            but it does not match a hierarchy delimiter.  If the "%" wildcard
            is the last character of a mailbox name argument, matching levels
            of hierarchy are also returned.
            </remarks>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="filter">Folders filter. If this value is null, all folders are returned.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <remarks>
            The character "*" is a wildcard, and matches zero or more
            characters at this position.  The character "%" is similar to "*",
            but it does not match a hierarchy delimiter.  If the "%" wildcard
            is the last character of a mailbox name argument, matching levels
            of hierarchy are also returned.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFoldersAsyncOP)">
            <summary>
            Executes LIST command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolder(System.String)">
            <summary>
            Creates new folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CreateFolderAsyncOP)">
            <summary>
            Executes CREATE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolder(System.String)">
            <summary>
            Deletes specified folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAsyncOP)">
            <summary>
            Executes DELETE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolder(System.String,System.String)">
            <summary>
            Renames exisiting folder name.
            </summary>
            <param name="folder">Folder name with path to rename.</param>
            <param name="newFolder">New folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>newFolder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsyncOP.#ctor(System.String,System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="newFolder">New folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>newFolder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.RenameFolderAsyncOP)">
            <summary>
            Executes RENAME command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFolders(System.String)">
            <summary>
            Get user subscribed folders list.
            </summary>
            <param name="filter">Folders filter. If this value is null, all folders are returned.</param>
            <returns>Returns subscribed folders list.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
            <remarks>
            The character "*" is a wildcard, and matches zero or more
            characters at this position.  The character "%" is similar to "*",
            but it does not match a hierarchy delimiter.  If the "%" wildcard
            is the last character of a mailbox name argument, matching levels
            of hierarchy are also returned.
            </remarks>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="filter">Folders filter. If this value is null, all folders are returned.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <remarks>
            The character "*" is a wildcard, and matches zero or more
            characters at this position.  The character "%" is similar to "*",
            but it does not match a hierarchy delimiter.  If the "%" wildcard
            is the last character of a mailbox name argument, matching levels
            of hierarchy are also returned.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetSubscribedFoldersAsyncOP)">
            <summary>
            Executes LSUB command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolder(System.String)">
            <summary>
            Subscribes specified folder.
            </summary>
            <param name="folder">Foler name with path.</param>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SubscribeFolderAsyncOP)">
            <summary>
            Executes SUBSCRIBE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolder(System.String)">
            <summary>
            Unsubscribes specified folder.
            </summary>
            <param name="folder">Foler name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.UnsubscribeFolderAsyncOP)">
            <summary>
            Executes UNSUBSCRIBE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatus(System.String)">
            <summary>
            Gets the specified folder status.
            </summary>
            <param name="folder">Folder name with path.</param>
            <returns>Returns STATUS responses.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.FolderStatusAsyncOP)">
            <summary>
            Executes STATUS command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolder(System.String)">
            <summary>
            Selects specified folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.ProecessCmdResult(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Processes command result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP)">
            <summary>
            Executes SELECT command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectFolderAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolder(System.String)">
            <summary>
            Selects folder as read-only, no changes to messages or flags not possible.
            </summary>
            <param name="folder">Folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.ProecessCmdResult(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Processes command result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP)">
            <summary>
            Executes EXAMINE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ExamineFolderAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRoots(System.String)">
            <summary>
            Gets specified folder quota roots and their quota resource usage.
            </summary>
            <param name="folder">Folder name with path.</param>
            <returns>Returns quota-roots and their resource limit entries.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuotaRootsAsyncOP)">
            <summary>
            Executes STATUS command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuota(System.String)">
            <summary>
            Gets the specified folder quota-root resource limit entries.
            </summary>
            <param name="quotaRootName">Quota root name.</param>
            <returns>Returns quota-root resource limit entries.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>quotaRootName</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="quotaRootName">Quota root name.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>quotaRootName</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetQuotaAsyncOP)">
            <summary>
            Executes GETQUOTA command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAcl(System.String)">
            <summary>
            Gets the specified folder ACL entries.
            </summary>
            <param name="folder">Folder name with path.</param>
            <returns>Returns folder ACL entries.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderAclAsyncOP)">
            <summary>
            Executes GETACL command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAcl(System.String,System.String,LumiSoft.Net.IMAP.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_ACL_Flags)">
            <summary>
            Sets the specified folder ACL.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="user">User name.</param>
            <param name="setType">Specifies how flags are set.</param>
            <param name="permissions">ACL permissions.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>user</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsyncOP.#ctor(System.String,System.String,LumiSoft.Net.IMAP.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_ACL_Flags,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="identifier">ACL entry identifier. Normally this is user or group name.</param>
            <param name="setType">Specifies how flags are set.</param>
            <param name="permissions">ACL permissions.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b> or <b>identifier</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SetFolderAclAsyncOP)">
            <summary>
            Executes SETACL command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAcl(System.String,System.String)">
            <summary>
            Deletes the specified folder user ACL entry.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="user">User name.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>user</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsyncOP.#ctor(System.String,System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="identifier">ACL entry identifier. Normally this is user or group name.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b> or <b>identifier</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.DeleteFolderAclAsyncOP)">
            <summary>
            Executes DELETEACL command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRights(System.String,System.String)">
            <summary>
            Gets rights which can be set for the specified identifier.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="identifier">ACL entry identifier. Normally this is user or group name.</param>
            <returns>Returns LISTRIGHTS responses.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when<b>folder</b> or <b>identifier</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsyncOP.#ctor(System.String,System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="identifier">ACL entry identifier. Normally this is user or group name.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b> or <b>identifier</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderRightsAsyncOP)">
            <summary>
            Executes LISTRIGHTS command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRights(System.String)">
            <summary>
            Gets myrights to the specified folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <returns>Returns MYRIGHTS responses.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRightsAsyncOP">
            <summary>
            This class represents <see cref="T:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRightsAsyncOP"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRightsAsyncOP.#ctor(System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRightsAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRightsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderMyRightsAsyncOP)">
            <summary>
            Executes MYRIGHTS command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessage(System.String,System.String[],System.DateTime,System.IO.Stream,System.Int32)">
            <summary>
            Stores specified message to the specified folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="flags">Message flags. Value null means no flags. For example: new string[]{"\Seen","\Answered"}.</param>
            <param name="internalDate">Message internal data. DateTime.MinValue means server will allocate it.</param>
            <param name="message">Message stream.</param>
            <param name="count">Number of bytes send from <b>message</b> stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception> 
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessage(System.String,LumiSoft.Net.IMAP.IMAP_t_MsgFlags,System.DateTime,System.IO.Stream,System.Int32)">
            <summary>
            Stores specified message to the specified folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="flags">Message flags.</param>
            <param name="internalDate">Message internal data. DateTime.MinValue means server will allocate it.</param>
            <param name="message">Message stream.</param>
            <param name="count">Number of bytes send from <b>message</b> stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b>,<b>flags</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessage(LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP)">
            <summary>
            Stores specified message to the specified folder.
            </summary>
            <param name="op">Store message operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_t_MsgFlags,System.DateTime,System.IO.Stream,System.Int64,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="folder">Folder name with path.</param>
            <param name="flags">Message flags. Value null means no flags.</param>
            <param name="internalDate">Message internal data. DateTime.MinValue means server will allocate it.</param>
            <param name="message">Message stream.</param>
            <param name="count">Number of bytes send from <b>message</b> stream.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b> or <b>message</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.ProcessCmdSendingResult(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Processes intial command line sending result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.ProcessMsgSendingResult(LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP)">
            <summary>
            Processes message literal sending result.
            </summary>
            <param name="writeOP">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.AppendUid">
            <summary>
            Gets <b>APPENDUID</b> optional response. Returns null if IMAP server doesn't support <b>UIDPLUS</b> extention.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP)">
            <summary>
            Executes APPEND command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Enable(System.String[])">
            <summary>
            Enables the specified IMAP capabilities in server.
            </summary>
            <param name="capabilities">IMAP capabilities.</param>
            <returns>Returns enabled capabilities info.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>capabilities</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsyncOP.#ctor(System.String[],System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="capabilities">Folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>capabilities</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.EnableAsyncOP)">
            <summary>
            Executes ENABLE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.EnableUtf8">
            <summary>
            Enables UTF-8 support in IMAP server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state(not-connected,not-authenticated or selected state).</exception>
            <remarks>Before calling this method, you need to check IMAP capability list to see if server supports "UTF8=ACCEPT" or "UTF8=ALL" capability.
            For more info see <see href="http://tools.ietf.org/html/rfc5738">rfc5738</see>.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolder">
            <summary>
            Closes selected folder, all messages marked as Deleted will be expunged.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.ProecessCmdResult(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Processes command result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP)">
            <summary>
            Executes CLOSE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CloseFolderAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Fetch(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,LumiSoft.Net.IMAP.IMAP_t_Fetch_i[],System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Fetches specified message items.
            </summary>
            <param name="uid">Specifies if argument <b>seqSet</b> contains messages UID or sequence numbers.</param>
            <param name="seqSet">Sequence set of messages to fetch.</param>
            <param name="items">Fetch items to fetch.</param>
            <param name="callback">Optional callback to be called for each server returned untagged response.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>items</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
            <remarks>Fetch raises <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.UntaggedResponse"/> for ecach fetched message.</remarks>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsyncOP.#ctor(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,LumiSoft.Net.IMAP.IMAP_t_Fetch_i[],System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Specifies if argument <b>seqSet</b> contains messages UID or sequence numbers.</param>
            <param name="seqSet">Sequence set of messages to fetch.</param>
            <param name="items">Fetch items to fetch.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>items</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.FetchAsyncOP)">
            <summary>
            Starts executing FETCH command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Search(System.Boolean,System.Text.Encoding,LumiSoft.Net.IMAP.IMAP_Search_Key)">
            <summary>
            Searches message what matches specified search criteria.
            </summary>
            <param name="uid">If true then UID SERACH, otherwise normal SEARCH.</param>
            <param name="charset">Charset used in search criteria. Value null means ASCII. The UTF-8 is reccomended value non ASCII searches.</param>
            <param name="criteria">Search criteria.</param>
            <returns>Returns search expression matehced messages sequence-numbers or UIDs(This depends on argument <b>uid</b> value).</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is rised when <b>criteria</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsyncOP.#ctor(System.Boolean,System.Text.Encoding,LumiSoft.Net.IMAP.IMAP_Search_Key,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Specifies if argument <b>seqSet</b> contains messages UID or sequence numbers.</param>
            <param name="charset">Charset used in search criteria. Value null means ASCII. The UTF-8 is reccomended value non ASCII searches.</param>
            <param name="criteria">Search criteria.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>criteria</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SearchAsyncOP)">
            <summary>
            Starts executing SEARCH command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlags(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,LumiSoft.Net.IMAP.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_t_MsgFlags)">
            <summary>
            Stores specified message flags to the sepcified messages.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or sequence-numbers.</param>
            <param name="seqSet">Messages sequence-set.</param>
            <param name="setType">Specifies how flags are set.</param>
            <param name="flags">Message flags.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>flags</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsyncOP.#ctor(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,System.Boolean,LumiSoft.Net.IMAP.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_t_MsgFlags,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or message-numberss.</param>
            <param name="seqSet">Messages sequence set.</param>
            <param name="silent">If true, no FETCH (FLAGS) response returned by server.</param>
            <param name="setType">Specifies how flags are set.</param>
            <param name="msgFlags">Message flags.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>msgFlags</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlagsAsyncOP)">
            <summary>
            Executes STORE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessages(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,System.String)">
            <summary>
            Copies specified messages from current selected folder to the specified target folder.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or message-numberss.</param>
            <param name="seqSet">Messages sequence set.</param>
            <param name="targetFolder">Target folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>targetFolder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessages(LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP)">
            <summary>
            Copies specified messages from current selected folder to the specified target folder.
            </summary>
            <param name="op">Copy messages operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP.#ctor(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or message-numberss.</param>
            <param name="seqSet">Messages sequence set.</param>
            <param name="targetFolder">Target folder name with path.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>targetFolder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP.CopyUid">
            <summary>
            Gets <b>COPYUID</b> optional response. Returns null if IMAP server doesn't support <b>UIDPLUS</b> extention.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessagesAsyncOP)">
            <summary>
            Executes COPY command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.MoveMessages(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet,System.String,System.Boolean)">
            <summary>
            Moves specified messages from current selected folder to the specified target folder.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or message-numberss.</param>
            <param name="seqSet">Messages sequence set.</param>
            <param name="targetFolder">Target folder name with path.</param>
            <param name="expunge">If ture messages are expunged from selected folder, otherwise they are marked as <b>Deleted</b>.
            Note: If true - then all messages marked as <b>Deleted</b> are expunged !</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Expunge">
            <summary>
            Deletes all messages in selected folder which has "Deleted" flag set.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ExpungeAsyncOP)">
            <summary>
            Executes EXPUNGE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>             
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.Done">
            <summary>
            Starts exiting IDLE state.
            </summary>
            <exception cref="T:System.InvalidOperationException">Is raised when this not in valid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.ProecessCmdResult(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Processes command result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.ProcessReadFinalResponseResult(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP)">
            <summary>
            Processes IDLE final(final response after +) response reading result.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.IdleAsyncOP)">
            <summary>
            Executes IDLE command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Capability">
            <summary>
            Gets IMAP server capabilities.
            </summary>
            <returns>Returns CAPABILITIES responses.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.CapabilityAsyncOP)">
            <summary>
            Executes CAPABILITY command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Noop">
            <summary>
            Sends NOOP command to IMAP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsyncOP.OnInitCmdLine(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Is called when we need to init command line info.
            </summary>
            <param name="imap">IMAP client.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.NoopAsyncOP)">
            <summary>
            Executes NOOP command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.CmdAsyncOP`1.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.OnConnected(LumiSoft.Net.TCP.TCP_Client.CompleteConnectCallback)">
            <summary>
            This method is called when TCP client has sucessfully connected.
            </summary>
            <param name="callback">Callback to be called to complete connect operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ProcessGreetingResult(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP,LumiSoft.Net.TCP.TCP_Client.CompleteConnectCallback)">
            <summary>
            Processes IMAP server greeting reading result.
            </summary>
            <param name="op">Reading operation.</param>
            <param name="connectCallback">Callback to be called to complete connect operation.</param>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.#ctor(System.Byte[],System.String,System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="cmdLine">IMAP command line.</param>
            <param name="cmdLineLogText">IMAP command line log text.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cmdLine</b> or <b>cmdLineLogText</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.#ctor(LumiSoft.Net.IMAP.Client.IMAP_Client.CmdLine[],System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="cmdLines">IMAP command lines.</param>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cmdLines</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.SendCmdLine">
            <summary>
            Sends next command line to IMAP server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.ProcessCmdLineSendResult(System.IAsyncResult)">
            <summary>
            Processes command line sending result.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP)">
            <summary>
            Sends IMAP command to server and reads server responses.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCmdAndReadRespAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any oth the arguments has invalid value.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.Reuse">
            <summary>
            Prepares this class for reuse.
            </summary>
            <exception cref="T:System.InvalidOperationException">Is raised when this is not valid state.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.m_pReadLineOP_Completed(System.Object,LumiSoft.Net.EventArgs{LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP})">
            <summary>
            Is called when TcpStream.ReadLine has completed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.ReadLineCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when read line has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.FetchParsingCompleted(System.Object,LumiSoft.Net.EventArgs{System.Exception})">
            <summary>
            This method is called when FETCH parsing has completed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.Response">
            <summary>
            Returns IMAP server response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP)">
            <summary>
            Starts reading IMAP server response.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any oth the arguments has invalid value.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP">
            <summary>
            This class represents <see cref="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.#ctor(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Default constructor.
            </summary>
            <param name="callback">Optional callback to be called for each received untagged response.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.ResponseReadingCompleted(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP)">
            <summary>
            Is called when IMAP server response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponseAsyncOP">Is raiswed when <b>op</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.FinalResponse">
            <summary>
            Returns IMAP server final response.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP)">
            <summary>
            Starts reading IMAP server final(OK/BAD/NO/+) response.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponseAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any oth the arguments has invalid value.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Store stream.</param>
            <param name="literalSize">String literal size in bytes.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.Start(LumiSoft.Net.IMAP.Client.IMAP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner IMAP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.ReadingCompleted(System.IAsyncResult)">
            <summary>
            This method is called when string-literal reading has completed.
            </summary>
            <param name="result">Asynchronous result.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.Stream">
            <summary>
            Gets literal stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsync(LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP)">
            <summary>
            Starts reading string-literal from IMAP server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteralAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any oth the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SupportsCapability(System.String)">
            <summary>
            Gets if IMAP server supports the specified capability.
            </summary>
            <param name="capability">IMAP capability.</param>
            <returns>Return true if IMAP server supports the specified capability.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>capability</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.AuthenticatedUserIdentity">
            <summary>
            Gets session authenticated user identity, returns null if not authenticated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and IMAP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.GreetingText">
            <summary>
            Get IMAP server greeting text.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and IMAP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.Capabilities">
            <summary>
            Get IMAP server(CAPABILITY command cached) supported capabilities.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and IMAP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.FolderSeparator">
            <summary>
            Gets IMAP server folder separator.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and IMAP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.SelectedFolder">
            <summary>
            Gets selected folder. Returns null if no folder selected.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and IMAP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client.IdleOP">
            <summary>
            Gets active IDLE operation or null if no active IDLE operation.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and IMAP client is not connected.</exception>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.UntaggedStatusResponse">
            <summary>
            This event is raised when IMAP server sends untagged status response.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.OnUntaggedStatusResponse(LumiSoft.Net.IMAP.IMAP_r_u)">
            <summary>
            Raises <b>UntaggedStatusResponse</b> event.
            </summary>
            <param name="response">Untagged response.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.UntaggedResponse">
            <summary>
            Is raised when IMAP server sends any untagged response.
            </summary>
            <remarks>NOTE: This event may raised from thread pool thread, so UI event handlers need to use Invoke.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.OnUntaggedResponse(LumiSoft.Net.IMAP.IMAP_r_u)">
            <summary>
            Raises <b>UntaggedResponse</b> event.
            </summary>
            <param name="response">Untagged IMAP server response.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.MessageExpunged">
            <summary>
            This event is raised when IMAP server expunges message and sends EXPUNGE response.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.OnMessageExpunged(LumiSoft.Net.IMAP.IMAP_r_u_Expunge)">
            <summary>
            Raises <b>MessageExpunged</b> event.
            </summary>
            <param name="response">Expunge response.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchGetStoreStream">
            <summary>
            This event is raised when FETCH response parsing allows to specify stream where to store binary data.
            </summary>
            <remarks>Thhis event is raised for FETCH BODY[]/RFC822/RFC822.HEADER/RFC822.TEXT data-items.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.OnFetchGetStoreStream(LumiSoft.Net.IMAP.Client.IMAP_Client_e_FetchGetStoreStream)">
            <summary>
            Raises <b>FetchGetStoreStream</b> event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadResponse(System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_Capability},LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_List},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_LSub},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_Acl},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_Response_MyRights},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_ListRights},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_Status},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_Quota},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot},System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_Namespace},LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler,System.Collections.Generic.List{LumiSoft.Net.IMAP.IMAP_r_u_Enable})">
            <summary>
            Reads IMAP server responses.
            </summary>
            <param name="folderInfo">Folder info where to store folder related data.
            This applies to SELECT or EXAMINE command only. This value can be null.
            </param>
            <param name="capability">List wehere to store CAPABILITY command result. This value can be null.</param>
            <param name="search">List wehere to store SEARCH command result. This value can be null.</param>
            <param name="list">List where to store LIST command result. This value can be null.</param>
            <param name="lsub">List where to store LSUB command result. This value can be null.</param>
            <param name="acl">List where to store ACL command result. This value can be null.</param>
            <param name="myRights">List where to store MYRIGHTS command result. This value can be null.</param>
            <param name="listRights">List where to store LISTRIGHTS command result. This value can be null.</param>
            <param name="status">List where to store STATUS command result. This value can be null.</param>
            <param name="quota">List where to store QUOTA command result. This value can be null.</param>
            <param name="quotaRoot">List where to store QUOTAROOT command result. This value can be null.</param>
            <param name="nspace">List where to store NAMESPACE command result. This value can be null.</param>
            <param name="fetchHandler">Fetch data-items handler.</param>
            <param name="enable">List where to store ENABLE command result. This value can be null.</param>
            <returns>Returns command completion status response.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Search(System.Boolean,System.String,System.String)">
            <summary>
            Searches message what matches specified search criteria.
            </summary>
            <param name="uid">If true then UID SERACH, otherwise normal SEARCH.</param>
            <param name="charset">Charset used in search criteria. Value null means ASCII. The UTF-8 is reccomended value non ASCII searches.</param>
            <param name="criteria">Search criteria.</param>
            <returns>Returns search expression matehced messages sequence-numbers or UIDs(This depends on argument <b>uid</b> value).</returns>
            <exception cref="T:System.ArgumentNullException">Is rised when <b>criteria</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state(not-connected, not-authenticated or not-selected state).</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.Fetch(System.Boolean,LumiSoft.Net.IMAP.IMAP_SequenceSet,LumiSoft.Net.IMAP.IMAP_Fetch_DataItem[],LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler)">
            <summary>
            Fetches specified message items.
            </summary>
            <param name="uid">Specifies if argument <b>seqSet</b> contains messages UID or sequence numbers.</param>
            <param name="seqSet">Sequence set of messages to fetch.</param>
            <param name="items">Fetch items to fetch.</param>
            <param name="handler">Fetch responses handler.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b>,<b>items</b> or <b>handler</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state(not-connected, not-authenticated or not-selected state).</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessage(System.String,LumiSoft.Net.IMAP.IMAP_MessageFlags,System.DateTime,System.IO.Stream,System.Int32)">
            <summary>
            Stores specified message to the specified folder.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="flags">Message flags.</param>
            <param name="internalDate">Message internal data. DateTime.MinValue means server will allocate it.</param>
            <param name="message">Message stream.</param>
            <param name="count">Number of bytes send from <b>message</b> stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlags(System.Boolean,LumiSoft.Net.IMAP.IMAP_SequenceSet,LumiSoft.Net.IMAP.IMAP_Flags_SetType,System.String[])">
            <summary>
            Stores specified message flags to the sepcified messages.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or sequence-numbers.</param>
            <param name="seqSet">Messages sequence-set.</param>
            <param name="setType">Specifies how flags are set.</param>
            <param name="flags">Message flags. Value null means no flags. For example: new string[]{"\Seen","\Answered"}.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>        
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.StoreMessageFlags(System.Boolean,LumiSoft.Net.IMAP.IMAP_SequenceSet,LumiSoft.Net.IMAP.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_MessageFlags)">
            <summary>
            Stores specified message flags to the sepcified messages.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or sequence-numbers.</param>
            <param name="seqSet">Messages sequence-set.</param>
            <param name="setType">Specifies how flags are set.</param>
            <param name="flags">Message flags.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.CopyMessages(System.Boolean,LumiSoft.Net.IMAP.IMAP_SequenceSet,System.String)">
            <summary>
            Copies specified messages from current selected folder to the specified target folder.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or message-numberss.</param>
            <param name="seqSet">Messages sequence set.</param>
            <param name="targetFolder">Target folder name with path.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>targetFolder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.MoveMessages(System.Boolean,LumiSoft.Net.IMAP.IMAP_SequenceSet,System.String,System.Boolean)">
            <summary>
            Moves specified messages from current selected folder to the specified target folder.
            </summary>
            <param name="uid">Specifies if <b>seqSet</b> contains UIDs or message-numberss.</param>
            <param name="seqSet">Messages sequence set.</param>
            <param name="targetFolder">Target folder name with path.</param>
            <param name="expunge">If ture messages are expunged from selected folder, otherwise they are marked as <b>Deleted</b>.
            Note: If true - then all messages marked as <b>Deleted</b> are expunged !</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> or <b>targetFolder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state(not-connected, not-authenticated or not-selected state).</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.GetFolderQuota(System.String)">
            <summary>
            Gets the specified folder quota-root resource limit entries.
            </summary>
            <param name="quotaRootName">Quota root name.</param>
            <returns>Returns quota-root resource limit entries.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when IMAP client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>quotaRootName</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">Is raised when server refuses to complete this command and returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader">
            <summary>
            This class implements FETCH response reader.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader.#ctor(LumiSoft.Net.IMAP.Client.IMAP_Client,System.String,LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler)">
            <summary>
            Default constructor.
            </summary>
            <param name="imap">IMAP client.</param>
            <param name="fetchLine">Initial FETCH response line.</param>
            <param name="handler">Fetch data-items handler.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>imap</b>,<b>fetchLine</b> or <b>handler</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader.Start">
            <summary>
            Starts reading FETCH response.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader.GetReader">
            <summary>
            Gets FETCH current line data reader.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader.ReadString">
            <summary>
            Reads string. Quoted-string-string-literal and NIL supported.
            </summary>
            <returns>Returns readed string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteral(System.Int32)">
            <summary>
            Reads IMAP <b>string-literal</b> from remote endpoint.
            </summary>
            <param name="count">Number of bytes to read.</param>
            <returns>Returns readed string-literal.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadStringLiteral(System.Int32,System.IO.Stream)">
            <summary>
            Reads IMAP <b>string-literal</b> from remote endpoint.
            </summary>
            <param name="count">Number of bytes to read.</param>
            <param name="stream">Stream where to store readed data.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.SendCommand(System.String)">
            <summary>
            Send specified command to the IMAP server.
            </summary>
            <param name="command">Command to send.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>command</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client.ReadFinalResponse(System.EventHandler{LumiSoft.Net.EventArgs{LumiSoft.Net.IMAP.IMAP_r_u}})">
            <summary>
            Reads final response from IMAP server.
            </summary>
            <param name="callback">Optional callback to be called for each server returned untagged response.</param>
            <returns>Returns final response.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_ClientException">
            <summary>
            IMAP client exception.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_ClientException.#ctor(LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="response">IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_ClientException.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="responseLine">IMAP server response line.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseLine</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_ClientException.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="responseCode">IMAP response code(BAD,NO).</param>
            <param name="responseText">Response text.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseCode</b> or <b>responseText</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_ClientException.Response">
            <summary>
            Gets IMAP server response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_ClientException.StatusCode">
            <summary>
            Gets IMAP server error status code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_ClientException.ResponseText">
            <summary>
            Gets IMAP server response text after status code.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart">
            <summary>
            This class represent IMAP command part.
            </summary>
            <remarks>
            Complete command consits of multiple parts.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart.#ctor(LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart_Type,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="type">Command part type.</param>
            <param name="data">Command data.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart.Type">
            <summary>
            Gets command part ype.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart.Value">
            <summary>
            Gets command part string value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart_Type">
            <summary>
            This class specified IMAP command part type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart_Type.Constant">
            <summary>
            Command part is constant value.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart_Type.String">
            <summary>
            Command part is IMAP string.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_e_FetchGetStoreStream">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client.FetchGetStoreStream">IMAP_Client.FetchGetStoreStream</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_e_FetchGetStoreStream.#ctor(LumiSoft.Net.IMAP.IMAP_r_u_Fetch,LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i)">
            <summary>
            Default constructor.
            </summary>
            <param name="fetch">Fetch response.</param>
            <param name="dataItem">Fetch data-item.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>fetch</b> or <b>dataItem</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_e_FetchGetStoreStream.FetchResponse">
            <summary>
            Gets related FETCH response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_e_FetchGetStoreStream.DataItem">
            <summary>
            Gets FETCH data-item which stream to get.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_e_FetchGetStoreStream.Stream">
            <summary>
            Gets stream where to store data-item data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder">
            <summary>
            This class represents IMAP client selected folder.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">Folder name with path.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference value.</exception>
            <exception cref="T:System.ArgumentException">Is riased when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.ToString">
            <summary>
            Returns this object as human readable string.
            </summary>
            <returns>Returns this object as human readable string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetUidValidity(System.Int64)">
            <summary>
            Sets UidValidity property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetFlags(System.String[])">
            <summary>
            Sets Flags property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetPermanentFlags(System.String[])">
            <summary>
            Sets PermanentFlags property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetReadOnly(System.Boolean)">
            <summary>
            Sets IsReadOnly property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetUidNext(System.Int64)">
            <summary>
            Sets UidNext property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetFirstUnseen(System.Int32)">
            <summary>
            Sets FirstUnseen property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetMessagesCount(System.Int32)">
            <summary>
            Sets MessagesCount property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.SetRecentMessagesCount(System.Int32)">
            <summary>
            Sets RecentMessagesCount property value.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.StringArrayToString(System.String[])">
            <summary>
            Coneverts string array to comma separated value.
            </summary>
            <param name="value">String array.</param>
            <returns>Returns string array as comma separated value.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.Name">
            <summary>
            Gets selected folder name(path included).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.UidValidity">
            <summary>
            Gets folder UID value. Value null means IMAP server doesn't support <b>UIDVALIDITY</b> feature.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.Flags">
            <summary>
            Gets flags what folder supports.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.PermanentFlags">
            <summary>
            Gets permanent flags what folder can store.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.IsReadOnly">
            <summary>
            Gets if folder is read-only or read-write.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.UidNext">
            <summary>
            Gets next predicted message UID. Value -1 means that IMAP server doesn't support it.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.FirstUnseen">
            <summary>
            Gets first unseen message sequence number. Value -1 means no unseen message.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.MessagesCount">
            <summary>
            Gets number of messages in this folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_SelectedFolder.RecentMessagesCount">
            <summary>
            Gets number of recent messages in this folder.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler">
            <summary>
            This class provides IMAP FETCH response handling methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.SetCurrentSeqNo(System.Int32)">
            <summary>
            Sets <b>CurrentSeqNo</b> property value.
            </summary>
            <param name="seqNo">Message sequnece number.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.CurrentSeqNo">
            <summary>
            Gets current message sequence number. Value -1 means no current message.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.NextMessage">
            <summary>
            This event is raised when current message changes and next message FETCH data-items will be returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnNextMessage">
            <summary>
            Raises <b>NextMessage</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Body">
            <summary>
            Is raised when current message FETCH BODY[] data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnBody(LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs)">
            <summary>
            Raises <b>Body</b> event.
            </summary>
            <param name="eArgs">Event args.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Envelope">
            <summary>
            Is raised when current message FETCH ENVELOPE data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnEnvelope(LumiSoft.Net.IMAP.IMAP_Envelope)">
            <summary>
            Raises <b>Envelope</b> event.
            </summary>
            <param name="envelope">Envelope value.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Flags">
            <summary>
            Is raised when current message FETCH FLAGS data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnFlags(System.String[])">
            <summary>
            Raises <b>Flags</b> event.
            </summary>
            <param name="flags">Message flags.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.InternalDate">
            <summary>
            Is raised when current message FETCH INTERNALDATE data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnInternalDate(System.DateTime)">
            <summary>
            Raises <b>InternalDate</b> event.
            </summary>
            <param name="date">Message IMAP server internal date.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Rfc822">
            <summary>
            Is raised when current message FETCH RFC822 data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnRfc822(LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Rfc822_EArgs)">
            <summary>
            Raises <b>Rfc822</b> event.
            </summary>
            <param name="eArgs">Event args.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Rfc822Header">
            <summary>
            Is raised when current message FETCH RFC822.HEADER data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnRfc822Header(System.String)">
            <summary>
            Raises <b>Rfc822Text</b> event.
            </summary>
            <param name="header">Message header.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Rfc822Size">
            <summary>
            Is raised when current message FETCH RFC822.SIZE data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnSize(System.Int32)">
            <summary>
            Raises <b>Rfc822Size</b> event.
            </summary>
            <param name="size">Message size in bytes.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Rfc822Text">
            <summary>
            Is raised when current message FETCH RFC822.TEXT data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnRfc822Text(System.String)">
            <summary>
            Raises <b>Rfc822Text</b> event.
            </summary>
            <param name="text">Message body text.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.UID">
            <summary>
            Is raised when current message FETCH UID data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnUID(System.Int64)">
            <summary>
            Raises <b>UID</b> event.
            </summary>
            <param name="uid">Message UID value.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.X_GM_MSGID">
            <summary>
            Is raised when current message FETCH GMail X-GM-MSGID data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnX_GM_MSGID(System.UInt64)">
            <summary>
            Raises <b>X_GM_MSGID</b> event.
            </summary>
            <param name="msgID">Message ID.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.X_GM_THRID">
            <summary>
            Is raised when current message FETCH GMail X-GM-THRID data-item is returned.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.OnX_GM_THRID(System.UInt64)">
            <summary>
            Raises <b>X_GM_THRID</b> event.
            </summary>
            <param name="threadID">Message thread ID.</param>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs">
            <summary>
            This class represents FETCH BODY[] data item. Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs.#ctor(System.String,System.Int32)">
            <summary>
            Defualt constructor.
            </summary>
            <param name="bodySection">Body section value.</param>
            <param name="offset">Body data offset.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs.BodySection">
            <summary>
            Gets BODY section value. Value null means not specified(full message).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs.Offset">
            <summary>
            Gets BODY data returning start offset. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs.Stream">
            <summary>
            Gets or sets stream where BODY data is stored.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs.StoringCompleted">
            <summary>
            This method is called when message storing has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Body_EArgs.OnStoringCompleted">
            <summary>
            Raises <b>StoringCompleted</b> event.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Rfc822_EArgs">
            <summary>
            This class provides data for the <see cref="E:LumiSoft.Net.IMAP.Client.IMAP_Client_FetchHandler.Rfc822"/> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Rfc822_EArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Rfc822_EArgs.Stream">
            <summary>
            Gets or sets stream where RFC822 message is stored.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Rfc822_EArgs.StoringCompleted">
            <summary>
            This method is called when message storing has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Client.IMAP_Client_Fetch_Rfc822_EArgs.OnStoringCompleted">
            <summary>
            Raises <b>StoringCompleted</b> event.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Acl_Entry">
            <summary>
            This class represents IMAP ACL entry. Defined in RFC 4314 3.6.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Acl_Entry.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="identifier">ACL identifier. Normally this is user or group name.</param>
            <param name="rights">ACL rights string.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>identifier</b> or <b>rights</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Acl_Entry.Identifier">
            <summary>
            Gets ACL identifier. Normally this is user or group name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Acl_Entry.Rights">
            <summary>
            Gets rights.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_ACL_Flags">
            <summary>
            IMAP ACL(access control list) rights.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.None">
            <summary>
            No permissions at all.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.l">
            <summary>
            Lookup (mailbox is visible to LIST/LSUB commands).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.r">
            <summary>
            Read (SELECT the mailbox, perform CHECK, FETCH, PARTIAL,SEARCH, COPY from mailbox).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.s">
            <summary>
            Keep seen/unseen information across sessions (STORE SEEN flag).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.w">
            <summary>
            Write (STORE flags other than SEEN and DELETED).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.i">
            <summary>
            Insert (perform APPEND, COPY into mailbox).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.p">
            <summary>
            Post (send mail to submission address for mailbox,not enforced by IMAP4 itself).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.c">
            <summary>
            Create (CREATE new sub-mailboxes in any implementation-defined hierarchy).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.d">
            <summary>
            Delete (STORE DELETED flag, perform EXPUNGE).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.a">
            <summary>
            Administer (perform SETACL).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_ACL_Flags.All">
            <summary>
            All permissions
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Flags_SetType">
            <summary>
            IMAP flags store type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_Flags_SetType.Add">
            <summary>
            Flags are added to existing ones.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_Flags_SetType.Remove">
            <summary>
            Flags are removed from existing ones.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_Flags_SetType.Replace">
            <summary>
            Flags are replaced.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding">
            <summary>
            This class specifies IMAP mailbox name encoding.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding.None">
            <summary>
            Mailbox names are not encoded.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding.ImapUtf7">
            <summary>
            Mailbox names are encoded with IMAP UTF-7 encoding. For more info see <see href="http://tools.ietf.org/html/rfc3501#section-5.1.3">rfc3501</see>.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding.ImapUtf8">
            <summary>
            Mailbox names are encoded with IMAP UTF-8 encoding. For more info see <see href="http://tools.ietf.org/html/rfc5738#section-3">rfc5738</see>.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Namespace_Entry">
            <summary>
            This class represents IMAP NAMESPACE entry. Defined in RFC 2342 5.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Namespace_Entry.#ctor(System.String,System.Char)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">Namespace name.</param>
            <param name="delimiter">Hierarchy delimiter char.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Namespace_Entry.NamespaceName">
            <summary>
            Gets namespace name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Namespace_Entry.HierarchyDelimiter">
            <summary>
            Gets namespace hierarchy delimiter char.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Quota_Entry">
            <summary>
            This class represents IMAP QUOTA entry. Defined in RFC 2087 5.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Quota_Entry.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="resourceName">Resource limit name.</param>
            <param name="currentUsage">Current resourse usage.</param>
            <param name="maxUsage">Maximum allowed resource usage.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>resourceName</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Quota_Entry.ResourceName">
            <summary>
            Gets resource limit name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Quota_Entry.CurrentUsage">
            <summary>
            Gets current resource usage.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Quota_Entry.MaxUsage">
            <summary>
            Gets maximum allowed resource usage.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r">
            <summary>
            This is base class for any IMAP server response.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r.ToStreamAsync(System.IO.Stream,LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts writing response to the specified stream.
            </summary>
            <param name="stream">Stream where to store response.</param>
            <param name="mailboxEncoding">Specifies how mailbox name is encoded.</param>
            <param name="completedAsyncCallback">Callback to be called when this method completes asynchronously.</param>
            <returns>Returns true is method completed asynchronously(the completedAsyncCallback is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r.SendAsync(LumiSoft.Net.IMAP.Server.IMAP_Session,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts sending response to the specified IMAP session remote endpoint.
            </summary>
            <param name="session">Stream where to store response.</param>
            <param name="completedAsyncCallback">Callback to be called when this method completes asynchronously.</param>
            <returns>Returns true is method completed asynchronously(the completedAsyncCallback is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>session</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r.ToStreamAsync(LumiSoft.Net.IMAP.Server.IMAP_Session,System.IO.Stream,LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts writing response to the specified stream.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="stream">Stream where to store response.</param>
            <param name="mailboxEncoding">Specifies how mailbox name is encoded.</param>
            <param name="completedAsyncCallback">Callback to be called when this method completes asynchronously.</param>
            <returns>Returns true is method completed asynchronously(the completedAsyncCallback is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_ServerStatus">
            <summary>
            This class represents IMAP server status(OK,NO,BAD) response. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="commandTag">Command tag.</param>
            <param name="responseCode">Response code.</param>
            <param name="responseText">Response text after response-code.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>commandTag</b>,<b>responseCode</b> or <b>responseText</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.#ctor(System.String,System.String,LumiSoft.Net.IMAP.IMAP_t_orc,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="commandTag">Command tag.</param>
            <param name="responseCode">Response code.</param>
            <param name="optionalResponse">Optional response. Value null means not specified.</param>
            <param name="responseText">Response text after response-code.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>commandTag</b>,<b>responseCode</b> or <b>responseText</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.#ctor(System.String,System.String)">
            <summary>
            Default cmdTag-less constructor.
            </summary>
            <param name="responseCode">Response code.</param>
            <param name="responseText">Response text after response-code.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseCode</b> or <b>responseText</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.Parse(System.String)">
            <summary>
            Parses IMAP command completion status response from response line.
            </summary>
            <param name="responseLine">Response line.</param>
            <returns>Returns parsed IMAP command completion status response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseLine</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.CommandTag">
            <summary>
            Gets command tag.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.ResponseCode">
            <summary>
            Gets IMAP server status response code(OK,NO,BAD).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.OptionalResponse">
            <summary>
            Gets IMAP server otional response-code. Value null means no optional response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.ResponseText">
            <summary>
            Gets response human readable text after response-code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.IsError">
            <summary>
            Gets if this response is error response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.IsContinue">
            <summary>
            Gets if this response is continuation response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.OptionalResponseCode">
            <summary>
            Gets IMAP server status response optiona response-code(ALERT,BADCHARSET,CAPABILITY,PARSE,PERMANENTFLAGS,
            READ-ONLY,READ-WRITE,TRYCREATE,UIDNEXT,UIDVALIDITY,UNSEEN).
            Value null means not specified. For more info see RFC 3501 7.1.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_ServerStatus.OptionalResponseArgs">
            <summary>
            Gets optional response aruments string. Value null means not specified. For more info see RFC 3501 7.1.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u">
            <summary>
            This class is base class for IMAP server untagged responses.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Acl">
            <summary>
            This class represents IMAP ACL response. Defined in RFC 4314 3.6.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Acl.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_Acl_Entry[])">
            <summary>
            Default constructor.
            </summary>
            <param name="folderName">Folder name with path.</param>
            <param name="entries">ACL entries.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folderName</b> or <b>entries</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Acl.Parse(System.String)">
            <summary>
            Parses ACL response from acl-response string.
            </summary>
            <param name="aclResponse">ACL response.</param>
            <returns>Returns parsed ACL response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised wehn <b>aclResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Acl.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Acl.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Acl.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Acl.Entires">
            <summary>
            Gets ACL entries.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Bye">
            <summary>
            This class represents IMAP BYE response. Defined in RFC 3501 7.1.5.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Bye.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="text">Bye reason text.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Bye.Parse(System.String)">
            <summary>
            Parses BYE response from bye-response string.
            </summary>
            <param name="byeResponse">Bye response string.</param>
            <returns>Returns parsed BYE response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>byeResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Bye.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Bye.Text">
            <summary>
            Gets BYE reason text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Capability">
            <summary>
            This class represents IMAP CAPABILITY response. Defined in RFC 3501 7.2.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Capability.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="capabilities">Capabilities list.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>capabilities</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Capability.Parse(System.String)">
            <summary>
            Parses CAPABILITY response from capability-response string.
            </summary>
            <param name="response">Capability response string.</param>
            <returns>Returns parsed CAPABILITY response.</returns>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Capability.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Capability.Capabilities">
            <summary>
            Gets capabilities list.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Enable">
            <summary>
            This class represents IMAP ENABLE response. Defined in RFC 5161 4.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Enable.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="capabilities">IMAP capabilities.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>capabilities</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Enable.Parse(System.String)">
            <summary>
            Parses ENABLE response from enable-response string.
            </summary>
            <param name="enableResponse">Enable response string.</param>
            <returns>Returns parsed ENABLE response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>enableResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Enable.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Enable.Capabilities">
            <summary>
            Gets IMAP capabilities.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Exists">
            <summary>
            This class represents IMAP EXISTS response. Defined in RFC 3501 7.3.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Exists.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="messageCount">Message count.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Exists.Parse(System.String)">
            <summary>
            Parses EXISTS response from exists-response string.
            </summary>
            <param name="response">Exists response string.</param>
            <returns>Returns parsed exists response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Exists.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Exists.MessageCount">
            <summary>
            Gets number of messages in mailbox.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Expunge">
            <summary>
            This class represents IMAP EXPUNGE response. Defined in RFC 3501 7.4.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Expunge.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="seqNo">Message sequence number.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Expunge.Parse(System.String)">
            <summary>
            Parses EXPUNGE response from expunge-response string.
            </summary>
            <param name="response">Expunge response string.</param>
            <returns>Returns parsed expunge response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Expunge.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Expunge.SeqNo">
            <summary>
            Gets message sequence number.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Fetch">
            <summary>
            This class represents IMAP FETCH response. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.#ctor(System.Int32,LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i[])">
            <summary>
            Default constructor.
            </summary>
            <param name="msgSeqNo">Message 1-based sequence number.</param>
            <param name="dataItems">Fetch response data-items.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>dataItems</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="msgSeqNo">Message 1-based sequence number.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.ParseAsync(LumiSoft.Net.IMAP.Client.IMAP_Client,System.String,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts parsing FETCH response.
            </summary>
            <param name="imap">IMAP cleint.</param>
            <param name="line">Initial FETCH response line.</param>
            <param name="callback">Callback to be called when fetch completed.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>imap</b>,<b>line</b> or <b>callback</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.ToStreamAsync(LumiSoft.Net.IMAP.Server.IMAP_Session,System.IO.Stream,LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts writing response to the specified stream.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="stream">Stream where to store response.</param>
            <param name="mailboxEncoding">Specifies how mailbox name is encoded.</param>
            <param name="completedAsyncCallback">Callback to be called when this method completes asynchronously.</param>
            <returns>Returns true is method completed asynchronously(the completedAsyncCallback is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.ParseDataItems(LumiSoft.Net.IMAP.Client.IMAP_Client,LumiSoft.Net.StringReader,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts parsing fetch data-items,
            </summary>
            <param name="imap">IMAP client.</param>
            <param name="r">Fetch line reader.</param>
            <param name="callback">Callback to be called when parsing completes.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>imap</b>,<b>r</b> or <b>callback</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.ReadStringLiteral(LumiSoft.Net.IMAP.Client.IMAP_Client,LumiSoft.Net.StringReader,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Reads string-literal(stores it to reader 'r') and continuing fetch line.
            </summary>
            <param name="imap">IMAP client.</param>
            <param name="r">String reader.</param>
            <param name="callback">Fetch completion callback.</param>
            <returns>Returns true if completed asynchronously or false if completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>imap</b>,<b>r</b> or <b>callback</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.ReadData(LumiSoft.Net.IMAP.Client.IMAP_Client,LumiSoft.Net.StringReader,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}},System.IO.Stream)">
            <summary>
            Reads IMAP string(string-literal,quoted-string,NIL) and remaining FETCH line if needed.
            </summary>
            <param name="imap">IMAP client.</param>
            <param name="r">Fetch line reader.</param>
            <param name="callback">Fetch completion callback.</param>
            <param name="stream">Stream where to store readed data.</param>
            <returns>Returns true if completed asynchronously or false if completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>imap</b>,<b>r</b>,<b>callback</b> or <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.ReadNextFetchLine(LumiSoft.Net.IMAP.Client.IMAP_Client,LumiSoft.Net.StringReader,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Reads next continuing FETCH line and stores to fetch reader 'r'.
            </summary>
            <param name="imap">IMAP client.</param>
            <param name="r">String reader.</param>
            <param name="callback">Fetch completion callback.</param>
            <returns>Returns true if completed asynchronously or false if completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>imap</b>,<b>r</b> or <b>callback</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.FilterDataItem(System.Type)">
            <summary>
            Returns specified data-item or null if no such item.
            </summary>
            <param name="dataItem">Data-item to filter.</param>
            <returns>Returns specified data-item or null if no such item.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>dataItem</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.SeqNo">
            <summary>
            Gets message 1-based sequence number.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.DataItems">
            <summary>
            Gets fetch response data items.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Body">
            <summary>
            Gets BODY[] values.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Envelope">
            <summary>
            Gets ENVELOPE value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Flags">
            <summary>
            Gets FLAGS value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.InternalDate">
            <summary>
            Gets INTERNALDATE value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Rfc822">
            <summary>
            Gets RFC822 value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Rfc822Header">
            <summary>
            Gets RFC822.HEADER value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Rfc822Size">
            <summary>
            Gets RFC822.SIZE value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.Rfc822Text">
            <summary>
            Gets RFC822.TEXT value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.UID">
            <summary>
            Gets UID value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.X_GM_MSGID">
            <summary>
            Gets X-GM-MSGID value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Fetch.X_GM_THRID">
            <summary>
            Gets X-GM-THRID value. Returns null if fetch response doesn't contain specified data-item.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Flags">
            <summary>
            This class represents IMAP FLAGS response. Defined in RFC 3501 7.2.6.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Flags.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="flags">Mailbox flags list.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>flags</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Flags.Parse(System.String)">
            <summary>
            Parses FLAGS response from exists-response string.
            </summary>
            <param name="response">Exists response string.</param>
            <returns>Returns parsed flags response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Flags.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Flags.Flags">
            <summary>
            Gets mailbox supported flags.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_List">
            <summary>
            This class represents IMAP LIST response. Defined in RFC 3501 7.2.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_List.#ctor(System.String,System.Char,System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="delimiter">Hierarchy delimiter char.</param>
            <param name="attributes">Folder attributes.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_List.#ctor(System.Char)">
            <summary>
            Default constructor. (Hierarchy delimiter request)
            </summary>
            <param name="delimiter">Hierarchy delimiter char.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_List.Parse(System.String)">
            <summary>
            Parses LIST response from list-response string.
            </summary>
            <param name="listResponse">List response string.</param>
            <returns>Returns parsed list response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>listResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_List.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_List.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_List.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_List.HierarchyDelimiter">
            <summary>
            Gets hierarchy delimiter char.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_List.FolderAttributes">
            <summary>
            Gets folder attributes list.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_ListRights">
            <summary>
            This class represents IMAP MYRIGHTS response. Defined in RFC 4314 3.7.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="identifier">Identifier name. Normally this is user or group name.</param>
            <param name="requiredRights">Required rights.</param>
            <param name="optionalRights">Optional rights.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>identifier</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.Parse(System.String)">
            <summary>
            Parses LISTRIGHTS response from LISTRIGHTS-response string.
            </summary>
            <param name="listRightsResponse">LISTRIGHTS response line.</param>
            <returns>Returns parsed LISTRIGHTS response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>listRightsResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.Identifier">
            <summary>
            Gets identifier. Normaly this is user or group name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.RequiredRights">
            <summary>
            Gets required rights.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ListRights.OptionalRights">
            <summary>
            Gets optional rights.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_LSub">
            <summary>
            This class represents IMAP LSUB response. Defined in RFC 3501 7.2.3.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_LSub.#ctor(System.String,System.Char,System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="delimiter">Hierarchy delimiter char.</param>
            <param name="attributes">Folder attributes.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_LSub.Parse(System.String)">
            <summary>
            Parses LSUB response from lsub-response string.
            </summary>
            <param name="lSubResponse">LSub response string.</param>
            <returns>Returns parsed lsub response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>lSubResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_LSub.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_LSub.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_LSub.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_LSub.HierarchyDelimiter">
            <summary>
            Gets hierarchy delimiter char.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_LSub.FolderAttributes">
            <summary>
            Gets folder attributes list.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_MyRights">
            <summary>
            This class represents IMAP MYRIGHTS response. Defined in RFC 4314 3.8.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_MyRights.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="rights">Rights values.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_MyRights.Parse(System.String)">
            <summary>
            Parses MYRIGHTS response from MYRIGHTS-response string.
            </summary>
            <param name="myRightsResponse">MYRIGHTS response line.</param>
            <returns>Returns parsed MYRIGHTS response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>myRightsResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_MyRights.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_MyRights.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_MyRights.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_MyRights.Rights">
            <summary>
            Gets rights list.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Namespace">
            <summary>
            This class represents IMAP NAMESPACE response. Defined in RFC 2342 5.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Namespace.#ctor(LumiSoft.Net.IMAP.IMAP_Namespace_Entry[],LumiSoft.Net.IMAP.IMAP_Namespace_Entry[],LumiSoft.Net.IMAP.IMAP_Namespace_Entry[])">
            <summary>
            Default constructor.
            </summary>
            <param name="personalNamespaces">Personal namespaces.</param>
            <param name="otherUsersNamespaces">Other users namespaces.</param>
            <param name="sharedNamespaces">Shared users namespaces.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>personalNamespaces</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Namespace.Parse(System.String)">
            <summary>
            Parses NAMESPACE response from namespace-response string.
            </summary>
            <param name="response">NAMESPACE response string.</param>
            <returns>Returns parsed NAMESPACE response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Namespace.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Namespace.PersonalNamespaces">
            <summary>
            Gets personal namespaces. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Namespace.OtherUsersNamespaces">
            <summary>
            Gets other users namespaces. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Namespace.SharedNamespaces">
            <summary>
            Gets shared namespaces. Value null means not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Quota">
            <summary>
            This class represents IMAP QUOTA response. Defined in RFC 2087 5.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Quota.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_Quota_Entry[])">
            <summary>
            Default constructor.
            </summary>
            <param name="quotaRootName">Qouta root name.</param>
            <param name="entries">Resource limit entries.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>quotaRootName</b> or <b>entries</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Quota.Parse(System.String)">
            <summary>
            Parses QUOTA response from quota-response string.
            </summary>
            <param name="response">QUOTA response string.</param>
            <returns>Returns parsed QUOTA response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Quota.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Quota.QuotaRootName">
            <summary>
            Gets quota root name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Quota.Entries">
            <summary>
            Gets resource limit entries.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot">
            <summary>
            This class represents IMAP QUOTAROOT response. Defined in RFC 2087 5.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot.#ctor(System.String,System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="quotaRoots">Quota roots.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>quotaRoots</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot.Parse(System.String)">
            <summary>
            Parses QUOTAROOT response from quotaRoot-response string.
            </summary>
            <param name="response">QUOTAROOT response string.</param>
            <returns>Returns parsed QUOTAROOT response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_QuotaRoot.QuotaRoots">
            <summary>
            Gets quota roots.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Recent">
            <summary>
            This class represents IMAP RECENT response. Defined in RFC 3501 7.3.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Recent.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="messageCount">Message count with \Recent flag set.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Recent.Parse(System.String)">
            <summary>
            Parses RECENT response from recent-response string.
            </summary>
            <param name="response">Recent response string.</param>
            <returns>Returns parsed recent response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Recent.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Recent.MessageCount">
            <summary>
            Gets number of messages in mailbox with \Recent flag set.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Search">
            <summary>
            This class represents IMAP SEARCH response. Defined in RFC 3501 7.2.5.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Search.#ctor(System.Int32[])">
            <summary>
            Default constructor.
            </summary>
            <param name="values">Search maching messages seqNo/UID(Depeneds on UID SEARCH) list.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Search.Parse(System.String)">
            <summary>
            Parses SEARCH response from exists-response string.
            </summary>
            <param name="response">Exists response string.</param>
            <returns>Returns parsed search response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Search.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Search.Values">
            <summary>
            Gets search matching messages seqNo/UID(Depeneds on UID SEARCH) list.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus">
            <summary>
            This class represents IMAP server untagged status(OK,NO,BAD,PREAUTH and BYE) response. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="responseCode">Response code.</param>
            <param name="responseText">Response text after response-code.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseCode</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_t_orc,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="responseCode">Response code.</param>
            <param name="optionalResponse">Optional response. Value null means not specified.</param>
            <param name="responseText">Response text after response-code.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when<b>responseCode</b> or <b>responseText</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.Parse(System.String)">
            <summary>
            Parses IMAP command completion status response from response line.
            </summary>
            <param name="responseLine">Response line.</param>
            <returns>Returns parsed IMAP command completion status response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseLine</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.ResponseCode">
            <summary>
            Gets IMAP server status response code(OK,NO,BAD,PREAUTH,BYE).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.OptionalResponse">
            <summary>
            Gets IMAP server otional response-code. Value null means no optional response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.ResponseText">
            <summary>
            Gets response human readable text after response-code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.IsError">
            <summary>
            Gets if this response is error response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.OptionalResponseCode">
            <summary>
            Gets IMAP server status response optiona response-code(ALERT,BADCHARSET,CAPABILITY,PARSE,PERMANENTFLAGS,
            READ-ONLY,READ-WRITE,TRYCREATE,UIDNEXT,UIDVALIDITY,UNSEEN).
            Value null means not specified. For more info see RFC 3501 7.1.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus.OptionalResponseArgs">
            <summary>
            Gets optional response aruments string. Value null means not specified. For more info see RFC 3501 7.1.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_r_u_Status">
            <summary>
            This class represents IMAP STATUS response. Defined in RFC 3501 7.2.4.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Status.#ctor(System.String,System.Int32,System.Int32,System.Int64,System.Int64,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name.</param>
            <param name="messagesCount">Messages count. Value -1 means not specified.</param>
            <param name="recentCount">The "recent" flag set messages count. Value -1 means not specified.</param>
            <param name="uidNext">Next message predictable UID value. Value -1 means not specified.</param>
            <param name="folderUid">Folder UID value. Value -1 means not specified.</param>
            <param name="unseenCount">Unseen messages count. Value -1 means not specified.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Status.Parse(System.String)">
            <summary>
            Parses STATUS response from status-response string.
            </summary>
            <param name="response">Satatus response string.</param>
            <returns>Returns parsed STATUS response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Status.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_r_u_Status.ToString(LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Returns this as string.
            </summary>
            <param name="encoding">Specifies how mailbox name is encoded.</param>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Status.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Status.MessagesCount">
            <summary>
            Gets messages count.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Status.RecentCount">
            <summary>
            Gets "recent" flag set messages count.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Status.UidNext">
            <summary>
            Gets next message predictable UID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Status.FolderUid">
            <summary>
            Gets folder UID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_r_u_Status.UnseenCount">
            <summary>
            Gets unseen messages count.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key">
            <summary>
            This class is base class for IMAP SEARCH search-key. Defined in RFC 3501 6.4.4.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key.ParseKey(LumiSoft.Net.StringReader)">
            <summary>
            Parses one search key or search key group.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns one parsed search key or search key group.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Answered">
            <summary>
            This class represents IMAP SEARCH <b>ANSWERED</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with the \Answered flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Answered.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Answered.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>ANSWERED</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>ANSWERED</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Answered.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Answered.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Bcc">
            <summary>
            This class represents IMAP SEARCH <b>BCC (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that contain the specified string in the message header BCC field.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Bcc.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Bcc.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>BCC (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>BCC (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Bcc.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Bcc.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Bcc.Value">
            <summary>
            Gets BCC filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Before">
            <summary>
            This class represents IMAP SEARCH <b>BEFORE (date)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages whose internal date (disregarding time and timezone) is earlier than the specified date.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Before.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="date">Message internal date.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Before.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>BEFORE (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>BEFORE (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Before.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Before.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Before.Date">
            <summary>
            Gets date value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Body">
            <summary>
            This class represents IMAP SEARCH <b>BODY (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that contain the specified string in the body of the message.
            NOTE: IMAP server may skip MIME entities with binary.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Body.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Body.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>BODY (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>BODY (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Body.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Body.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Body.Value">
            <summary>
            Gets BODY filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Cc">
            <summary>
            This class represents IMAP SEARCH <b>CC (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that contain the specified string in the message header CC field.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Cc.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Cc.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>CC (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>CC (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Cc.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Cc.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Cc.Value">
            <summary>
            Gets CC filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Deleted">
            <summary>
            This class represents IMAP SEARCH <b>DELETED</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with the \Deleted flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Deleted.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Deleted.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>DELETED</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>DELETED</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Deleted.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Deleted.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Draft">
            <summary>
            This class represents IMAP SEARCH <b>DRAFT</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with the \Draft flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Draft.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Draft.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>DRAFT</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>DRAFT</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Draft.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Draft.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Flagged">
            <summary>
            This class represents IMAP SEARCH <b>FLAGGED</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with the \Flagged flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Flagged.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Flagged.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>FLAGGED</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>FLAGGED</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Flagged.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Flagged.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_From">
            <summary>
            This class represents IMAP SEARCH <b>FROM (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that contain the specified string in the message header FROM field.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_From.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_From.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>FROM (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>FROM (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_From.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_From.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_From.Value">
            <summary>
            Gets FROM filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Group">
            <summary>
            This class represents parenthesized list of IMAP SEARCH keys. Defined in RFC 3501 6.4.4.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Group.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Group.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>AND</b> key group.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>AND</b> key group.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Group.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Group.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Group.Keys">
            <summary>
            Gets AND-ded keys collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Header">
            <summary>
            This class represents IMAP SEARCH <b>HEADER (field-name) (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that have a header with the specified field-name (as
            defined in [RFC-2822]) and that contains the specified string
            in the text of the header (what comes after the colon).  If the
            string to search is zero-length, this matches all messages that
            have a header line with the specified field-name regardless of
            the contents.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Header.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="fieldName">Header field name. For example: 'Subject'.</param>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>fieldName</b> or <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Header.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>HEADER (field-name) (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>HEADER (field-name) (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Header.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Header.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Header.FieldName">
            <summary>
            Gets header field name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Header.Value">
            <summary>
            Gets filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Keyword">
            <summary>
            This class represents IMAP SEARCH <b>KEYWORD (flag)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with the specified keyword flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Keyword.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Keyword.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>KEYWORD (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>KEYWORD (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Keyword.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Keyword.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Keyword.Value">
            <summary>
            Gets keyword value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Larger">
            <summary>
            This class represents IMAP SEARCH <b>LARGER (n)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with an [RFC-2822] size larger than the specified number of octets.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Larger.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Message size in bytes.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Larger.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>LARGER (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>LARGER (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Larger.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Larger.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Larger.Value">
            <summary>
            Gets value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_New">
            <summary>
            This class represents IMAP SEARCH <b>NEW</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that have the \Recent flag set but not the \Seen flag.
            This is functionally equivalent to "(RECENT UNSEEN)".</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_New.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_New.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>NEW</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>NEW</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_New.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_New.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Not">
            <summary>
            This class represents IMAP SEARCH <b>NOT (search-key)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not match the specified search key.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Not.#ctor(LumiSoft.Net.IMAP.IMAP_Search_Key)">
            <summary>
            Default constructor.
            </summary>
            <param name="key">Search KEY.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>key</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Not.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>NOT (search-key)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>NOT (search-key)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Not.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Not.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Not.SearchKey">
            <summary>
            Gets search KEY.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Old">
            <summary>
            This class represents IMAP SEARCH <b>OLD</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the \Recent flag set.  This is
            functionally equivalent to "NOT RECENT" (as opposed to "NOT NEW").</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Old.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Old.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>OLD</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>OLD</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Old.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Old.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_On">
            <summary>
            This class represents IMAP SEARCH <b>ON (date)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages whose internal date (disregarding time and timezone) is within the specified date.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_On.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Date value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_On.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>ON (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>ON (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_On.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_On.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_On.Date">
            <summary>
            Gets date value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Or">
            <summary>
            This class represents IMAP SEARCH <b>OR (search-key1) (search-key2)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that match either search key.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Or.#ctor(LumiSoft.Net.IMAP.IMAP_Search_Key,LumiSoft.Net.IMAP.IMAP_Search_Key)">
            <summary>
            Default constructor.
            </summary>
            <param name="key1">Search key1.</param>
            <param name="key2">Search key2.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>key1</b> or <b>key2</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Or.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>OR (search-key1) (search-key2)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>OR (search-key1) (search-key2)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Or.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Or.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Or.SearchKey1">
            <summary>
            Gets search-key1.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Or.SearchKey2">
            <summary>
            Gets search-key2.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Recent">
            <summary>
            This class represents IMAP SEARCH <b>RECENT</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that have the \Recent flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Recent.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Recent.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>RECENT</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>RECENT</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Recent.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Recent.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Seen">
            <summary>
            This class represents IMAP SEARCH <b>SEEN</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that have the \Seen flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Seen.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Seen.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SEEN</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SEEN</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Seen.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Seen.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_SentBefore">
            <summary>
            This class represents IMAP SEARCH <b>SENTBEFORE (date)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages whose [RFC-2822] Date: header (disregarding time and
            timezone) is earlier than the specified date.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentBefore.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Date value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentBefore.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SENTBEFORE (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SENTBEFORE (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentBefore.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentBefore.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_SentBefore.Date">
            <summary>
            Gets date value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_SentOn">
            <summary>
            This class represents IMAP SEARCH <b>SENTON (date)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages whose [RFC-2822] Date: header (disregarding time and
            timezone) is within the specified date.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentOn.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Date value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentOn.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SENTON (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SENTON (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentOn.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentOn.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_SentOn.Date">
            <summary>
            Gets date value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_SentSince">
            <summary>
            This class represents IMAP SEARCH <b>SENTSINCE (date)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages whose [RFC-2822] Date: header (disregarding time and
            timezone) is within or later than the specified date.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentSince.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Date value</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentSince.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SENTSINCE (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SENTSINCE (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentSince.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SentSince.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_SentSince.Date">
            <summary>
            Gets date value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet">
            <summary>
            This class represents IMAP SEARCH <b>sequence-set</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with message sequence numbers corresponding to the
            specified message sequence number set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet.#ctor(LumiSoft.Net.IMAP.IMAP_t_SeqSet)">
            <summary>
            Default constructor.
            </summary>
            <param name="seqSet">IMAP sequence-set.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>sequence-set</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>sequence-set</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet.Value">
            <summary>
            Gets sequence-set value.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_SeqSet.#ctor(LumiSoft.Net.IMAP.IMAP_SequenceSet)">
            <summary>
            Default constructor.
            </summary>
            <param name="seqSet">IMAP sequence-set.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Since">
            <summary>
            This class represents IMAP SEARCH <b>SINCE (date)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages whose internal date (disregarding time and timezone)
            is within or later than the specified date.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Since.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Date value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Since.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SINCE (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SINCE (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Since.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Since.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Since.Date">
            <summary>
            Gets date value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Smaller">
            <summary>
            This class represents IMAP SEARCH <b>SMALLER (n)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with an [RFC-2822] size smaller than the specified number of octets.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Smaller.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Message size in bytes.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Smaller.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SMALLER (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SMALLER (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Smaller.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Smaller.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Smaller.Value">
            <summary>
            Gets value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Subject">
            <summary>
            This class represents IMAP SEARCH <b>SUBJECT (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that contain the specified string in the message header SUBJECT field.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Subject.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Subject.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>SUBJCET (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>SUBJECT (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Subject.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Subject.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Subject.Value">
            <summary>
            Gets SUBJECT filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Text">
            <summary>
            This class represents IMAP SEARCH <b>TEXT (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that contain the specified string in the header or body of the message.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Text.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Text.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>TEXT (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>TEXT (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Text.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Text.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Text.Value">
            <summary>
            Gets TEXT filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_To">
            <summary>
            This class represents IMAP SEARCH <b>TO (string)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks> Messages that contain the specified string in the message header TO field.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_To.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_To.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>TO (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>TO (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_To.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_To.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_To.Value">
            <summary>
            Gets TO filter value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid">
            <summary>
            This class represents IMAP SEARCH <b>UID (sequence set)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages with unique identifiers corresponding to the specified
            unique identifier set.  Sequence set ranges are permitted.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid.#ctor(LumiSoft.Net.IMAP.IMAP_t_SeqSet)">
            <summary>
            Default constructor.
            </summary>
            <param name="seqSet">IMAP sequence-set.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UID (sequence set)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UID (sequence set)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid.Value">
            <summary>
            Gets sequence-set value.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Uid.#ctor(LumiSoft.Net.IMAP.IMAP_SequenceSet)">
            <summary>
            Default constructor.
            </summary>
            <param name="seqSet">IMAP sequence-set.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Unanswered">
            <summary>
            This class represents IMAP SEARCH <b>UNANSWERED</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the \Answered flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unanswered.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unanswered.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UNANSWERED</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UNANSWERED</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unanswered.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unanswered.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Undeleted">
            <summary>
            This class represents IMAP SEARCH <b>UNDELETED</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the \Deleted flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undeleted.#ctor">
            <summary>
            Default consructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undeleted.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UNDELETED</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UNDELETED</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undeleted.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undeleted.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Undraft">
            <summary>
            This class represents IMAP SEARCH <b>UNDRAFT</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the \Draft flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undraft.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undraft.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UNDRAFT</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UNDRAFT</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undraft.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Undraft.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Unflagged">
            <summary>
            This class represents IMAP SEARCH <b>UNFLAGGED</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the \Flagged flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unflagged.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unflagged.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UNFLAGGED</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UNFLAGGED</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unflagged.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unflagged.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Unkeyword">
            <summary>
            This class represents IMAP SEARCH <b>UNKEYWORD (flag)</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the specified keyword flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unkeyword.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">String value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unkeyword.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UNKEYWORD (string)</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UNKEYWORD (string)</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unkeyword.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unkeyword.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Search_Key_Unkeyword.Value">
            <summary>
            Gets keyword value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Search_Key_Unseen">
            <summary>
            This class represents IMAP SEARCH <b>UNSEEN</b> key. Defined in RFC 3501 6.4.4.
            </summary>
            <remarks>Messages that do not have the \Seen flag set.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unseen.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unseen.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Returns parsed IMAP SEARCH <b>UNSEEN</b> key.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP SEARCH <b>UNSEEN</b> key.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when parsing fails.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unseen.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Search_Key_Unseen.ToCmdParts(System.Collections.Generic.List{LumiSoft.Net.IMAP.Client.IMAP_Client_CmdPart})">
            <summary>
            Stores IMAP search-key command parts to the specified array.
            </summary>
            <param name="list">Array where to store command parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>list</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Capabilities">
            <summary>
            This class represent IANA registered IMAP capabilities. Defined in http://www.iana.org/assignments/imap4-capabilities.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i">
            <summary>
            This class is base class for IMAP FETCH request arguments(data-items). For more info see RFC 3501. 6.4.5.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body">
            <summary>
            This class represents FETCH request BODY[] argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="section">Body section. Value null means not specified.</param>
            <param name="offset">Data returning offset. Value -1 means not specified.</param>
            <param name="maxCount">Maximum number of bytes to return. Value -1 means not specified.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body.Section">
            <summary>
            Gets body section. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body.Offset">
            <summary>
            Gets start offset. Value -1 means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Body.MaxCount">
            <summary>
            Gets maximum count of bytes to fetch. Value -1 means not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek">
            <summary>
            This class represents FETCH request BODY.PEEK[] argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="section">Body section. Value null means not specified.</param>
            <param name="offset">Data returning offset. Value -1 means not specified.</param>
            <param name="maxCount">Maximum number of bytes to return. Value -1 means not specified.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek.Section">
            <summary>
            Gets body section. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek.Offset">
            <summary>
            Gets start offset. Value -1 means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyPeek.MaxCount">
            <summary>
            Gets maximum count of bytes to fetch. Value -1 means not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyS">
            <summary>
            This class represents FETCH request BODY argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_BodyStructure">
            <summary>
            This class represents FETCH request BODYSTRUCTURE argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Envelope">
            <summary>
            This class represents FETCH request ENVELOPE argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Envelope.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Envelope.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Flags">
            <summary>
            This class represents FETCH request FLAGS argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Flags.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Flags.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_InternalDate">
            <summary>
            This class represents FETCH request INTERNALDATE argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_InternalDate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_InternalDate.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822">
            <summary>
            This class represents FETCH request RFC822 argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Header">
            <summary>
            This class represents FETCH request RFC822.HEADER argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Header.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Header.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Size">
            <summary>
            This class represents FETCH request RFC822.SIZE argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Size.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Size.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Text">
            <summary>
            This class represents FETCH request RFC822.TEXT argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Text.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Rfc822Text.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Uid">
            <summary>
            This class represents FETCH request UID argument(data-item). Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Uid.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_Uid.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_X_GM_MSGID">
            <summary>
            This class represents FETCH request GMail X-GM-MSGID argument(data-item). Defined in <see href="http://code.google.com/intl/et/apis/gmail/imap">GMail API</see>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_X_GM_MSGID.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_X_GM_MSGID.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_X_GM_THRID">
            <summary>
            This class represents FETCH request GMail X-GM-THRID argument(data-item). Defined in <see href="http://code.google.com/intl/et/apis/gmail/imap">GMail API</see>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_X_GM_THRID.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_i_X_GM_THRID.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i">
            <summary>
            This class is base class for IMAP FETCH response data-items. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Body">
            <summary>
            This class represents IMAP FETCH response BODY[] data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Body.#ctor(System.String,System.Int32,System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="section">Body section value. Value null means not specified(full message).</param>
            <param name="offset">Data starting offset. Value -1 means not specified.</param>
            <param name="stream">Data stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Body.SetStream(System.IO.Stream)">
            <summary>
            Sets Stream property value.
            </summary>
            <param name="stream">Stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Body.BodySection">
            <summary>
            Gets BODY section value. Value null means not specified(full message).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Body.Offset">
            <summary>
            Gets BODY data returning start offset. Value -1 means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Body.Stream">
            <summary>
            Gets data stream.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_BodyS">
            <summary>
            This class represents IMAP FETCH response BODY data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_BodyS.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_BodyStructure">
            <summary>
            This class represents IMAP FETCH response BODYSTRUCTURE data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_BodyStructure.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope">
            <summary>
            This class represents IMAP FETCH response ENVELOPE data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.#ctor(System.DateTime,System.String,LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="date">Message <b>Date</b> header value.</param>
            <param name="subject">Message <b>Subject</b> header value.</param>
            <param name="from">Message <b>From</b> header value.</param>
            <param name="sender">Message <b>Sender</b> header value.</param>
            <param name="replyTo">Message <b>Reply-To</b> header value.</param>
            <param name="to">Message <b>To</b> header value.</param>
            <param name="cc">Message <b>Cc</b> header value.</param>
            <param name="bcc">Message <b>Bcc</b> header value.</param>
            <param name="inReplyTo">Message <b>In-Reply-To</b> header value.</param>
            <param name="messageID">Message <b>Message-ID</b> header value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Parses IMAP FETCH ENVELOPE from reader.
            </summary>
            <param name="r">Fetch reader.</param>
            <returns>Returns parsed envelope.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.ConstructEnvelope(LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Construct secified mime entity ENVELOPE string.
            </summary>
            <param name="entity">Mail message.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.ReadAddresses(LumiSoft.Net.StringReader)">
            <summary>
            Reads parenthesized list of addresses.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns read addresses.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.ReadAndDecodeWord(LumiSoft.Net.StringReader)">
            <summary>
            Reads and decodes word from reader.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns decoded word.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.ConstructAddresses(LumiSoft.Net.Mail.Mail_t_Mailbox[],LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Constructs ENVELOPE addresses structure.
            </summary>
            <param name="mailboxes">Mailboxes.</param>
            <param name="wordEncoder">Unicode words encoder.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.ConstructAddress(LumiSoft.Net.Mail.Mail_t_Mailbox,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Constructs ENVELOPE address structure.
            </summary>
            <param name="address">Mailbox address.</param>
            <param name="wordEncoder">Unicode words encoder.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.RemoveCrlf(System.String)">
            <summary>
            Removes CR and LF chars from the specified string.
            </summary>
            <param name="value">String value.</param>
            <returns>Reurns string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.Date">
            <summary>
            Gets message <b>Date</b> header field value. Value DateTime.Min means no <b>Date</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.Subject">
            <summary>
            Gets message <b>Subject</b> header field value. Value null means no <b>Subject</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.From">
            <summary>
            Gets message <b>From</b> header field value. Value null means no <b>From</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.Sender">
            <summary>
            Gets message <b>Sender</b> header field value. Value null means no <b>Sender</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.ReplyTo">
            <summary>
            Gets message <b>Reply-To</b> header field value. Value null means no <b>Reply-To</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.To">
            <summary>
            Gets message <b>To</b> header field value. Value null means no <b>To</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.Cc">
            <summary>
            Gets message <b>Cc</b> header field value. Value null means no <b>Cc</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.Bcc">
            <summary>
            Gets message <b>Bcc</b> header field value. Value null means no <b>Bcc</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.InReplyTo">
            <summary>
            Gets message <b>In-Reply-To</b> header field value. Value null means no <b>In-Reply-To</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Envelope.MessageID">
            <summary>
            Gets message <b>Message-ID</b> header field value. Value null means no <b>Message-ID</b> header field.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Flags">
            <summary>
            This class represents IMAP FETCH response FALGS data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Flags.#ctor(LumiSoft.Net.IMAP.IMAP_t_MsgFlags)">
            <summary>
            Default constructor.
            </summary>
            <param name="flags">Message flags.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>flags</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Flags.Flags">
            <summary>
            Gets message flags.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_InternalDate">
            <summary>
            This class represents IMAP FETCH response INTERNALDATE data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_InternalDate.#ctor(System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="date">IMAP server internal assigned date-time.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_InternalDate.Date">
            <summary>
            Gets message IMAP server internal assigned date-time.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822">
            <summary>
            This class represents IMAP FETCH response RFC822 data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Message stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822.SetStream(System.IO.Stream)">
            <summary>
            Sets Stream property value.
            </summary>
            <param name="stream">Stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822.Stream">
            <summary>
            Gets message stream.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Header">
            <summary>
            This class represents IMAP FETCH response RFC822.HEADER data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Header.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Message header stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Header.SetStream(System.IO.Stream)">
            <summary>
            Sets Stream property value.
            </summary>
            <param name="stream">Stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Header.Stream">
            <summary>
            Gets message header stream.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Size">
            <summary>
            This class represents IMAP FETCH response RFC822.SIZE data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Size.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="size">Message size in bytes.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Size.Size">
            <summary>
            Gets message size in bytes.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Text">
            <summary>
            This class represents IMAP FETCH response RFC822.TEXT data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Text.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Message body text stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Text.SetStream(System.IO.Stream)">
            <summary>
            Sets Stream property value.
            </summary>
            <param name="stream">Stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Rfc822Text.Stream">
            <summary>
            Gets message body text stream.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Uid">
            <summary>
            This class represents IMAP FETCH response UID data-item. Defined in RFC 3501 7.4.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Uid.#ctor(System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Message UID value.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_Uid.UID">
            <summary>
            Gets message UID value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_X_GM_MSGID">
            <summary>
            This class represents IMAP FETCH response X-GM-MSGID data-item. Defined in <see href="http://code.google.com/intl/et/apis/gmail/imap">GMail API</see>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_X_GM_MSGID.#ctor(System.UInt64)">
            <summary>
            Default constructor.
            </summary>
            <param name="msgID">Message ID.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_X_GM_MSGID.MsgID">
            <summary>
            Gets message ID.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_X_GM_THRID">
            <summary>
            This class represents IMAP FETCH response X-GM-THRID data-item. Defined in <see href="http://code.google.com/intl/et/apis/gmail/imap">GMail API</see>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_X_GM_THRID.#ctor(System.UInt64)">
            <summary>
            Default constructor.
            </summary>
            <param name="threadID">Thread ID.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_Fetch_r_i_X_GM_THRID.ThreadID">
            <summary>
            Gets thread ID.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_MsgFlags">
            <summary>
            This class represent IMAP message flags. Defined in RFC 3501 2.3.2.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Seen">
            <summary>
            Message flag <b>Seen</b>: Message has been read.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Answered">
            <summary>
            Message flag <b>Answered</b>: Message has been answered.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Flagged">
            <summary>
            Message flag <b>Flagged</b>: Message is "flagged" for urgent/special attention.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Deleted">
            <summary>
            Message flag <b>Deleted</b>: Message is "deleted" for removal by later EXPUNGE.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Draft">
            <summary>
            Message flag <b>Draft</b>: Message has not completed composition (marked as a draft).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Recent">
            <summary>
            Message flag <b>Recent</b>: Message is "recently" arrived in this mailbox.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="flags">Message flags.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Parse(System.String)">
            <summary>
            Parses message flags from flags-string.
            </summary>
            <param name="value">Message flags sttring.</param>
            <returns>Returns parsed flags.</returns>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.ToString">
            <summary>
            Returns this as flags string.
            </summary>
            <returns>Returns this as flags string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Contains(System.String)">
            <summary>
            Gets if flags list contains the specified flag.
            </summary>
            <param name="flag">Message flag.</param>
            <returns>Returns true if flags list contains the specified flag.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.ToArray">
            <summary>
            Copies message flags to string array.
            </summary>
            <returns>Returns message flags as string array.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_MsgFlags.Count">
            <summary>
            Gets number of flags in the collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc">
            <summary>
            This is base class for any IMAP server optional response codes. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc.Parse(System.String)">
            <summary>
            Parses IMAP optional response from string.
            </summary>
            <param name="value">Optional response string.</param>
            <returns>Returns parsed optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_Alert">
            <summary>
            This is class represents IMAP server <b>ALERT</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Alert.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="text">Alert text.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Alert.Parse(System.String)">
            <summary>
            Parses ALERT optional response from string.
            </summary>
            <param name="value">ALERT optional response string.</param>
            <returns>Returns ALERT optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Alert.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_Alert.AlertText">
            <summary>
            Gets alert text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_AppendUid">
            <summary>
            This is class represents IMAP server <b>APPENDUID</b> optional response code. Defined in RFC 4315.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_AppendUid.#ctor(System.Int64,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="mailboxUid">Mailbox UID value.</param>
            <param name="msgUid">Message UID value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_AppendUid.Parse(System.String)">
            <summary>
            Parses APPENDUID optional response from string.
            </summary>
            <param name="value">APPENDUID optional response string.</param>
            <returns>Returns APPENDUID optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_AppendUid.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_AppendUid.MailboxUid">
            <summary>
            Gets mailbox(folder) UID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_AppendUid.MessageUid">
            <summary>
            Gets message UID value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_BadCharset">
            <summary>
            This is class represents IMAP server <b>BADCHARSET</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_BadCharset.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="charsets">List of supported charsets.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>charsets</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_BadCharset.Parse(System.String)">
            <summary>
            Parses BADCHARSET optional response from string.
            </summary>
            <param name="value">BADCHARSET optional response string.</param>
            <returns>Returns BADCHARSET optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_BadCharset.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_BadCharset.Charsets">
            <summary>
            Gets list of supported charsets.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_Capability">
            <summary>
            This is class represents IMAP server <b>CAPABILITY</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Capability.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="capabilities">List of supported capabilities.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>capabilities</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Capability.Parse(System.String)">
            <summary>
            Parses CAPABILITY optional response from string.
            </summary>
            <param name="value">CAPABILITY optional response string.</param>
            <returns>Returns CAPABILITY optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Capability.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_Capability.Capabilities">
            <summary>
            Gets list of supported capabilities.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid">
            <summary>
            This is class represents IMAP server <b>COPYUID</b> optional response code. Defined in RFC 4315.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid.#ctor(System.Int64,LumiSoft.Net.IMAP.IMAP_t_SeqSet,LumiSoft.Net.IMAP.IMAP_t_SeqSet)">
            <summary>
            Default constructor.
            </summary>
            <param name="targetMailboxUid">Target folde UID value.</param>
            <param name="sourceSeqSet">Source messages UID's.</param>
            <param name="targetSeqSet">Target messages UID's.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sourceSeqSet</b> or <b>targetSeqSet</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid.Parse(System.String)">
            <summary>
            Parses COPYUID optional response from string.
            </summary>
            <param name="value">COPYUID optional response string.</param>
            <returns>Returns COPYUID optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid.TargetMailboxUid">
            <summary>
            Gets target mailbox UID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid.SourceSeqSet">
            <summary>
            Gets source messages UID sequence set.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_CopyUid.TargetSeqSet">
            <summary>
            Gets target messages UID sequence set.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_Parse">
            <summary>
            This is class represents IMAP server <b>PARSE</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Parse.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="text">Parse error text.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Parse.Parse(System.String)">
            <summary>
            Parses PARSE optional response from string.
            </summary>
            <param name="value">PARSE optional response string.</param>
            <returns>Returns PARSE optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Parse.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_Parse.ErrorText">
            <summary>
            Gets parse error text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_PermanentFlags">
            <summary>
            This is class represents IMAP server <b>PERMANENTFLAGS</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_PermanentFlags.#ctor(System.String[])">
            <summary>
            Default constructor.
            </summary>
            <param name="flags">List of supported permanent flags.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>flags</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_PermanentFlags.Parse(System.String)">
            <summary>
            Parses PERMANENTFLAGS optional response from string.
            </summary>
            <param name="value">PERMANENTFLAGS optional response string.</param>
            <returns>Returns PERMANENTFLAGS optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_PermanentFlags.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_PermanentFlags.Flags">
            <summary>
            Gets list of supported permanent flags.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_ReadOnly">
            <summary>
            This is class represents IMAP server <b>READ-ONLY</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_ReadOnly.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_ReadOnly.Parse(System.String)">
            <summary>
            Parses READ-ONLY optional response from string.
            </summary>
            <param name="value">READ-ONLY optional response string.</param>
            <returns>Returns READ-ONLY optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_ReadOnly.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_ReadWrite">
            <summary>
            This is class represents IMAP server <b>READ-WRITE</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_ReadWrite.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_ReadWrite.Parse(System.String)">
            <summary>
            Parses READ-WRITE optional response from string.
            </summary>
            <param name="value">READ-WRITE optional response string.</param>
            <returns>Returns READ-WRITE optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_ReadWrite.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_TryCreate">
            <summary>
            This is class represents IMAP server <b>TRYCREATE</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_TryCreate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_TryCreate.Parse(System.String)">
            <summary>
            Parses TRYCREATE optional response from string.
            </summary>
            <param name="value">TRYCREATE optional response string.</param>
            <returns>Returns TRYCREATE optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_TryCreate.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_UidNext">
            <summary>
            This is class represents IMAP server <b>UIDNEXT</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_UidNext.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="uidNext">Next UID value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_UidNext.Parse(System.String)">
            <summary>
            Parses UIDNEXT optional response from string.
            </summary>
            <param name="value">UIDNEXT optional response string.</param>
            <returns>Returns UIDNEXT optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_UidNext.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_UidNext.UidNext">
            <summary>
            Gets next message predicted UID value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_UidValidity">
            <summary>
            This is class represents IMAP server <b>UIDVALIDITY</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_UidValidity.#ctor(System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="uid">Mailbox UID value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_UidValidity.Parse(System.String)">
            <summary>
            Parses UIDVALIDITY optional response from string.
            </summary>
            <param name="value">UIDVALIDITY optional response string.</param>
            <returns>Returns UIDVALIDITY optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_UidValidity.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_UidValidity.Uid">
            <summary>
            Gets mailbox(folder) UID value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_Unknown">
            <summary>
            This class represents unknwon IMAP server optional response.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Unknown.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Optional response value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Unknown.Parse(System.String)">
            <summary>
            Parses unknown optional response from string.
            </summary>
            <param name="value">Unknown optional response string.</param>
            <returns>Returns unknown optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Unknown.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_Unknown.Value">
            <summary>
            Optional response value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_orc_Unseen">
            <summary>
            This is class represents IMAP server <b>UNSEEN</b> optional response code. Defined in RFC 3501 7.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Unseen.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="firstUnseen">First unseen message sequence number.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Unseen.Parse(System.String)">
            <summary>
            Parses UNSEEN optional response from string.
            </summary>
            <param name="value">UNSEEN optional response string.</param>
            <returns>Returns UNSEEN optional response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_orc_Unseen.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_orc_Unseen.SeqNo">
            <summary>
            Gets first unseen message sequence number.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_t_SeqSet">
            <summary>
            IMAP sequence-set. Defined in RFC 3501.
            <code>
            Examples:
            	2        -> seq-number (2)
            	2:4      -> seq-range  (from 2 - 4)
            	2:*      -> seq-range  (from 2 to last)
            	2,3,10:* -> sequence-set (seq-number,seq-number,seq-range)
            	                       (2,3, 10 - last)
            	
            	NOTES:
            		*) comma separates sequence parts
            		*) * means maximum value.
            </code>
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_SeqSet.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_SeqSet.Parse(System.String)">
            <summary>
            Parses <b>sequense-set</b> from string.
            </summary>
            <param name="value">Sequence-set string.</param>
            <returns>Returns parse sequence set.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_SeqSet.Contains(System.Int64)">
            <summary>
            Gets if sequence-set contains specified number.
            </summary>
            <param name="seqNumber">Sequence number.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_SeqSet.ToString">
            <summary>
            Returns this as <b>sequence-set</b> string.
            </summary>
            <returns>Returns this as <b>sequence-set</b> string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_t_SeqSet.Parse_Seq_Number(System.String,System.Int64)">
            <summary>
            Parses seq-number from specified value. Throws exception if invalid seq-number value.
            </summary>
            <param name="seqNumberValue">Integer number or *.</param>
            <param name="seqMaxValue">Maximum value. This if for replacement of * value.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_t_SeqSet.Items">
            <summary>
            Gets sequence set ranges.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Utils">
            <summary>
            Provides utility methods for IMAP.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.MessageFlagsAdd(System.String[],System.String[])">
            <summary>
            Adds specified flags to flags list.
            </summary>
            <param name="flags">Current message flags.</param>
            <param name="flagsToAdd">Flags to add.</param>
            <returns>Returns new flags.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>flags</b> or <b>flagsToAdd</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.MessageFlagsRemove(System.String[],System.String[])">
            <summary>
            Removes specified flags from message flags list.
            </summary>
            <param name="flags">Message flags.</param>
            <param name="flagsToRemove">Message flags to remove.</param>
            <returns>Returns new message flags.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>flags</b> or <b>flagsToRemove</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.ACL_to_String(LumiSoft.Net.IMAP.IMAP_ACL_Flags)">
            <summary>
            Converts IMAP_ACL_Flags to string.
            </summary>
            <param name="flags">Flags to convert.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.ACL_From_String(System.String)">
            <summary>
            Parses IMAP_ACL_Flags from string.
            </summary>
            <param name="aclString">String from where to convert</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.ParseDate(System.String)">
            <summary>
            Parses IMAP date time from string.
            </summary>
            <param name="date">DateTime string.</param>
            <returns>Returns parsed date-time value.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>date</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.DateTimeToString(System.DateTime)">
            <summary>
            Converts date time to IMAP date time string.
            </summary>
            <param name="date">DateTime to convert.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.Encode_IMAP_UTF7_String(System.String)">
            <summary>
            Encodes specified data with IMAP modified UTF7 encoding. Defined in RFC 3501 5.1.3.  Mailbox International Naming Convention.
            Example: öö is encoded to &amp;APYA9g-.
            </summary>
            <param name="text">Text to encode.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.Decode_IMAP_UTF7_String(System.String)">
            <summary>
            Decodes IMAP modified UTF7 encoded data. Defined in RFC 3501 5.1.3.  Mailbox International Naming Convention.
            Example: &amp;APYA9g- is decoded to öö.
            </summary>
            <param name="text">Text to encode.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.EncodeMailbox(System.String,LumiSoft.Net.IMAP.IMAP_Mailbox_Encoding)">
            <summary>
            Encodes mailbox name.
            </summary>
            <param name="mailbox">Mailbox name.</param>
            <param name="encoding">Mailbox name encoding mechanism.</param>
            <returns>Renturns encoded mailbox name.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mailbox</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.DecodeMailbox(System.String)">
            <summary>
            Decodes mailbox name.
            </summary>
            <param name="mailbox">Mailbox name.</param>
            <returns>Returns decoded mailbox name.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mailbox</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.NormalizeFolder(System.String)">
            <summary>
            Normalizes folder path.  Example: /Inbox/SubFolder/ will be Inbox/SubFolder.
            </summary>
            <param name="folder">Folder path to normalize.</param>
            <returns>Returns normalized folder path.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.IsValidFolderName(System.String)">
            <summary>
            Gets if the specified folder name is valid folder name.
            </summary>
            <param name="folder">Folder name.</param>
            <returns>Returns true if specified folde name is valid.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.MustUseLiteralString(System.String,System.Boolean)">
            <summary>
            Gets if specified string must be sent as IMAP literal-string.
            </summary>
            <param name="value">String value.</param>
            <param name="utf8StringSupported">Specifies if RFC 5738 IMAP UTF-8 string is supported.</param>
            <returns>Returns true if string must be sent as literal-string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.ImapStringToByte(System.Text.Encoding,System.Boolean,System.String)">
            <summary>
            Converts IMAP string to byte[].
            </summary>
            <param name="charset">Charset to use for string encodings.</param>
            <param name="utf8StringSupported">Specifies if RFC 5738 IMAP UTF-8 string is supported.</param>
            <param name="value">String value.</param>
            <returns>Returns IMAP string as byte[].</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>charset</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.ReadString(LumiSoft.Net.StringReader)">
            <summary>
            Reads IMAP string/astring/nstring/utf8-quoted from string reader.
            </summary>
            <param name="reader">String reader.</param>
            <returns>Returns IMAP string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>reader</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.ParseMessageFlags(System.String)">
            <summary>
            Parses message flags from string.
            </summary>
            <param name="flagsString">Message flags string.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.MessageFlagsToStringArray(LumiSoft.Net.IMAP.IMAP_MessageFlags)">
            <summary>
            Converts standard IMAP message flags to string array.
            </summary>
            <param name="msgFlags">IMAP message flags.</param>
            <returns>Returns IMAP message flags as string array.</returns>        
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Utils.MessageFlagsToString(LumiSoft.Net.IMAP.IMAP_MessageFlags)">
            <summary>
            Converts message flags to string. Eg. \SEEN \DELETED .
            </summary>
            <param name="msgFlags">IMAP message flags.</param>
            <returns>Returns message flags as string list.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Append">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Append">IMAP_Session.Append</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Append.#ctor(System.String,System.String[],System.DateTime,System.Int32,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="flags">Message flags.</param>
            <param name="date">IMAP internal date. Value DateTime.MinValue means not specified.</param>
            <param name="size">Message size in bytes.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b>,<b>flags</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Append.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Append.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Append.Flags">
            <summary>
            Gets message flags.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Append.InternalDate">
            <summary>
            Gets message internal date. Value DateTime.MinValue means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Append.Size">
            <summary>
            Gets message size in bytes.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Append.Stream">
            <summary>
            Gets or sets message stream.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_e_Append.Completed">
            <summary>
            This event is raised when message storing has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Append.OnCompleted">
            <summary>
            Raises <b>Completed</b> event.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Copy">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Copy">IMAP_Session.Copy</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Copy.#ctor(System.String,System.String,LumiSoft.Net.IMAP.Server.IMAP_MessageInfo[],LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="sourceFolder">Source folder name with optional path.</param>
            <param name="targetFolder">Target folder name </param>
            <param name="messagesInfo">Messages info.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sourceFolder</b>,<b>targetFolder</b>,<b>messagesInfo</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Copy.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Copy.SourceFolder">
            <summary>
            Gets source folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Copy.TargetFolder">
            <summary>
            Gets target folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Copy.MessagesInfo">
            <summary>
            Gets messages info.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_DeleteAcl">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.DeleteAcl">IMAP_Session.DeleteAcl</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_DeleteAcl.#ctor(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="identifier">ACL identifier (normally user or group name).</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b>,<b>identifier</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_DeleteAcl.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_DeleteAcl.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_DeleteAcl.Identifier">
            <summary>
            Gets ACL identifier (normally user or group name).
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Expunge">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Expunge">IMAP_Session.Expunge</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Expunge.#ctor(System.String,LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="msgInfo">Message info.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>folder</b>,<b>msgInfo</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Expunge.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Expunge.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Expunge.MessageInfo">
            <summary>
            Gets message info.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Fetch">IMAP_Session.Fetch</b> event.
            </summary>
            <remarks>
            IMAP FETCH handler application should provide requested data for each message in <see cref="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.MessagesInfo"/>
            by calling <see cref="M:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.AddData(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.Mail.Mail_Message)"/> method.
            </remarks>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.e_NewMessageData">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.NewMessageData">IMAP_Session.NewMessageData</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.e_NewMessageData.#ctor(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Default constructor.
            </summary>
            <param name="msgInfo">Message info.</param>
            <param name="msgData">Message data stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>msgInfo</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.e_NewMessageData.MessageInfo">
            <summary>
            Gets message info.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.e_NewMessageData.MessageData">
            <summary>
            Gets message data stream.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.#ctor(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo[],LumiSoft.Net.IMAP.Server.IMAP_Fetch_DataType,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="messagesInfo">Messages info.</param>
            <param name="fetchDataType">Fetch data type(Specifies what data AddData method expects).</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>messagesInfo</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.AddData(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo)">
            <summary>
            Adds specified message for FETCH response processing.
            </summary>
            <param name="msgInfo">IMAP message info.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.AddData(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Adds specified message for FETCH response processing.
            </summary>
            <param name="msgInfo">IMAP message info which message data it is.</param>
            <param name="msgData">Message data. NOTE: This value must be as specified by <see cref="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.FetchDataType"/>.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>msgInfo</b> or <b>msgData</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.MessagesInfo">
            <summary>
            Gets messages info.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.FetchDataType">
            <summary>
            Gets fetch data type(Specifies what data AddData method expects).
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.NewMessageData">
            <summary>
            This event is raised when new message-info/message-data is added for FETCH processing.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.OnNewMessageData(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Raises <b>NewMessageData</b> event.
            </summary>
            <param name="msgInfo">IMAP message info which message data it is.</param>
            <param name="msgData">Message data. NOTE: This value must be as specified by <see cref="P:LumiSoft.Net.IMAP.Server.IMAP_e_Fetch.FetchDataType"/>.</param>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Folder">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Create">IMAP_Session.Create</b>,
            <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Delete">IMAP_Session.Delete</b>,<b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Subscribe">IMAP_Session.Subscribe</b>,
            <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Unsubscribe">IMAP_Session.Unsubscribe</b> events.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Folder.#ctor(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Defaultc constructor.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cmdTag</b>,<b>folder</b> or <b>response</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Folder.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Folder.CmdTag">
            <summary>
            Gets IMAP command tag value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Folder.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_GetAcl">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetAcl">IMAP_Session.GetAcl</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_GetAcl.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetAcl.AclResponses">
            <summary>
            Gets ACL responses collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetAcl.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetAcl.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuota">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetQuota">IMAP_Session.GetQuota</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuota.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="quotaRoot">Quota root name.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>quotaRoot</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuota.QuotaResponses">
            <summary>
            Gets QUOTA responses collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuota.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuota.QuotaRoot">
            <summary>
            Gets quopta root name.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuotaRoot">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetQuotaRoot">IMAP_Session.GetQuotaRoot</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuotaRoot.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuotaRoot.QuotaRootResponses">
            <summary>
            Gets QUOTAROOT responses collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuotaRoot.QuotaResponses">
            <summary>
            Gets QUOTA responses collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuotaRoot.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_GetQuotaRoot.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_List">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.List">IMAP_Session.List</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_List.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="referenceName">Folder reference name.</param>
            <param name="folderFilter">Folder filter.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_List.FolderReferenceName">
            <summary>
            Gets folder reference name. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_List.FolderFilter">
            <summary>
            Gets folder filter.
            </summary>
            <remarks>
            The character "*" is a wildcard, and matches zero or more
            characters at this position.  The character "%" is similar to "*",
            but it does not match a hierarchy delimiter.  If the "%" wildcard
            is the last character of a mailbox name argument, matching levels
            of hierarchy are also returned.
            </remarks>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_List.Folders">
            <summary>
            Gets IMAP folders collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_ListRights">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.ListRights">IMAP_Session.ListRights</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_ListRights.#ctor(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="identifier">ACL identifier (normally user or group name).</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b>,<b>identifier</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_ListRights.ListRightsResponse">
            <summary>
            Gets or sets LISTRIGHTS response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_ListRights.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_ListRights.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_ListRights.Identifier">
            <summary>
            Gets ACL identifier (normally user or group name).
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Login">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Started">IMAP_Session.Login</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Login.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="user">User name.</param>
            <param name="password">Password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>user</b> or <b>password</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Login.IsAuthenticated">
            <summary>
            Gets or sets if specified user is authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Login.UserName">
            <summary>
            Gets user name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Login.Password">
            <summary>
            Gets user password.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_LSub">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.List">IMAP_Session.LSub</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_LSub.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="referenceName">Folder reference name.</param>
            <param name="folderFilter">Folder filter.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_LSub.FolderReferenceName">
            <summary>
            Gets folder reference name. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_LSub.FolderFilter">
            <summary>
            Gets folder filter.
            </summary>
            <remarks>
            The character "*" is a wildcard, and matches zero or more
            characters at this position.  The character "%" is similar to "*",
            but it does not match a hierarchy delimiter.  If the "%" wildcard
            is the last character of a mailbox name argument, matching levels
            of hierarchy are also returned.
            </remarks>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_LSub.Folders">
            <summary>
            Gets IMAP folders collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetMessagesInfo">IMAP_Session.GetMessagesInfo</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.MessagesInfo">
            <summary>
            Gets messages info collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.Exists">
            <summary>
            Gets messages count.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.Recent">
            <summary>
            Gets messages count with recent flag set.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.FirstUnseen">
            <summary>
            Get messages first unseen message 1-based sequnece number. Returns -1 if no umseen messages.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.Unseen">
            <summary>
            Gets messages count with seen flag not set.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MessagesInfo.UidNext">
            <summary>
            Gets next message predicted UID value.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_MyRights">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.MyRights">IMAP_Session.MyRights</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_MyRights.#ctor(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MyRights.MyRightsResponse">
            <summary>
            Gets or sets MYRIGHTS response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MyRights.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_MyRights.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Namespace">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Namespace">IMAP_Session.Namespace</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Namespace.#ctor(LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Namespace.NamespaceResponse">
            <summary>
            Gets or sets IMAP server NAMESPACE response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Namespace.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Rename">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Rename">IMAP_Session.Rename</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Rename.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="currentFolder">Current folder name with optional path.</param>
            <param name="newFolder">New folder name with optional path.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cmdTag</b>,<b>currentFolder</b> or <b>newFolder</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Rename.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Rename.CmdTag">
            <summary>
            Gets IMAP command tag value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Rename.CurrentFolder">
            <summary>
            Gets current folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Rename.NewFolder">
            <summary>
            Gets new folder name with optional path.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Search">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Search">IMAP_Session.Search</b> event.
            </summary>
            <remarks>
            IMAP SEARCH handler application should provide message UID per each search criteria matched message
            by calling <see cref="M:LumiSoft.Net.IMAP.Server.IMAP_e_Search.AddMessage(System.Int64)"/> method.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Search.#ctor(LumiSoft.Net.IMAP.IMAP_Search_Key,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="criteria">Serach criteria.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>criteria</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Search.AddMessage(System.Int64)">
            <summary>
            Adds message which matches search criteria.
            </summary>
            <param name="uid">Message UID value.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Search.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Search.Criteria">
            <summary>
            Gets search criteria.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_e_Search.Matched">
            <summary>
            Is raised when new message matches search criteria.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Search.OnMatched(System.Int64)">
            <summary>
            Raises <b>Matched</b> event.
            </summary>
            <param name="uid">Message UID.</param>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Select">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Select">IMAP_Session.Select</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Select.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cmdTag</b> or <b>folder</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.CmdTag">
            <summary>
            Gets command tag.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.ErrorResponse">
            <summary>
            Gets or sets IMAP server error response to this operation. Value means no error.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.IsReadOnly">
            <summary>
            Gets or sets if specified folder is read-only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.FolderUID">
            <summary>
            Gets or sets folder UID value. Value 0 means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.Flags">
            <summary>
            Gets folder supported flags collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Select.PermanentFlags">
            <summary>
            Gets folder supported permanent flags collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.SetAcl">IMAP_Session.SetAcl</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl.#ctor(System.String,System.String,LumiSoft.Net.IMAP.IMAP_Flags_SetType,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="identifier">ACL identifier (normally user or group name).</param>
            <param name="flagsSetType">Flags set type.</param>
            <param name="rights">Identifier rights.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b>,<b>identifier</b>,<b>rights</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl.Identifier">
            <summary>
            Gets ACL identifier (normally user or group name).
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl.FlagsSetType">
            <summary>
            Gets flags set type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_SetAcl.Rights">
            <summary>
            Gets identifier rights.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Started">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Started">IMAP_Session.Started</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Started.#ctor(LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="response">IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Started.Response">
            <summary>
            Gets or sets IMAP server response.
            </summary>
            <remarks>Response should be OK,NO with human readable text."</remarks>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_e_Store">
            <summary>
            This class provides data for <b cref="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Store">IMAP_Session.Store</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_e_Store.#ctor(System.String,LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.IMAP.IMAP_Flags_SetType,System.String[],LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="msgInfo">Message info.</param>
            <param name="flagsSetType">Flags set type.</param>
            <param name="flags">Flags.</param>
            <param name="response">Default IMAP server response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b>,<b>msgInfo</b>,<b>flags</b> or <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Store.Response">
            <summary>
            Gets or sets IMAP server response to this operation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference value set.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Store.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Store.MessageInfo">
            <summary>
            Gets IMAP message info.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Store.FlagsSetType">
            <summary>
            Gets flags set type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_e_Store.Flags">
            <summary>
            Gets flags.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Fetch_DataType">
            <summary>
            This class holds IMAP server FETCH return data type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_Fetch_DataType.MessageHeader">
            <summary>
            Message header.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_Fetch_DataType.FullMessage">
            <summary>
            Full message.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.Server.IMAP_Fetch_DataType.MessageStructure">
            <summary>
            Message structure(Full message, all body data truncated).
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo">
            <summary>
            This class represents IMAP message info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.#ctor(System.String,System.Int64,System.String[],System.Int32,System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="id">Message ID.</param>
            <param name="uid">Message IMAP UID value.</param>
            <param name="flags">Message flags.</param>
            <param name="size">Message size in bytes.</param>
            <param name="internalDate">Message IMAP internal date.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>id</b> or <b>flags</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.ContainsFlag(System.String)">
            <summary>
            Gets if this message info contains specified message flag.
            </summary>
            <param name="flag">Message flag.</param>
            <returns>Returns true if message info contains specified message flag.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.FlagsToImapString">
            <summary>
            Flags to IMAP flags string.
            </summary>
            <returns>Returns IMAP flags string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.UpdateFlags(LumiSoft.Net.IMAP.IMAP_Flags_SetType,System.String[])">
            <summary>
            Updates IMAP message flags.
            </summary>
            <param name="setType">Flags set type.</param>
            <param name="flags">IMAP message flags.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>flags</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.ID">
            <summary>
            Gets message ID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.UID">
            <summary>
            Gets message IMAP UID value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.Flags">
            <summary>
            Gets message flags.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.Size">
            <summary>
            Gets message size in bytes.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.InternalDate">
            <summary>
            Gets message IMAP internal date.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_MessageInfo.SeqNo">
            <summary>
            Gets or sets message one-based sequnece number.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Server">
            <summary>
            This class implements IMAPv4 server. Defined RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnMaxConnectionsExceeded(LumiSoft.Net.IMAP.Server.IMAP_Session)">
            <summary>
            Is called when new incoming session and server maximum allowed connections exceeded.
            </summary>
            <param name="session">Incoming session.</param>
            <remarks>This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Server.OnMaxConnectionsPerIPExceeded(LumiSoft.Net.IMAP.Server.IMAP_Session)">
            <summary>
            Is called when new incoming session and server maximum allowed connections per connected IP exceeded.
            </summary>
            <param name="session">Incoming session.</param>
            <remarks>This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Server.GreetingText">
            <summary>
            Gets or sets server greeting text.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Server.MaxBadCommands">
            <summary>
            Gets or sets how many bad commands session can have before it's terminated. Value 0 means unlimited.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid value is passed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Session">
            <summary>
            This class implements IMAP server session. Defined RFC 3501.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder">
            <summary>
            This class holds selected folder data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.#ctor(System.String,System.Boolean,System.Collections.Generic.List{LumiSoft.Net.IMAP.Server.IMAP_MessageInfo})">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="isReadOnly">Specifies if folder is read only.</param>
            <param name="messagesInfo">Messages info.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> or <b>messagesInfo</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.Filter(System.Boolean,LumiSoft.Net.IMAP.IMAP_t_SeqSet)">
            <summary>
            Gets messages which match to the specified sequence set.
            </summary>
            <param name="uid">Specifies if sequence set contains UID or sequence numbers.</param>
            <param name="seqSet">Sequence set.</param>
            <returns>Returns messages which match to the specified sequence set.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>seqSet</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.RemoveMessage(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo)">
            <summary>
            Removes specified message from messages info.
            </summary>
            <param name="message">Message info.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>message</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.GetSeqNo(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo)">
            <summary>
            Gets specified message info IMAP 1-based sequence number.
            </summary>
            <param name="msgInfo">Message info.</param>
            <returns>Returns specified message info IMAP 1-based sequence number.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>msgInfo</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.GetSeqNo(System.Int64)">
            <summary>
            Gets specified message IMAP 1-based sequence number.
            </summary>
            <param name="uid">Message UID.</param>
            <returns>Returns specified message info IMAP 1-based sequence number or -1 if no such message.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.Reindex">
            <summary>
            Reindexes messages sequence numbers.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.Folder">
            <summary>
            Gets folder name with optional path.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.IsReadOnly">
            <summary>
            Gets if folder is read-only.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session._SelectedFolder.MessagesInfo">
            <summary>
            Gets messages info.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader">
            <summary>
            This class implements IMAP client command reader.
            </summary>
            <remarks>Because IMAP command can contain literal strings, then command text can be multiline.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session,System.String,System.Text.Encoding)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <param name="initialCmdLine">IMAP client initial command line.</param>
            <param name="charset">IMAP literal strings charset encoding.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>session</b>,<b>initialCmdLine</b> or <b>charset</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader.Start">
            <summary>
            Start operation processing.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader.EndsWithLiteralString(System.String)">
            <summary>
            Cheks if specified value ends with IMAP literal string.
            </summary>
            <param name="value">Data value.</param>
            <returns>Returns true if value ends with IMAP literal string, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader.GetLiteralSize(System.String)">
            <summary>
            Gets literal string bytes count.
            </summary>
            <param name="cmdLine">Command line with ending literal string.</param>
            <returns>Returns literal string byte count.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cmdLine</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader.RemoveLiteralSpecifier(System.String)">
            <summary>
            Removes literal string specifier({no_bytes}) from the specified string.
            </summary>
            <param name="value">Command line with ending literal string specifier.</param>
            <returns>Returns command line without literal string specifier.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session._CmdReader.CmdLine">
            <summary>
            Gets command line text.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender">
            <summary>
            This class implements IMAP response sender.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.QueueItem">
            <summary>
            This class represents queued IMAP response and it's status.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.QueueItem.#ctor(LumiSoft.Net.IMAP.IMAP_r,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Default constructor.
            </summary>
            <param name="response">IMAP response.</param>
            <param name="completedAsyncCallback">Callback to be called when response sending completes asynchronously.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.QueueItem.IsSent">
            <summary>
            Gets or sets if IMAP response is sent.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.QueueItem.IsAsync">
            <summary>
            Gets or sets if sending complte asynchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.QueueItem.Response">
            <summary>
            Gets IMAP response.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.QueueItem.CompletedAsyncCallback">
            <summary>
            Gets callback to be called when response sending completes asynchronously.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.#ctor(LumiSoft.Net.IMAP.Server.IMAP_Session)">
            <summary>
            Default constructor.
            </summary>
            <param name="session">Owner IMAP session.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>session</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.SendResponseAsync(LumiSoft.Net.IMAP.IMAP_r)">
            <summary>
            Starts sending response.
            </summary>
            <param name="response">IMAP response.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.SendResponseAsync(LumiSoft.Net.IMAP.IMAP_r,System.EventHandler{LumiSoft.Net.EventArgs{System.Exception}})">
            <summary>
            Starts sending response.
            </summary>
            <param name="response">IMAP response.</param>
            <param name="completedAsyncCallback">Callback to be called when this method completes asynchronously.</param>
            <returns>Returns true is method completed asynchronously(the completedAsyncCallback is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>response</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ResponseSender.SendResponsesAsync">
            <summary>
            Starts sending queued responses.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.Start">
            <summary>
            Starts session processing.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnError(System.Exception)">
            <summary>
            Is called when session has processing error.
            </summary>
            <param name="x">Exception happened.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnTimeout">
            <summary>
            This method is called when specified session times out.
            </summary>
            <remarks>
            This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.BeginReadCmd">
            <summary>
            Starts reading incoming command from the connected client.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ProcessCmd(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Completes command reading operation.
            </summary>
            <param name="op">Operation.</param>
            <returns>Returns true if server should start reading next command.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.WriteLine(System.String)">
            <summary>
            Sends and logs specified line to connected host.
            </summary>
            <param name="line">Line to send.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.LogAddRead(System.Int64,System.String)">
            <summary>
            Logs read operation.
            </summary>
            <param name="size">Number of bytes read.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.LogAddWrite(System.Int64,System.String)">
            <summary>
            Logs write operation.
            </summary>
            <param name="size">Number of bytes written.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.LogAddText(System.String)">
            <summary>
            Logs specified text.
            </summary>
            <param name="text">text to log.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.LogAddException(System.Exception)">
            <summary>
            Logs specified exception.
            </summary>
            <param name="exception">Exception to log.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>exception</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.UpdateSelectedFolderAndSendChanges">
            <summary>
            Updates current slected folder status and sends currently selected folder changes versus current folder state.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.SupportsCap(System.String)">
            <summary>
            Gets if session supports specified capability.
            </summary>
            <param name="capability">Capability name.</param>
            <returns>Returns true if session supports specified capability.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ParsePartNumberFromSection(System.String)">
            <summary>
            Parses MIME part-number specifier from BODY[] section string.
            </summary>
            <param name="section">Section string.</param>
            <returns>Returns part-number.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised wehn <b>section</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ParsePartSpecifierFromSection(System.String)">
            <summary>
            Parses MIME part specifier from BODY[] section string.
            </summary>
            <param name="section">Section string.</param>
            <returns>Returns specifier.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised wehn <b>section</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.GetMimeEntity(LumiSoft.Net.Mail.Mail_Message,System.String)">
            <summary>
            Gets specified mime entity. Returns null if specified mime entity doesn't exist.
            </summary>
            <param name="message">Mail message.</param>
            <param name="partNumber">MIME part-number specifier. Nested mime entities are pointed by '.'. 
            For example: 1,1.1,2.1, ... .</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>message</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ConstructBodyStructure(LumiSoft.Net.Mail.Mail_Message,System.Boolean)">
            <summary>
            Constructs FETCH BODY and BODYSTRUCTURE response.
            </summary>
            <param name="message">Mail message.</param>
            <param name="bodystructure">Specifies if to construct BODY or BODYSTRUCTURE.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.ConstructParts(LumiSoft.Net.MIME.MIME_Entity,System.Boolean)">
            <summary>
            Constructs specified entity and it's childentities bodystructure string.
            </summary>
            <param name="entity">Mime entity.</param>
            <param name="bodystructure">Specifies if to construct BODY or BODYSTRUCTURE.</param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.Server">
            <summary>
            Gets session owner IMAP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.Authentications">
            <summary>
            Gets supported SASL authentication methods collection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.BadCommands">
            <summary>
            Gets number of bad commands happened on IMAP session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.AuthenticatedUserIdentity">
            <summary>
            Gets authenticated user identity or null if user has not authenticated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.Capabilities">
            <summary>
            Gets session supported CAPABILITIES.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.SelectedFolderName">
            <summary>
            Gets selected folder name with optional path. Value null means no selected folder.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.Server.IMAP_Session.MailboxEncoding">
            <summary>
            Gets mailbox encoding.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Started">
            <summary>
            Is raised when session has started processing and needs to send "* OK ..." greeting or "* NO ..." error resposne to the connected client.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnStarted(LumiSoft.Net.IMAP.IMAP_r_u_ServerStatus)">
            <summary>
            Raises <b>Started</b> event.
            </summary>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Login">
            <summary>
            Is raised when IMAP session needs to handle LOGIN command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnLogin(System.String,System.String)">
            <summary>
            Raises <b>Login</b> event.
            </summary>
            <param name="user">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Namespace">
            <summary>
            Is raised when IMAP session needs to handle NAMESPACE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnNamespace(LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Namespace</b> event.
            </summary>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.List">
            <summary>
            Is raised when IMAP session needs to handle LIST command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnList(System.String,System.String)">
            <summary>
            Raises <b>List</b> event.
            </summary>
            <param name="refName">Folder reference name.</param>
            <param name="folder">Folder filter.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Create">
            <summary>
            Is raised when IMAP session needs to handle CREATE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnCreate(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Create</b> event.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Delete">
            <summary>
            Is raised when IMAP session needs to handle DELETE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnDelete(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Delete</b> event.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Rename">
            <summary>
            Is raised when IMAP session needs to handle RENAME command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnRename(System.String,System.String,System.String)">
            <summary>
            Raises <b>Rename</b> event.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="currentFolder">Current folder name with optional path.</param>
            <param name="newFolder">New folder name with optional path.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.LSub">
            <summary>
            Is raised when IMAP session needs to handle LSUB command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnLSub(System.String,System.String)">
            <summary>
            Raises <b>LSub</b> event.
            </summary>
            <param name="refName">Folder reference name.</param>
            <param name="folder">Folder filter.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Subscribe">
            <summary>
            Is raised when IMAP session needs to handle SUBSCRIBE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnSubscribe(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Subscribe</b> event.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Unsubscribe">
            <summary>
            Is raised when IMAP session needs to handle SUBSCRIBE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnUnsubscribe(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>OnUnsubscribe</b> event.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Select">
            <summary>
            Is raised when IMAP session needs to handle SELECT command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnSelect(System.String,System.String)">
            <summary>
            Raises <b>Select</b> event.
            </summary>
            <param name="cmdTag">Command tag.</param>
            <param name="folder">Folder name with optional path.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetMessagesInfo">
            <summary>
            Is raised when IMAP session needs to get folder messages info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnGetMessagesInfo(System.String)">
            <summary>
            Raises <b>GetMessagesInfo</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Append">
            <summary>
            Is raised when IMAP session needs to handle APPEND command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnAppend(System.String,System.String[],System.DateTime,System.Int32,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>StoreMessage</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="flags">Message flags.</param>
            <param name="date">Message IMAP internal date.</param>
            <param name="size">Message size in bytes.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetQuotaRoot">
            <summary>
            Is raised when IMAP session needs to handle GETQUOTAROOT command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnGetGuotaRoot(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>GetQuotaRoot</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetQuota">
            <summary>
            Is raised when IMAP session needs to handle GETQUOTA command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnGetQuota(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>GetQuota</b> event.
            </summary>
            <param name="quotaRoot">Quota root name.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.GetAcl">
            <summary>
            Is raised when IMAP session needs to handle GETACL command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnGetAcl(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>GetAcl</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.SetAcl">
            <summary>
            Is raised when IMAP session needs to handle SETACL command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnSetAcl(System.String,System.String,LumiSoft.Net.IMAP.IMAP_Flags_SetType,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>SetAcl</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="identifier">ACL identifier (normally user or group name).</param>
            <param name="flagsSetType">Flags set type.</param>
            <param name="rights">Identifier rights.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.DeleteAcl">
            <summary>
            Is raised when IMAP session needs to handle DELETEACL command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnDeleteAcl(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>DeleteAcl</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="identifier">ACL identifier (normally user or group name).</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.ListRights">
            <summary>
            Is raised when IMAP session needs to handle LISTRIGHTS command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnListRights(System.String,System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>ListRights</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="identifier">ACL identifier (normally user or group name).</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.MyRights">
            <summary>
            Is raised when IMAP session needs to handle MYRIGHTS command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnMyRights(System.String,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>MyRights</b> event.
            </summary>
            <param name="folder">Folder name with optional path.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Fetch">
            <summary>
            Is raised when IMAP session needs to handle FETCH command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnFetch(LumiSoft.Net.IMAP.Server.IMAP_e_Fetch)">
            <summary>
            Raises <b>Fetch</b> event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Search">
            <summary>
            Is raised when IMAP session needs to handle SEARCH command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnSearch(LumiSoft.Net.IMAP.Server.IMAP_e_Search)">
            <summary>
            Raises <b>Search</b> event.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Store">
            <summary>
            Is raised when IMAP session needs to handle STORE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnStore(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.IMAP.IMAP_Flags_SetType,System.String[],LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Store</b> event.
            </summary>
            <param name="msgInfo">Message info.</param>
            <param name="setType">Flags set type.</param>
            <param name="flags">Flags.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Copy">
            <summary>
            Is raised when IMAP session needs to handle COPY command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnCopy(System.String,LumiSoft.Net.IMAP.Server.IMAP_MessageInfo[],LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Copy</b> event.
            </summary>
            <param name="targetFolder">Target folder name with optional path.</param>
            <param name="messagesInfo">Messages info.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="E:LumiSoft.Net.IMAP.Server.IMAP_Session.Expunge">
            <summary>
            Is raised when IMAP session needs to handle EXPUNGE command.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.Server.IMAP_Session.OnExpunge(LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,LumiSoft.Net.IMAP.IMAP_r_ServerStatus)">
            <summary>
            Raises <b>Expunge</b> event.
            </summary>
            <param name="msgInfo">Messgae info.</param>
            <param name="response">Default IMAP server response.</param>
            <returns>Returns event args.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Envelope">
            <summary>
            This class represents IMAP FETCH ENVELOPE data item. Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.#ctor(System.DateTime,System.String,LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],LumiSoft.Net.Mail.Mail_t_Address[],System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="date">Message <b>Date</b> header value.</param>
            <param name="subject">Message <b>Subject</b> header value.</param>
            <param name="from">Message <b>From</b> header value.</param>
            <param name="sender">Message <b>Sender</b> header value.</param>
            <param name="replyTo">Message <b>Reply-To</b> header value.</param>
            <param name="to">Message <b>To</b> header value.</param>
            <param name="cc">Message <b>Cc</b> header value.</param>
            <param name="bcc">Message <b>Bcc</b> header value.</param>
            <param name="inReplyTo">Message <b>In-Reply-To</b> header value.</param>
            <param name="messageID">Message <b>Message-ID</b> header value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.Parse(LumiSoft.Net.StringReader)">
            <summary>
            Parses IMAP ENVELOPE from string.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns parsed IMAP ENVELOPE string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.Parse(LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader)">
            <summary>
            Parses IMAP FETCH ENVELOPE data-item.
            </summary>
            <param name="fetchReader">Fetch reader.</param>
            <returns>Returns parsed IMAP FETCH ENVELOPE data-item.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>fetchReader</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.ConstructEnvelope(LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Construct secified mime entity ENVELOPE string.
            </summary>
            <param name="entity">Mail message.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.ReadAddresses(LumiSoft.Net.StringReader)">
            <summary>
            Reads parenthesized list of addresses.
            </summary>
            <param name="r">String reader.</param>
            <returns>Returns read addresses.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>r</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.ReadAddresses(LumiSoft.Net.IMAP.Client.IMAP_Client._FetchResponseReader)">
            <summary>
            Reads parenthesized list of addresses.
            </summary>
            <param name="fetchReader">Fetch reader.</param>
            <returns>Returns read addresses.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>fetchReader</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.ConstructAddresses(LumiSoft.Net.Mail.Mail_t_Mailbox[],LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Constructs ENVELOPE addresses structure.
            </summary>
            <param name="mailboxes">Mailboxes.</param>
            <param name="wordEncoder">Unicode words encoder.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.ConstructAddress(LumiSoft.Net.Mail.Mail_t_Mailbox,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Constructs ENVELOPE address structure.
            </summary>
            <param name="address">Mailbox address.</param>
            <param name="wordEncoder">Unicode words encoder.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.RemoveCrlf(System.String)">
            <summary>
            Removes CR and LF chars from the specified string.
            </summary>
            <param name="value">String value.</param>
            <returns>Reurns string.</returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Envelope.ReadAndDecodeWord(System.String)">
            <summary>
            Decodes word from reader.
            </summary>
            <param name="text">Text.</param>
            <returns>Returns decoded word.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.Date">
            <summary>
            Gets message <b>Date</b> header field value. Value DateTime.Min means no <b>Date</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.Subject">
            <summary>
            Gets message <b>Subject</b> header field value. Value null means no <b>Subject</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.From">
            <summary>
            Gets message <b>From</b> header field value. Value null means no <b>From</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.Sender">
            <summary>
            Gets message <b>Sender</b> header field value. Value null means no <b>Sender</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.ReplyTo">
            <summary>
            Gets message <b>Reply-To</b> header field value. Value null means no <b>Reply-To</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.To">
            <summary>
            Gets message <b>To</b> header field value. Value null means no <b>To</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.Cc">
            <summary>
            Gets message <b>Cc</b> header field value. Value null means no <b>Cc</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.Bcc">
            <summary>
            Gets message <b>Bcc</b> header field value. Value null means no <b>Bcc</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.InReplyTo">
            <summary>
            Gets message <b>In-Reply-To</b> header field value. Value null means no <b>In-Reply-To</b> header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Envelope.MessageID">
            <summary>
            Gets message <b>Message-ID</b> header field value. Value null means no <b>Message-ID</b> header field.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Fetch_DataItem">
            <summary>
            This class is base class for IMAP FETCH data-items. For more info see RFC 3501. 6.4.5.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Fetch_DataItem_Envelope">
            <summary>
            This class represents FETCH ENVELOPE data item. Defined in RFC 3501.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Fetch_DataItem_Envelope.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Fetch_DataItem_Envelope.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_MessageFlags">
            <summary>
            IMAP message flags.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.None">
            <summary>
            No flags defined.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.Seen">
            <summary>
            Message has been read.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.Answered">
            <summary>
            Message has been answered.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.Flagged">
            <summary>
            Message is "flagged" for urgent/special attention.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.Deleted">
            <summary>
            Message is "deleted" for removal by later EXPUNGE.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.Draft">
            <summary>
            Message has not completed composition.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IMAP.IMAP_MessageFlags.Recent">
            <summary>
            Message is "recently" arrived in this mailbox.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_Response_MyRights">
            <summary>
            This class represents IMAP MYRIGHTS response. Defined in RFC 4314 3.8.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Response_MyRights.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="folder">Folder name with path.</param>
            <param name="rights">Rights values.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Response_MyRights.Parse(System.String)">
            <summary>
            Parses MYRIGHTS response from MYRIGHTS-response string.
            </summary>
            <param name="myRightsResponse">MYRIGHTS response line.</param>
            <returns>Returns parsed MYRIGHTS response.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>myRightsResponse</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_Response_MyRights.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Response_MyRights.FolderName">
            <summary>
            Gets folder name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_Response_MyRights.Rights">
            <summary>
            Gets rights list.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IMAP.IMAP_SequenceSet">
            <summary>
            IMAP sequence-set. RFC 3501.
            <code>
            Examples:
            	2        -> seq-number (2)
            	2:4      -> seq-range  (from 2 - 4)
            	2:*      -> seq-range  (from 2 to last)
            	2,3,10:* -> sequence-set (seq-number,seq-number,seq-range)
            	                       (2,3, 10 - last)
            	
            	NOTES:
            		*) comma separates sequence parts
            		*) * means maximum value.
            </code>
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_SequenceSet.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_SequenceSet.Parse(System.String)">
            <summary>
            Parses sequence-set from specified string. Throws exception if invalid sequnce-set value.
            </summary>
            <param name="sequenceSetString">Sequence-set string.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_SequenceSet.Parse(System.String,System.Int64)">
            <summary>
            Parses sequence-set from specified string. Throws exception if invalid sequnce-set value.
            </summary>
            <param name="sequenceSetString">Sequence-set string.</param>
            <param name="seqMaxValue">Maximum value. This if for replacement of * value.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_SequenceSet.Contains(System.Int64)">
            <summary>
            Gets if sequence set contains specified number.
            </summary>
            <param name="seqNumber">Number to check.</param>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_SequenceSet.ToSequenceSetString">
            <summary>
            Converts IMAP_SequenceSet to IMAP sequence-set string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IMAP.IMAP_SequenceSet.Parse_Seq_Number(System.String,System.Int64)">
            <summary>
            Parses seq-number from specified value. Throws exception if invalid seq-number value.
            </summary>
            <param name="seqNumberValue">Integer number or *.</param>
            <param name="seqMaxValue">Maximum value. This if for replacement of * value.</param>
        </member>
        <member name="P:LumiSoft.Net.IMAP.IMAP_SequenceSet.Items">
            <summary>
            Gets sequence set ranges.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.Base64">
            <summary>
            This class implements base64 encoder/decoder.  Defined in RFC 4648.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64.Encode(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Encodes bytes.
            </summary>
            <param name="buffer">Data buffer.</param>
            <param name="offset">Offset in the buffer.</param>
            <param name="count">Number of bytes available in the buffer.</param>
            <param name="last">Last data block.</param>
            <returns>Returns encoded data.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64.Decode(System.String,System.Boolean)">
            <summary>
            Decodes specified base64 string.
            </summary>
            <param name="value">Base64 string.</param>
            <param name="ignoreNonBase64Chars">If true all invalid base64 chars ignored. If false, FormatException is raised.</param>
            <returns>Returns decoded data.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:System.FormatException">Is raised when <b>value</b> contains invalid base64 data.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64.Decode(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Decodes specified base64 data.
            </summary>
            <param name="data">Base64 encoded data buffer.</param>
            <param name="offset">Offset in the buffer.</param>
            <param name="count">Number of bytes available in the buffer.</param>
            <param name="ignoreNonBase64Chars">If true all invalid base64 chars ignored. If false, FormatException is raised.</param>
            <returns>Returns decoded data.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
            <exception cref="T:System.FormatException">Is raised when <b>value</b> contains invalid base64 data.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64.Decode(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Decodes base64 encoded bytes.
            </summary>
            <param name="encBuffer">Base64 encoded data buffer.</param>
            <param name="encOffset">Offset in the encBuffer.</param>
            <param name="encCount">Number of bytes available in the encBuffer.</param>
            <param name="buffer">Buffer where to decode data.</param>
            <param name="offset">Offset int the buffer.</param>
            <param name="ignoreNonBase64Chars">If true all invalid base64 chars ignored. If false, FormatException is raised.</param>
            <returns>Returns number of bytes decoded.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>encBuffer</b> or <b>encBuffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of valid range.</exception>
            <exception cref="T:System.FormatException">Is raised when <b>encBuffer</b> contains invalid base64 data.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.Base64Stream">
            <summary>
            This class implements base64 encoder/decoder. Defined in RFC 4648.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream which to encode/decode.</param>
            <param name="owner">Specifies if Base64Stream is owner of <b>stream</b>.</param>
            <param name="addLineBreaks">Specifies if encoder inserts CRLF after each 76 bytes.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.#ctor(System.IO.Stream,System.Boolean,System.Boolean,System.IO.FileAccess)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream which to encode/decode.</param>
            <param name="owner">Specifies if Base64Stream is owner of <b>stream</b>.</param>
            <param name="addLineBreaks">Specifies if encoder inserts CRLF after each 76 bytes.</param>
            <param name="access">This stream access mode.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.Dispose">
            <summary>
            Celans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="M:LumiSoft.Net.IO.Base64Stream.Seek(System.Int64,System.IO.SeekOrigin)">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of valid range.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when reading not supported.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes a sequence of bytes, writes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this.Finish has been called and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when reading not supported.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.Base64Stream.Finish">
            <summary>
            Completes encoding. Call this method if all data has written and no more data. 
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.Base64Stream.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.Base64Stream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.Base64Stream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.Base64Stream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.Base64Stream.Length">
            <summary>
            Gets the length in bytes of the stream.  This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.Base64Stream.Position">
            <summary>
            Gets or sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.DataSizeExceededException">
            <summary>
            The exception that is thrown when maximum allowed data size has exceeded.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.DataSizeExceededException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.FifoBuffer">
            <summary>
            Implements FIFO(first in - first out) buffer.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.FifoBuffer.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="maxSize">Maximum number of bytes can buffer in FIFO.</param>
            <exception cref="T:System.ArgumentException">Is raised when </exception>
        </member>
        <member name="M:LumiSoft.Net.IO.FifoBuffer.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads up to specified count of bytes from the FIFO buffer.
            </summary>
            <param name="buffer">Buffer where to store data.</param>
            <param name="offset">Index in the buffer.</param>
            <param name="count">Maximum number of bytes to read.</param>
            <returns>Returns number of bytes readed. Returns 0 if no data in the buffer.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of allowed range.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.FifoBuffer.Write(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes specified number of bytes to the FIFO buffer.
            </summary>
            <param name="buffer">Data buffer.</param>
            <param name="offset">Index in the buffer.</param>
            <param name="count">Number of bytes to wrtite.</param>
            <param name="ignoreBufferFull">If true, disables excption raising when FIFO full.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of allowed range.</exception>
            <exception cref="T:LumiSoft.Net.IO.DataSizeExceededException">Is raised when ignoreBufferFull = false and FIFO buffer has no room to store data.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.FifoBuffer.Clear">
            <summary>
            Clears buffer data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.FifoBuffer.TrimStart">
            <summary>
            Removes unused space from the buffer beginning.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.FifoBuffer.MaxSize">
            <summary>
            Gets maximum number of bytes can buffer in FIFO.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.FifoBuffer.Available">
            <summary>
            Gets number of bytes avialable in FIFO.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.IncompleteDataException">
            <summary>
            The exception that is thrown when incomplete data received.
            For example for ReadPeriodTerminated() method reaches end of stream before getting period terminator.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.IncompleteDataException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.IncompleteDataException.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="message">Exception message text.</param>
        </member>
        <member name="T:LumiSoft.Net.IO.JunkingStream">
            <summary>
            This stream just junks all written data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.JunkingStream.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.JunkingStream.Flush">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.JunkingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of the stream to the given value. This method always throws a NotSupportedException.
            </summary>
            <param name="offset">This parameter is not used.</param>
            <param name="origin">This parameter is not used.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IO.JunkingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the stream. This method always throws a NotSupportedException.
            </summary>
            <param name="value">This parameter is not used.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.JunkingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the stream. This method always throws a NotSupportedException.
            </summary>
            <param name="buffer">This parameter is not used.</param>
            <param name="offset">This parameter is not used.</param>
            <param name="size">This parameter is not used.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.IO.JunkingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data to the stream.
            </summary>
            <param name="buffer">An array of type Byte that contains the data to write to the stream.</param>
            <param name="offset">The location in buffer from which to start writing data.</param>
            <param name="size">The number of bytes to write to the stream.</param>
        </member>
        <member name="P:LumiSoft.Net.IO.JunkingStream.CanRead">
            <summary>
            Gets a value indicating whether the stream supports reading. This property always returns false.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.JunkingStream.CanSeek">
            <summary>
            Gets a value indicating whether the stream supports seeking. This property always returns false.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.JunkingStream.CanWrite">
            <summary>
            Gets a value that indicates whether the stream supports writing.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.JunkingStream.Length">
            <summary>
            Gets the length of the data available on the stream. This property always throws a NotSupportedException.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.JunkingStream.Position">
            <summary>
            Gets or sets the current position in the stream. This property always throws a NotSupportedException.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.LineSizeExceededException">
            <summary>
            The exception that is thrown when maximum allowed line size has exceeded.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.LineSizeExceededException.#ctor">
            <summary>
            Default coonstructor.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.MemoryStreamEx">
            <summary>
            This class represents auto switching memory/temp-file stream.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="memSize">Maximum bytes store to memory, before switching over temporary file.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.Finalize">
            <summary>
            Destructor - Just incase user won't call dispose.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MemoryStreamEx.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MemoryStreamEx.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MemoryStreamEx.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MemoryStreamEx.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MemoryStreamEx.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="M:LumiSoft.Net.IO.MemoryStreamEx.Seek(System.Int64,System.IO.SeekOrigin)">Is raised when this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MemoryStreamEx.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.MultiStream">
            <summary>
            This class combines multiple stream into one stream for reading.
            The most common usage for that stream is when you need to insert some data to the beginning of some stream.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.AppendStream(System.IO.Stream)">
            <summary>
            Appends this stream to read queue.
            </summary>
            <param name="stream">Stream to add.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="M:LumiSoft.Net.IO.MultiStream.Seek(System.Int64,System.IO.SeekOrigin)">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.MultiStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MultiStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MultiStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MultiStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MultiStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when one of the source streams won't support <b>Length</b> property.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.MultiStream.Position">
            <summary>
            Gets or sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.PartialStream">
            <summary>
            Implements read-only stream what operates on specified range of source stream
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.#ctor(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Source stream.</param>
            <param name="start">Zero based start positon in source stream.</param>
            <param name="length">Length of stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.PartialStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.PartialStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.PartialStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.PartialStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.PartialStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="M:LumiSoft.Net.IO.PartialStream.Seek(System.Int64,System.IO.SeekOrigin)">Is raised when this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.PartialStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.QuotedPrintableStream">
            <summary>
            Implements RFC 2045 6.7. Quoted-Printable stream.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.QuotedPrintableStream.#ctor(LumiSoft.Net.IO.SmartStream,System.IO.FileAccess)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Source stream.</param>
            <param name="access">Specifies stream access mode.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.QuotedPrintableStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.QuotedPrintableStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.QuotedPrintableStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.QuotedPrintableStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when reading not supported.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.QuotedPrintableStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes a sequence of bytes, writes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when reading not supported.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.QuotedPrintableStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.QuotedPrintableStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.QuotedPrintableStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.QuotedPrintableStream.Length">
            <summary>
            Gets the length in bytes of the stream.  This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.QuotedPrintableStream.Position">
            <summary>
            Gets or sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.ReadWriteControlledStream">
            <summary>
            This class implements read,write or read-write access stream.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.ReadWriteControlledStream.#ctor(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Source stream.</param>
            <param name="access">This stream access mode.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.ReadWriteControlledStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.ReadWriteControlledStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.ReadWriteControlledStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.ReadWriteControlledStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when reading not supported.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.ReadWriteControlledStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when reading not supported.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.ReadWriteControlledStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.ReadWriteControlledStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.ReadWriteControlledStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.ReadWriteControlledStream.Length">
            <summary>
            Gets the length in bytes of the stream.  This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.ReadWriteControlledStream.Position">
            <summary>
            Gets or sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.SizeExceededAction">
            <summary>
            Specifies action what is done if requested action exceeds maximum allowed size.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IO.SizeExceededAction.ThrowException">
            <summary>
            Throws exception at once when maximum size exceeded.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.IO.SizeExceededAction.JunkAndThrowException">
            <summary>
            Junks all data what exceeds maximum allowed size and after requested operation completes,
            throws exception.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream">
            <summary>
            This class is wrapper to normal stream, provides most needed stream methods which are missing from normal stream.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP">
            <summary>
            This class implements read line operation.
            </summary>
            <remarks>This class can be reused on multiple calls of <see cref="M:LumiSoft.Net.IO.SmartStream.ReadLine(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP,System.Boolean)">SmartStream.ReadLine</see> method.</remarks>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.#ctor(System.Byte[],LumiSoft.Net.IO.SizeExceededAction)">
            <summary>
            Default constructor.
            </summary>
            <param name="buffer">Line buffer.</param>
            <param name="exceededAction">Specifies how line-reader behaves when maximum line size exceeded.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Start(System.Boolean,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Starts reading line.
            </summary>
            <param name="async">If true then this method can complete asynchronously. If false, this method completed always syncronously.</param>
            <param name="stream">Owner SmartStream.</param>
            <returns>Returns true if read line completed synchronously, false if asynchronous operation pending.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Buffering_Completed(System.Exception)">
            <summary>
            Is called when asynchronous read buffer buffering has completed.
            </summary>
            <param name="x">Exception that occured during async operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.DoLineReading(System.Boolean)">
            <summary>
            Starts/continues line reading.
            </summary>
            <param name="async">If true then this method can complete asynchronously. If false, this method completed always syncronously.</param>
            <returns>Returns true if line reading completed.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.SetInfo(System.Int32,System.Exception)">
            <summary>
            Sets specified field values.
            </summary>
            <param name="bytesInBuffer">Number of bytes in buffer.</param>
            <param name="exception">Exception.</param>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.IsCompleted">
            <summary>
            Gets if asynchronous operation has completed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.IsCompletedSynchronously">
            <summary>
            Gets if operation completed synchronously.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.SizeExceededAction">
            <summary>
            Gets line size exceeded action.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Buffer">
            <summary>
            Gets line buffer.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.BytesInBuffer">
            <summary>
            Gets number of bytes stored in the buffer. Ending line-feed characters included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.LineBytesInBuffer">
            <summary>
            Gets number of line data bytes stored in the buffer. Ending line-feed characters not included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.LineAscii">
            <summary>
            Gets line as ASCII string. Returns null if EOS(end of stream) reached. Ending line-feed characters not included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.LineUtf8">
            <summary>
            Gets line as UTF-8 string. Returns null if EOS(end of stream) reached. Ending line-feed characters not included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.LineUtf32">
            <summary>
            Gets line as UTF-32 string. Returns null if EOS(end of stream) reached. Ending line-feed characters not included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Error">
            <summary>
            Gets error occured during asynchronous operation. Value null means no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="E:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.Completed">
            <summary>
            Is raised when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP.OnCompleted">
            <summary>
            Raises <b>Completed</b> event.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP">
            <summary>
            This class implements read period-terminated operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.#ctor(System.IO.Stream,System.Int64,LumiSoft.Net.IO.SizeExceededAction)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream wehre to sore readed data.</param>
            <param name="maxCount">Maximum number of bytes to read. Value 0 means not limited.</param>
            <param name="exceededAction">Specifies how period-terminated reader behaves when <b>maxCount</b> exceeded.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Start(LumiSoft.Net.IO.SmartStream)">
            <summary>
            Starts period-terminated data reading.
            </summary>
            <param name="stream">Owner SmartStream.</param>
            <returns>Returns true if read line completed synchronously, false if asynchronous operation pending.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.m_pReadLineOP_Completed(System.Object,LumiSoft.Net.EventArgs{LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP})">
            <summary>
            Is called when asynchronous line reading has completed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.DoRead">
            <summary>
            Continues period-terminated reading.
            </summary>
            <returns>Returns true if read line completed synchronously, false if asynchronous operation pending.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.ProcessReadedLine">
            <summary>
            Processes readed line.
            </summary>
            <returns>Returns true if read period-terminated operation has completed.</returns>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.IsCompleted">
            <summary>
            Gets if asynchronous operation has completed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.IsCompletedSynchronously">
            <summary>
            Gets if operation completed synchronously.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Stream">
            <summary>
            Gets stream where period terminated data has stored.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.BytesStored">
            <summary>
            Gets number of bytes stored to <see cref="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Stream">Stream</see> stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.LinesStored">
            <summary>
            Gets number of lines stored to <see cref="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Stream">Stream</see> stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Error">
            <summary>
            Gets error occured during asynchronous operation. Value null means no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="E:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.Completed">
            <summary>
            Is raised when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP.OnCompleted">
            <summary>
            Raises <b>Completed</b> event.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP">
            <summary>
            This class implements asynchronous read buffering.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.#ctor(LumiSoft.Net.IO.SmartStream)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Owner stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.Start(System.Boolean,System.Byte[],System.Int32)">
            <summary>
            Starts asynchronous operation.
            </summary>
            <param name="async">If true then this method can complete asynchronously. If false, this method completed always syncronously.</param>
            <param name="buffer">Buffer where to store readed data.</param>
            <param name="count">Maximum number of bytes to read.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <returns>Returns true if operation completed synchronously, false if asynchronous operation pending.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.ReleaseEvents">
            <summary>
            Releases all events attached to this class.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.IsCompleted">
            <summary>
            Gets if asynchronous operation has completed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.IsCompletedSynchronously">
            <summary>
            Gets if operation completed synchronously.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.Buffer">
            <summary>
            Gets read buffer.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.BytesInBuffer">
            <summary>
            Gets number of bytes stored in read buffer.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.Error">
            <summary>
            Gets error occured during asynchronous operation. Value null means no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="E:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.Completed">
            <summary>
            Is raised when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferReadAsyncOP.OnCompleted">
            <summary>
            Raises <b>Completed</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream to wrap.</param>
            <param name="owner">Specifies if SmartStream is owner of <b>stream</b>.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLine(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP,System.Boolean)">
            <summary>
            Begins line reading.
            </summary>
            <param name="op">Read line opeartion.</param>
            <param name="async">If true then this method can complete asynchronously. If false, this method completed always syncronously.</param>
            <returns>Returns true if read line completed synchronously, false if asynchronous operation pending.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BeginReadHeader(System.IO.Stream,System.Int32,LumiSoft.Net.IO.SizeExceededAction,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous header reading from the source stream.
            </summary>
            <param name="storeStream">Stream where to store readed header.</param>
            <param name="maxCount">Maximum number of bytes to read. Value 0 means not limited.</param>
            <param name="exceededAction">Specifies action what is done if <b>maxCount</b> number of bytes has exceeded.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="state">An object that contains any additional user-defined data.</param>
            <returns>An IAsyncResult that represents the asynchronous call.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>storeStream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.EndReadHeader(System.IAsyncResult)">
            <summary>
            Handles the end of an asynchronous header reading.
            </summary>
            <param name="asyncResult">An IAsyncResult that represents an asynchronous call.</param>
            <returns>Returns number of bytes stored to <b>storeStream</b>.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>EndReadLine</b> has already been called for specified <b>asyncResult</b>.</exception>
            <exception cref="T:LumiSoft.Net.IO.LineSizeExceededException">Is raised when source stream has too big line.</exception>
            <exception cref="T:LumiSoft.Net.IO.DataSizeExceededException">Is raised when reading exceeds <b>maxCount</b> specified value.</exception>
            <exception cref="T:LumiSoft.Net.IO.IncompleteDataException">Is raised when source stream closed before header-terminator reached.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadHeader(System.IO.Stream,System.Int32,LumiSoft.Net.IO.SizeExceededAction)">
            <summary>
            Reads header from stream and stores to the specified <b>storeStream</b>.
            </summary>
            <param name="storeStream">Stream where to store readed header.</param>
            <param name="maxCount">Maximum number of bytes to read. Value 0 means not limited.</param>
            <param name="exceededAction">Specifies action what is done if <b>maxCount</b> number of bytes has exceeded.</param>
            <returns>Returns how many bytes readed from source stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>storeStream</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.IO.LineSizeExceededException">Is raised when source stream has too big line.</exception>
            <exception cref="T:LumiSoft.Net.IO.DataSizeExceededException">Is raised when reading exceeds <b>maxCount</b> specified value.</exception>
            <exception cref="T:LumiSoft.Net.IO.IncompleteDataException">Is raised when source stream closed before header-terminator reached.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadPeriodTerminated(LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP,System.Boolean)">
            <summary>
            Begins period-terminated data reading.
            </summary>
            <param name="op">Read period terminated opeartion.</param>
            <param name="async">If true then this method can complete asynchronously. If false, this method completed always syncronously.</param>
            <returns>Returns true if read line completed synchronously, false if asynchronous operation pending.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BeginReadFixedCount(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous data reading from the source stream.
            </summary>
            <param name="storeStream">Stream where to store readed header.</param>
            <param name="count">Number of bytes to read.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="state">An object that contains any additional user-defined data.</param>
            <returns>An IAsyncResult that represents the asynchronous call.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>storeStream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.EndReadFixedCount(System.IAsyncResult)">
            <summary>
            Handles the end of an asynchronous data reading.
            </summary>
            <param name="asyncResult">An IAsyncResult that represents an asynchronous call.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>EndReadToStream</b> has already been called for specified <b>asyncResult</b>.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadFixedCount(System.IO.Stream,System.Int64)">
            <summary>
            Reads specified number of bytes from source stream and writes to the specified stream.
            </summary>
            <param name="storeStream">Stream where to store readed data.</param>
            <param name="count">Number of bytes to read.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>storeStream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadFixedCountString(System.Int32)">
            <summary>
            Reads specified number of bytes from source stream and converts it to string with current encoding.
            </summary>
            <param name="count">Number of bytes to read.</param>
            <returns>Returns readed data as string.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadAll(System.IO.Stream)">
            <summary>
            Reads all data from source stream and stores to the specified stream.
            </summary>
            <param name="stream">Stream where to store readed data.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Peek">
            <summary>
            Returns the next available character but does not consume it.
            </summary>
            <returns>An integer representing the next character to be read, or -1 if no more characters are available.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Write(System.String)">
            <summary>
            Writes specified string data to stream.
            </summary>
            <param name="data">Data to write.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteLine(System.String)">
            <summary>
            Writes specified line to stream. If CRLF is missing, it will be added automatically to line data.
            </summary>
            <param name="line">Line to send.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>line</b> is null.</exception>
            <returns>Returns number of raw bytes written.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStream(System.IO.Stream)">
            <summary>
            Writes all source <b>stream</b> data to stream.
            </summary>
            <param name="stream">Stream which data to write.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStream(System.IO.Stream,System.Int64)">
            <summary>
            Writes specified number of bytes from source <b>stream</b> to stream.
            </summary>
            <param name="stream">Stream which data to write.</param>
            <param name="count">Number of bytes to write.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when <b>count</b> argument has invalid value.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsync(LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream which data to write.</param>
            <param name="count">Number of bytes to write. Value -1 means all stream data will be written.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.Start(LumiSoft.Net.IO.SmartStream)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner SmartStream.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.BeginReadData">
            <summary>
            Starts reading data.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.ProcessReadDataResult(System.IAsyncResult)">
            <summary>
            Processes read data result.
            </summary>
            <param name="readResult">Asynchronous result.</param>
            <returns>Retruns true if this method completed asynchronously, otherwise false.</returns>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.BytesWritten">
            <summary>
            Gets number of bytes written.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteStreamAsync(LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP)">
            <summary>
            Starts writing stream data to this stream.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IO.SmartStream.WriteStreamAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminated(System.IO.Stream)">
            <summary>
            Writes period handled and terminated data to this stream.
            </summary>
            <param name="stream">Source stream. Reading starts from stream current location.</param>
            <returns>Returns number of bytes written to stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
            <exception cref="T:LumiSoft.Net.IO.LineSizeExceededException">Is raised when <b>stream</b> has too big line.</exception>        
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsync(LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Source stream. Reading starts from stream current location.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.Start(LumiSoft.Net.IO.SmartStream)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner SmartStream.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.ReadLineCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when source stream read line reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.SendLineCompleted(System.IAsyncResult)">
            <summary>
            Is called when line sending has completed.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.SendTerminatorCompleted(System.IAsyncResult)">
            <summary>
            Is called when ".CRLF" or "CRLF.CRLF" terminator sending has completed.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.BytesWritten">
            <summary>
            Gets number of bytes written.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsync(LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP)">
            <summary>
            Starts writing period handled and terminated data to this stream.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.IO.SmartStream.WritePeriodTerminatedAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.WriteHeader(System.IO.Stream)">
            <summary>
            Reads header from source <b>stream</b> and writes it to stream.
            </summary>
            <param name="stream">Stream from where to read header.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of valid range.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.EndRead(System.IAsyncResult)">
            <summary>
            Handles the end of an asynchronous data reading.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The total number of bytes read into the <b>buffer</b>. This can be less than the number of bytes requested 
            if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of valid range.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BufferRead(System.Boolean,LumiSoft.Net.IO.SmartStream.BufferCallback)">
            <summary>
            Begins buffering read-buffer.
            </summary>
            <param name="async">If true then this method can complete asynchronously. If false, this method completed always syncronously.</param>
            <param name="asyncCallback">The callback that is executed when asynchronous operation completes. 
            If operation completes synchronously, no callback called.</param>
            <returns>
            Returns true if the I/O operation is pending. The BufferReadAsyncEventArgs.Completed event on the context parameter will be raised upon completion of the operation. 
            Returns false if the I/O operation completed synchronously. The BufferReadAsyncEventArgs.Completed event on the context parameter will not be raised and the context object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. 
            </returns>
            <exception cref="T:System.InvalidOperationException">Is raised when there is data in read buffer and this method is called.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.SourceStream">
            <summary>
            Gets this stream underlying stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.IsOwner">
            <summary>
            Gets if SmartStream is owner of source stream. This property affects like closing this stream will close SourceStream if IsOwner true.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.LastActivity">
            <summary>
            Gets the last time when data was read or written.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BytesReaded">
            <summary>
            Gets how many bytes are readed through this stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BytesWritten">
            <summary>
            Gets how many bytes are written through this stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.BytesInReadBuffer">
            <summary>
            Gets number of bytes in read buffer.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.Encoding">
            <summary>
            Gets or sets string related methods default encoding.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when null value is passed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation">
            <summary>
            This class implements asynchronous line reading.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.#ctor(LumiSoft.Net.IO.SmartStream,System.Byte[],System.Int32,System.Int32,LumiSoft.Net.IO.SizeExceededAction,System.AsyncCallback,System.Object)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Owner stream.</param>
            <param name="buffer">Buffer where to store data.</param>
            <param name="offset">The location in <b>buffer</b> to begin storing the data.</param>
            <param name="maxCount">Maximum number of bytes to read.</param>
            <param name="exceededAction">Specifies how this method behaves when maximum line size exceeded.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="asyncState">User-defined object that qualifies or contains information about an asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b>,<b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the arguments has out of valid range.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.Buffering_Completed(System.Exception)">
            <summary>
            Is called when asynchronous read buffer buffering has completed.
            </summary>
            <param name="x">Exception that occured during async operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.DoLineReading">
            <summary>
            Does line reading.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.Completed">
            <summary>
            This method must be called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.AsyncWaitHandle">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.IsEndCalled">
            <summary>
            Gets or sets if <b>EndReadLine</b> method is called for this asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.Buffer">
            <summary>
            Gets store buffer.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.BytesReaded">
            <summary>
            Gets number of bytes readed from source stream.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadLineAsyncOperation.BytesStored">
            <summary>
            Gets number of bytes stored in to <b>Buffer</b>.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation">
            <summary>
            This class implements asynchronous line-based terminated data reader, where terminator is on line itself.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.#ctor(LumiSoft.Net.IO.SmartStream,System.String,System.IO.Stream,System.Int64,LumiSoft.Net.IO.SizeExceededAction,System.AsyncCallback,System.Object)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Owner stream.</param>
            <param name="terminator">Data terminator.</param>
            <param name="storeStream">Stream where to store readed header.</param>
            <param name="maxCount">Maximum number of bytes to read. Value 0 means not limited.</param>
            <param name="exceededAction">Specifies how this method behaves when maximum line size exceeded.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="asyncState">User-defined object that qualifies or contains information about an asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b>,<b>terminator</b> or <b>storeStream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.ReadLine_Completed(System.IAsyncResult)">
            <summary>
            This method is called when asyynchronous line reading has completed.
            </summary>
            <param name="asyncResult">An IAsyncResult that represents an asynchronous call.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.Completed">
            <summary>
            This method must be called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.Terminator">
            <summary>
            Gets terminator.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.AsyncWaitHandle">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.IsEndCalled">
            <summary>
            Gets or sets if <b>EndReadLine</b> method is called for this asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.BytesStored">
            <summary>
            Gets number of bytes stored in to <b>storeStream</b>.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToTerminatorAsyncOperation.Exception">
            <summary>
            Gets exception happened on asynchronous operation. Returns null if operation was successfull.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation">
            <summary>
            This class implements asynchronous read to stream data reader.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.#ctor(LumiSoft.Net.IO.SmartStream,System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Owner stream.</param>
            <param name="storeStream">Stream where to store readed data.</param>
            <param name="count">Number of bytes to read from source stream.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="asyncState">User-defined object that qualifies or contains information about an asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> or <b>storeStream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.Buffering_Completed(System.Exception)">
            <summary>
            Is called when asynchronous read buffer buffering has completed.
            </summary>
            <param name="x">Exception that occured during async operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.DoDataReading">
            <summary>
            Does data reading.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.Completed">
            <summary>
            This method must be called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.AsyncWaitHandle">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.IsEndCalled">
            <summary>
            Gets or sets if <b>EndReadLine</b> method is called for this asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.BytesStored">
            <summary>
            Gets number of bytes stored in to <b>storeStream</b>.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadToStreamAsyncOperation.Exception">
            <summary>
            Gets exception happened on asynchronous operation. Returns null if operation was successfull.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation">
            <summary>
            This class implements asynchronous data reader.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.#ctor(LumiSoft.Net.IO.SmartStream,System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Owner stream.</param>
            <param name="buffer">Buffer where to store data.</param>
            <param name="offset">The location in <b>buffer</b> to begin storing the data.</param>
            <param name="maxSize">Maximum number of bytes to read.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="asyncState">User-defined object that qualifies or contains information about an asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.Buffering_Completed(System.Exception)">
            <summary>
            Is called when asynchronous read buffer buffering has completed.
            </summary>
            <param name="x">Exception that occured during async operation.</param>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.DoRead">
            <summary>
            Does asynchronous data reading.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.Completed">
            <summary>
            This method must be called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.AsyncWaitHandle">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.IsEndCalled">
            <summary>
            Gets or sets if <b>EndReadLine</b> method is called for this asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.Buffer">
            <summary>
            Gets store buffer.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IO.SmartStream.ReadAsyncOperation.BytesStored">
            <summary>
            Gets number of bytes stored in to <b>Buffer</b>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.BeginReadLine(System.Byte[],System.Int32,System.Int32,LumiSoft.Net.IO.SizeExceededAction,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous line reading from the source stream.
            </summary>
            <param name="buffer">Buffer where to store readed line data.</param>
            <param name="offset">The location in <b>buffer</b> to begin storing the data.</param>
            <param name="maxCount">Maximum number of bytes to read.</param>
            <param name="exceededAction">Specifies how this method behaves when maximum line size exceeded.</param>
            <param name="callback">The AsyncCallback delegate that is executed when asynchronous operation completes.</param>
            <param name="state">An object that contains any additional user-defined data.</param>
            <returns>An IAsyncResult that represents the asynchronous call.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IO.SmartStream.EndReadLine(System.IAsyncResult)">
            <summary>
            Handles the end of an asynchronous line reading.
            </summary>
            <param name="asyncResult">An IAsyncResult that represents an asynchronous call.</param>
            <returns>Returns number of bytes stored to <b>buffer</b>. Returns -1 if no more data, end of stream reached.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>EndReadLine</b> has already been called for specified <b>asyncResult</b>.</exception>
            <exception cref="T:LumiSoft.Net.IO.LineSizeExceededException">Is raised when <b>maxCount</b> value is exceeded.</exception>        
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_h_AddressList">
            <summary>
            This class represent generic <b>address-list</b> header fields. For example: To header.
            </summary>
            <example>
            <code>
            RFC 5322.
                header       = "FiledName:" address-list CRLF
                address-list = (address *("," address))
                address      = mailbox / group
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_AddressList.#ctor(System.String,LumiSoft.Net.Mail.Mail_t_AddressList)">
            <summary>
            Default constructor.
            </summary>
            <param name="fieldName">Header field name. For example: "To".</param>
            <param name="values">Addresses collection.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>filedName</b> or <b>values</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_AddressList.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_AddressList.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_AddressList.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_AddressList.Name">
            <summary>
            Gets header field name. For example "To".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_AddressList.Addresses">
            <summary>
            Gets addresses collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_h_DispositionNotificationOptions">
            <summary>
            Represents "Disposition-Notification-Options:" header. Defined in RFC 2298 2.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_DispositionNotificationOptions.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_DispositionNotificationOptions.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_DispositionNotificationOptions.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_DispositionNotificationOptions.Name">
            <summary>
            Gets header field name. For example "Sender".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_DispositionNotificationOptions.Address">
            <summary>
            Gets or sets mailbox address.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_h_Mailbox">
            <summary>
            This class represent generic <b>mailbox</b> header fields. For example: Sender: header.
            </summary>
            <example>
            <code>
            RFC 5322.
                header = "FiledName:" mailbox CRLF
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_Mailbox.#ctor(System.String,LumiSoft.Net.Mail.Mail_t_Mailbox)">
            <summary>
            Default constructor.
            </summary>
            <param name="fieldName">Header field name. For example: "Sender".</param>
            <param name="mailbox">Mailbox value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>filedName</b> or <b>mailbox</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_Mailbox.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Sender: john.doe@domain.com'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_Mailbox.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Mailbox.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Mailbox.Name">
            <summary>
            Gets header field name. For example "Sender".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Mailbox.Address">
            <summary>
            Gets mailbox address.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_h_MailboxList">
            <summary>
            This class represent generic <b>mailbox-list</b> header fields. For example: From header.
            </summary>
            <example>
            <code>
            RFC 5322.
                header       = "FiledName:" mailbox-list CRLF
                mailbox-list =  (mailbox *("," mailbox)) / obs-mbox-list
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_MailboxList.#ctor(System.String,LumiSoft.Net.Mail.Mail_t_MailboxList)">
            <summary>
            Default constructor.
            </summary>
            <param name="filedName">Header field name. For example: "To".</param>
            <param name="values">Addresses collection.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>filedName</b> or <b>values</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_MailboxList.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_MailboxList.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_MailboxList.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_MailboxList.Name">
            <summary>
            Gets header field name. For example "From".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_MailboxList.Addresses">
            <summary>
            Gets addresses collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_h_Received">
             <summary>
             Represents "Received:" header. Defined in RFC 5321 4.4.
             </summary>
             <remarks>
             <code>
             RFC 5321 4.4.
                 Time-stamp-line = "Received:" FWS Stamp CRLF
                 
                 Stamp           = From-domain By-domain Opt-info [CFWS] ";" FWS date-time
                                 ; where "date-time" is as defined in RFC 5322 [4]
                                 ; but the "obs-" forms, especially two-digit
                                 ; years, are prohibited in SMTP and MUST NOT be used.
                                 
                 From-domain     = "FROM" FWS Extended-Domain
            
                 By-domain       = CFWS "BY" FWS Extended-Domain
            
                 Extended-Domain = Domain / ( Domain FWS "(" TCP-info ")" ) / ( address-literal FWS "(" TCP-info ")" )
            
                 TCP-info        = address-literal / ( Domain FWS address-literal )
                                 ; Information derived by server from TCP connection not client EHLO.
            
                 Opt-info        = [Via] [With] [ID] [For] [Additional-Registered-Clauses]
            
                 Via             = CFWS "VIA" FWS Link
            
                 With            = CFWS "WITH" FWS Protocol
            
                 ID              = CFWS "ID" FWS ( Atom / msg-id )
                                 ; msg-id is defined in RFC 5322 [4]
            
                 For            = CFWS "FOR" FWS ( Path / Mailbox )
                 
                 Additional-Registered-Clauses  = CFWS Atom FWS String
            
                 Link           = "TCP" / Addtl-Link
            
                 Addtl-Link     = Atom
                 
                 Protocol       = "ESMTP" / "SMTP" / Attdl-Protocol
                 
                 Mailbox        = Local-part "@" ( Domain / address-literal )
             </code>
             </remarks>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_Received.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Default constructor.
            </summary>
            <param name="from">Host from where message was received.</param>
            <param name="by">Host name what received message.</param>
            <param name="time">Date time when message was received.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>from</b> or <b>by</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_Received.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Sender: john.doe@domain.com'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_Received.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.Name">
            <summary>
            Returns always "Received".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.From">
            <summary>
            Gets or sets host from where message was received.
            </summary>
            <remarks>Normally this is just EHLO/HELO host name what client reported to SMTP server.</remarks>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference passed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid value passed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.From_TcpInfo">
            <summary>
            Gets or sets From TCP-Info value. Value null means not specified.
            </summary>
            <remarks>This value is message sender host IP and optional dns host name.
            This value is based on server connection info, not client reported info(EHLO/HELO).
            </remarks>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.By">
            <summary>
            Gets or sets host name what received message.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference passed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid value passed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.By_TcpInfo">
            <summary>
            Gets or sets By TCP-Info value. Value null means not specified.
            </summary>
            <remarks>RFC defines it, but i don't see any point about that value.</remarks>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.Via">
            <summary>
            Gets or sets non-internet transport. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.With">
            <summary>
            Gets or sets receiving protocol. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.ID">
            <summary>
            Gets or sets ID value. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.For">
            <summary>
            Gets or sets mailbox for who message was received. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_Received.Time">
            <summary>
            Gets or sets time when message was received.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_h_ReturnPath">
            <summary>
            Represents "Return-Path:" header. Defined in RFC 5322 3.6.7.
            </summary>
            <example>
            <code>
            RFC 5322 3.6.7.
                return     = "Return-Path:" path CRLF
                path       = angle-addr / ([CFWS] "&lt;" [CFWS] "&gt;" [CFWS])
                angle-addr = [CFWS] "&lt;" addr-spec "&gt;" [CFWS]
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_ReturnPath.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="address">Address. Value null means null-path.</param>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_ReturnPath.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Return-Path: &lt;jhon.doe@domain.com&gt;'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_h_ReturnPath.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_ReturnPath.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_ReturnPath.Name">
            <summary>
            Gets header field name. For example "Sender".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_h_ReturnPath.Address">
            <summary>
            Gets mailbox address. Value null means null-path.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_Message">
            <summary>
            This class represent electronic mail message. Defined in RFC 5322.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.ParseFromByte(System.Byte[])">
            <summary>
            Parses mail message from the specified byte array.
            </summary>
            <param name="data">Mail message data.</param>
            <returns>Returns parsed mail message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.ParseFromByte(System.Byte[],System.Text.Encoding)">
            <summary>
            Parses mail message from the specified byte array.
            </summary>
            <param name="data">Mail message data.</param>
            <param name="headerEncoding">Header reading encoding. If not sure UTF-8 is recommended.</param>
            <returns>Returns parsed mail message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> or <b>headerEncoding</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.ParseFromFile(System.String)">
            <summary>
            Parses mail message from the specified file.
            </summary>
            <param name="file">File name with path from where to parse mail message.</param>
            <returns>Returns parsed mail message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.ParseFromFile(System.String,System.Text.Encoding)">
            <summary>
            Parses mail message from the specified file.
            </summary>
            <param name="file">File name with path from where to parse mail message.</param>
            <param name="headerEncoding">Header reading encoding. If not sure UTF-8 is recommended.</param>
            <returns>Returns parsed mail message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> or <b>headerEncoding</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.ParseFromStream(System.IO.Stream)">
            <summary>
            Parses mail message from the specified stream.
            </summary>
            <param name="stream">Stream from where to parse mail message. Parsing starts from current stream position.</param>
            <returns>Returns parsed mail message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.ParseFromStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Parses mail message from the specified stream.
            </summary>
            <param name="stream">Stream from where to parse mail message. Parsing starts from current stream position.</param>
            <param name="headerEncoding">Header reading encoding. If not sure UTF-8 is recommended.</param>
            <returns>Returns parsed mail message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> or <b>headerEncoding</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.Clone">
            <summary>
            Clones mail message.
            </summary>
            <returns>Returns cloned message.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Message.GetAttachments(System.Boolean,System.Boolean)">
            <summary>
            Gets this message attachments.
            </summary>
            <param name="includeInline">Specifies if 'inline' entities are included.</param>
            <param name="includeEmbbedMessage">Specifies if embed RFC822 message child entities are included.</param>
            <returns>Returns this message attachments.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Date">
            <summary>
            Gets or sets message date and time. Value <b>DateTime.MinValue</b> means not specified.
            </summary>
            <remarks>Specifies the date and time at which the creator of the message indicated that the 
            message was complete and ready to enter the mail delivery system.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.From">
            <summary>
            Gets or sets message author(s). Value null means not specified.
            </summary>
            <remarks>Specifies the author(s) of the message; that is, the mailbox(es) of the person(s) or 
            system(s) responsible for the writing of the message.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Sender">
            <summary>
            Gets or sets message sender. Value null means not specified.
            </summary>
            <remarks>Specifies the mailbox of the agent responsible for the actual transmission of the message.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ReplyTo">
            <summary>
            Gets or sets mailbox for replies to message. Value null means not specified.
            </summary>
            <remarks>When the "Reply-To:" field is present, it indicates the mailbox(es) to which the author of 
            the message suggests that replies be sent.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.To">
            <summary>
            Gets or sets message primary recipient(s). Value null means not specified.
            </summary>
            <remarks>Contains the address(es) of the primary recipient(s) of the message.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Cc">
            <summary>
            Gets or sets carbon-copy recipient mailbox. Value null means not specified.
            </summary>
            <remarks>Contains the addresses of others who are to receive the message, though the content of the message may not be directed at them.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Bcc">
            <summary>
            Gets or sets blind-carbon-copy recipient mailbox. Value null means not specified.
            </summary>
            <remarks>Contains addresses of recipients of the message whose addresses are not to be revealed to other recipients of the message.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.MessageID">
            <summary>
            Gets or sets message identifier. Value null means not specified.
            </summary>
            <remarks>Contains a single unique message identifier that refers to a particular version of a particular message. 
            If the message is resent without changes, the original Message-ID is retained.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.InReplyTo">
            <summary>
            Gets or sets identify replied-to message(s). Value null means not specified.
            </summary>
            <remarks>The message identifier(s) of the original message(s) to which the current message is a reply.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.References">
            <summary>
            Gets or sets related message identifier(s). Value null means not specified.
            </summary>
            <remarks>The message identifier(s) of other message(s) to which the current message may be related. 
            In RFC 2822, the definition was changed to say that this header field contains a list of all Message-IDs
            of messages in the preceding reply chain.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Subject">
            <summary>
            Gets or sets topic of message. Value null means not specified.
            </summary>
            <remarks>Contains a short string identifying the topic of the message.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Comments">
            <summary>
            Gets or sets additional comments about the message. Value null means not specified.
            </summary>
            <remarks>Contains any additional comments on the text of the body of the message. 
            Warning: Some mailers will not show this field to recipients.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Keywords">
            <summary>
            Gets or sets message key words and/or phrases. Value null means not specified.
            </summary>
            <remarks>Contains a comma-separated list of important words and phrases that might be useful for the recipient.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentDate">
            <summary>
            Gets or sets date and time message is resent. Value <b>DateTime.MinValue</b> means not specified.
            </summary>
            <remarks>Contains the date and time that a message is reintroduced into the message transfer system.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentFrom">
            <summary>
            Gets or sets mailbox of person for whom message is resent. Value null means not specified.
            </summary>
            <remarks>Contains the mailbox of the agent who has reintroduced the message into 
            the message transfer system, or on whose behalf the message has been resent.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentSender">
            <summary>
            Gets or sets mailbox of person who actually resends the message. Value null means not specified.
            </summary>
            <remarks>Contains the mailbox of the agent who has reintroduced the message into 
            the message transfer system, if this is different from the Resent-From value.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentTo">
            <summary>
            Gets or sets mailbox to which message is resent. Value null means not specified.
            </summary>
            <remarks>Contains the mailbox(es) to which the message has been resent.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentCc">
            <summary>
            Gets or sets mailbox(es) to which message is cc'ed on resend. Value null means not specified.
            </summary>
            <remarks>Contains the mailbox(es) to which message is cc'ed on resend.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentBcc">
            <summary>
            Gets or sets mailbox(es) to which message is bcc'ed on resend. Value null means not specified.
            </summary>
            <remarks>Contains the mailbox(es) to which message is bcc'ed on resend.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentReplyTo">
            <summary>
            Gets or sets resent reply-to. Value null means not specified.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ResentMessageID">
            <summary>
            Gets or sets message identifier for resent message. Value null means not specified.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ReturnPath">
            <summary>
            Gets or sets message return path. Value null means not specified.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Received">
            <summary>
            Gets mail transfer trace information. Value null means not specified.
            </summary>
            <remarks>Contains information about receipt of the current message by a mail transfer agent on the transfer path.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.DispositionNotificationTo">
            <summary>
            Gets or sets mailboxes where to send disposition notification message. Value null means not specified.
            </summary>
            <remarks>Indicates that the sender wants a disposition notification when this message 
            is received (read, processed, etc.) by its recipients.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.DispositionNotificationOptions">
            <summary>
            Gets or sets disposition notification options. Value null means not specified.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.AcceptLanguage">
            <summary>
            Gets or sets language that the message sender requests to be used for responses. Value null means not specified.
            </summary>
            <remarks>
            Indicates a language that the message sender requests to be used for responses.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.OriginalMessageID">
            <summary>
            Gets or sets original message identifier. Value null means not specified.
            </summary>
            <remarks>Original message identifier used with resend of message with alternative content format; 
            identifies the original message data to which it corresponds.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.PICSLabel">
            <summary>
            Gets or sets PICS rating label. Value null means not specified.
            </summary>
            <remarks>Ratings label to control selection (filtering) of messages according to the PICS protocol.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListArchive">
            <summary>
            Gets or sets URL of mailing list archive. Value null means not specified.
            </summary>
            <remarks>Contains the URL to use to browse the archives of the mailing list from which this message was relayed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListHelp">
            <summary>
            Gets or sets URL for mailing list information. Value null means not specified.
            </summary>
            <remarks>Contains the URL to use to get information about the mailing list from which this message was relayed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListID">
            <summary>
            Gets or sets mailing list identifier. Value null means not specified.
            </summary>
            <remarks>Stores an identification of the mailing list through which this message was distributed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListOwner">
            <summary>
            Gets or sets URL for mailing list owner's mailbox. Value null means not specified.
            </summary>
            <remarks>Contains the URL to send e-mail to the owner of the mailing list from which this message was relayed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListPost">
            <summary>
            Gets or sets URL for mailing list posting. Value null means not specified.
            </summary>
            <remarks>Contains the URL to use to send contributions to the mailing list from which this message was relayed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListSubscribe">
            <summary>
            Gets or sets URL for mailing list subscription. Value null means not specified.
            </summary>
            <remarks>Contains the URL to use to get a subscription to the mailing list from which this message was relayed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.ListUnsubscribe">
            <summary>
            Gets or sets URL for mailing list unsubscription. Value null means not specified.
            </summary>
            <remarks>Contains the URL to use to unsubscribe the mailing list from which this message was relayed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.MessageContext">
            <summary>
            Gets or sets type or context of message. Value null means not specified.
            </summary>
            <remarks>Provides information about the context and presentation characteristics of a message. 
            Can have the values 'voice-message', 'fax-message', 'pager-message', 'multimedia-message', 'text-message', or 'none'.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Importance">
            <summary>
            Gets or sets message importance. Value null means not specified.
            </summary>
            <remarks>A hint from the originator to the recipients about how important a message is. 
            Values: High, normal, or low.  Not used to control transmission speed.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Priority">
            <summary>
            Gets or sets message priority. Value null means not specified.
            </summary>
            <remarks>Can be 'normal', 'urgent', or 'non-urgent' and can influence transmission speed and delivery.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.Attachments">
            <summary>
            Gets this message attachments.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.BodyText">
            <summary>
            Gets message body text. Returns null if no body text available.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_Message.BodyHtmlText">
            <summary>
            Gets message body html text. Returns null if no body html text available.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_t_Address">
            <summary>
            This class represents RFC 5322 3.4 Address class. 
            This class is base class for <see cref="T:LumiSoft.Net.Mail.Mail_t_Mailbox">mailbox address</see> and <see cref="T:LumiSoft.Net.Mail.Mail_t_Group">group address</see>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Address.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Address.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Returns address as string value.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <returns>Returns address as string value.</returns>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_t_AddressList">
            <summary>
            This class represents <b>address-list</b>. Defined in RFC 5322 3.4.
            </summary>
            <example>
            <code>
            RFC 5322.
                address-list = (address *("," address))
                address      = mailbox / group
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.Parse(System.String)">
            <summary>
            Parses <b>address-list</b> from specified string value.
            </summary>
            <param name="value">The <b>address-list</b> string value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when <b>value</b> is not valid <b>address-list</b> value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.Insert(System.Int32,LumiSoft.Net.Mail.Mail_t_Address)">
            <summary>
            Inserts a address into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the item.</param>
            <param name="value">Address to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.Add(LumiSoft.Net.Mail.Mail_t_Address)">
            <summary>
            Adds specified address to the end of the collection.
            </summary>
            <param name="value">Address to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.Remove(LumiSoft.Net.Mail.Mail_t_Address)">
            <summary>
            Removes specified item from the collection.
            </summary>
            <param name="value">Address to remove.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.ToList">
            <summary>
            Returns the Mail_t_AddressList as a IList
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.ToArray">
            <summary>
            Copies addresses to new array.
            </summary>
            <returns>Returns addresses array.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.ToString">
            <summary>
            Returns address-list as string.
            </summary>
            <returns>Returns address-list as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.AcceptChanges">
            <summary>
            Resets IsModified property to false.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_AddressList.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_AddressList.IsModified">
            <summary>
            Gets if list has modified since it was loaded.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_AddressList.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_AddressList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>Returns the element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_AddressList.Mailboxes">
            <summary>
            Gets this address list mailboxes(group address mailboxes + mailboxes).
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_t_Group">
            <summary>
            This class represents "group" address. Defined in RFC 5322 3.4.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Group.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="displayName">Display name. Value null means not specified.</param>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Group.ToString">
            <summary>
            Returns mailbox as string.
            </summary>
            <returns>Returns mailbox as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Group.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Returns address as string value.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <returns>Returns address as string value.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_Group.DisplayName">
            <summary>
            Gets or sets diplay name. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_Group.Members">
            <summary>
            Gets groiup address members collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_t_Mailbox">
            <summary>
            This class represents "mailbox" address. Defined in RFC 5322 3.4.
            </summary>
            <example>
            <code>
            RFC 5322 3.4.
                mailbox    = name-addr / addr-spec
                name-addr  = [display-name] angle-addr
                angle-addr = [CFWS] "&lt;" addr-spec "&gt;" [CFWS]
                addr-spec  = local-part "@" domain
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Mailbox.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="displayName">Display name. Value null means not specified.</param>
            <param name="address">Email address.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>address</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Mailbox.Parse(System.String)">
            <summary>
            Parses <b>mailbox</b> from specified string value.
            </summary>
            <param name="value">The <b>mailbox</b> string value.</param>
            <returns>Returns parse mailbox.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when <b>value</b> is not valid <b>mailbox</b> value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Mailbox.ToString">
            <summary>
            Returns mailbox as string.
            </summary>
            <returns>Returns mailbox as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_Mailbox.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord)">
            <summary>
            Returns address as string value.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <returns>Returns address as string value.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_Mailbox.DisplayName">
            <summary>
            Gets display name. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_Mailbox.Address">
            <summary>
            Gets address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_Mailbox.LocalPart">
            <summary>
            Gets local-part of address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_Mailbox.Domain">
            <summary>
            Gets domain part of address.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_t_MailboxList">
            <summary>
            This class represents <b>mailbox-list</b>. Defined in RFC 5322 3.4.
            </summary>
            <example>
            <code>
            RFC 5322.
                mailbox-list =  (mailbox *("," mailbox)) / obs-mbox-list
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.Parse(System.String)">
            <summary>
            Parses <b>mailbox-list</b> from specified string value.
            </summary>
            <param name="value">The <b>mailbox-list</b> string value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when <b>value</b> is not valid <b>mailbox-list</b> value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.Insert(System.Int32,LumiSoft.Net.Mail.Mail_t_Mailbox)">
            <summary>
            Inserts a address into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the item.</param>
            <param name="value">Address to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.Add(LumiSoft.Net.Mail.Mail_t_Mailbox)">
            <summary>
            Adds specified address to the end of the collection.
            </summary>
            <param name="value">Address to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.Remove(LumiSoft.Net.Mail.Mail_t_Mailbox)">
            <summary>
            Removes specified item from the collection.
            </summary>
            <param name="value">Address to remove.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.ToList">
            <summary>
            Returns an IList
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.ToArray">
            <summary>
            Copies addresses to new array.
            </summary>
            <returns>Returns addresses array.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.ToString">
            <summary>
            Returns address-list as string.
            </summary>
            <returns>Returns address-list as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.AcceptChanges">
            <summary>
            Resets IsModified property to false.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_MailboxList.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_MailboxList.IsModified">
            <summary>
            Gets if list has modified since it was loaded.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_MailboxList.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_MailboxList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>Returns the element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_t_TcpInfo">
            <summary>
            Represents Received: header "TCP-info" value. Defined in RFC 5321. 4.4.
            </summary>
            <remarks>
            <code>
            RFC 5321 4.4.
                TCP-info        = address-literal / ( Domain FWS address-literal )
                address-literal = "[" ( IPv4-address-literal / IPv6-address-literal / General-address-literal ) "]"
            </code>
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_TcpInfo.#ctor(System.Net.IPAddress,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="ip">IP address.</param>
            <param name="hostName">Host name.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_t_TcpInfo.ToString">
            <summary>
            Returns this as string.
            </summary>
            <returns>Returns this as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_TcpInfo.IP">
            <summary>
            Gets IP address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Mail.Mail_t_TcpInfo.HostName">
            <summary>
            Gets host value. Value null means not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Mail.Mail_Utils">
            <summary>
            This class provides mail message related utility methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Mail.Mail_Utils.SMTP_Mailbox(LumiSoft.Net.MIME.MIME_Reader)">
            <summary>
            Reads SMTP "Mailbox" from the specified MIME reader.
            </summary>
            <param name="reader">MIME reader.</param>
            <returns>Returns SMTP "Mailbox" or null if no SMTP mailbox available.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>reader</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.Net_Utils">
            <summary>
            Common utility methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.GetLocalHostName(System.String)">
            <summary>
            Gets local host name or argument <b>hostName</b> value if it's specified.
            </summary>
            <param name="hostName">Host name or null.</param>
            <returns>Returns local host name or argument <b>hostName</b> value if it's specified.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.CompareArray(System.Array,System.Array)">
            <summary>
            Compares if specified array itmes equals.
            </summary>
            <param name="array1">Array 1.</param>
            <param name="array2">Array 2</param>
            <returns>Returns true if both arrays are equal.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.CompareArray(System.Array,System.Array,System.Int32)">
            <summary>
            Compares if specified array itmes equals.
            </summary>
            <param name="array1">Array 1.</param>
            <param name="array2">Array 2</param>
            <param name="array2Count">Number of bytes in array 2 used for compare.</param>
            <returns>Returns true if both arrays are equal.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.ReverseArray(System.Array)">
            <summary>
            Reverses the specified array elements.
            </summary>
            <param name="array">Array elements to reverse.</param>
            <returns>Returns array with reversed items.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>array</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.ArrayToString(System.String[],System.String)">
            <summary>
            Convert array elements to string.
            </summary>
            <param name="values">String values.</param>
            <param name="delimiter">Values delimiter.</param>
            <returns>Returns array elements as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.StreamCopy(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copies <b>source</b> stream data to <b>target</b> stream.
            </summary>
            <param name="source">Source stream. Reading starts from stream current position.</param>
            <param name="target">Target stream. Writing starts from stream current position.</param>
            <param name="blockSize">Specifies transfer block size in bytes.</param>
            <returns>Returns number of bytes copied.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.CompareIP(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Compares 2 IP addresses. Returns 0 if IPs are equal, 
            returns positive value if destination IP is bigger than source IP,
            returns negative value if destination IP is smaller than source IP.
            </summary>
            <param name="source">Source IP address.</param>
            <param name="destination">Destination IP address.</param>
            <returns>Returns 0 if IPs are equal, 
            returns positive value if destination IP is bigger than source IP,
            returns negative value if destination IP is smaller than source IP.
            </returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsIPAddress(System.String)">
            <summary>
            Gets if the specified string value is IP address.
            </summary>
            <param name="value">Value to check.</param>
            <returns>Returns true if specified value is IP address.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsMulticastAddress(System.Net.IPAddress)">
            <summary>
            Gets if the specified IP address is multicast address.
            </summary>
            <param name="ip">IP address.</param>
            <returns>Returns true if <b>ip</b> is muticast address, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> s null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsPrivateIP(System.String)">
            <summary>
            Gets if specified IP address is private LAN IP address. For example 192.168.x.x is private ip.
            </summary>
            <param name="ip">IP address to check.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null reference.</exception>
            <returns>Returns true if IP is private IP.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsPrivateIP(System.Net.IPAddress)">
            <summary>
            Gets if specified IP address is private LAN IP address. For example 192.168.x.x is private ip.
            </summary>
            <param name="ip">IP address to check.</param>
            <returns>Returns true if IP is private IP.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.ParseIPEndPoint(System.String)">
            <summary>
            Parses IPEndPoint from the specified string value.
            </summary>
            <param name="value">IPEndPoint string value.</param>
            <returns>Returns parsed IPEndPoint.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsInteger(System.String)">
            <summary>
            Checks if specified string is integer(int/long).
            </summary>
            <param name="value"></param>
            <returns>Returns true if specified string is integer.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsAscii(System.String)">
            <summary>
            Gets if the specified string is ASCII string.
            </summary>
            <param name="value">String value.</param>
            <returns>Returns true if specified string is ASCII string, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsSocketAsyncSupported">
            <summary>
            Gets if socket async methods supported by OS.
            </summary>
            <returns>returns ture if supported, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.CreateSocket(System.Net.IPEndPoint,System.Net.Sockets.ProtocolType)">
            <summary>
            Creates new socket for the specified end point.
            </summary>
            <param name="localEP">Local end point.</param>
            <param name="protocolType">Protocol type.</param>
            <returns>Retruns newly created socket.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>localEP</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.ToHex(System.Byte[])">
            <summary>
            Converts specified data to HEX string.
            </summary>
            <param name="data">Data to convert.</param>
            <returns>Returns hex string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.ToHex(System.String)">
            <summary>
            Converts specified string to HEX string.
            </summary>
            <param name="text">String to convert.</param>
            <returns>Returns hex string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.FromHex(System.Byte[])">
            <summary>
            Converts hex byte data to normal byte data. Hex data must be in two bytes pairs, for example: 0F,FF,A3,... .
            </summary>
            <param name="hexData">Hex data.</param>
            <returns>Returns decoded data.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>hexData</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.FromBase64(System.String)">
            <summary>
            Decodes specified base64 data.
            </summary>
            <param name="data">Base64 string.</param>
            <returns>Returns decoded data.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.FromBase64(System.Byte[])">
            <summary>
            Decodes specified base64 data.
            </summary>
            <param name="data">Base64 data.</param>
            <returns>Returns decoded data.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.Base64Encode(System.Byte[])">
            <summary>
            Encodes specified data with base64 encoding.
            </summary>
            <param name="data">Data to encode.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.Base64EncodeEx(System.Byte[],System.Char[],System.Boolean)">
            <summary>
            Encodes specified data with bas64 encoding.
            </summary>
            <param name="data">Data to to encode.</param>
            <param name="base64Chars">Custom base64 chars (64 chars) or null if default chars used.</param>
            <param name="padd">Padd missing block chars. Normal base64 must be 4 bytes blocks, if not 4 bytes in block, 
            missing bytes must be padded with '='. Modified base64 just skips missing bytes.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.Base64DecodeEx(System.Byte[],System.Char[])">
            <summary>
            Decodes base64 data. Defined in RFC 2045 6.8.  Base64 Content-Transfer-Encoding.
            </summary>
            <param name="base64Data">Base64 decoded data.</param>
            <param name="base64Chars">Custom base64 chars (64 chars) or null if default chars used.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.ComputeMd5(System.String,System.Boolean)">
            <summary>
            Computes md5 hash.
            </summary>
            <param name="text">Text to hash.</param>
            <param name="hex">Specifies if md5 value is returned as hex string.</param>
            <returns>Returns md5 value or md5 hex value.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.Net_Utils.IsIoCompletionPortsSupported">
            <summary>
            Gets if IO completion ports supported by OS.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Net.ParseException">
            <summary>
            This exception is thrown when parse errors are encountered.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ParseException.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:LumiSoft.Net.PortRange">
            <summary>
            This class holds UDP or TCP port range.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.PortRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="start">Start port.</param>
            <param name="end">End port.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when any of the aruments value is out of range.</exception>
        </member>
        <member name="P:LumiSoft.Net.PortRange.Start">
            <summary>
            Gets start port.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.PortRange.End">
            <summary>
            Gets end port.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Range_long">
            <summary>
            This class represent 2-point <b>long</b> value range.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Range_long.#ctor(System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Start/End value.</param>
        </member>
        <member name="M:LumiSoft.Net.Range_long.#ctor(System.Int64,System.Int64)">
            <summary>
            Default constructor.
            </summary>
            <param name="start">Range start value.</param>
            <param name="end">Range end value.</param>
        </member>
        <member name="M:LumiSoft.Net.Range_long.Contains(System.Int64)">
            <summary>
            Gets if the specified value is within range.
            </summary>
            <param name="value">Value to check.</param>
            <returns>Returns true if specified value is within range, otherwise false.</returns>
        </member>
        <member name="P:LumiSoft.Net.Range_long.Start">
            <summary>
            Gets range start.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Range_long.End">
            <summary>
            Gets range end.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.SslMode">
            <summary>
            This enum holds SSL modes.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SslMode.None">
            <summary>
            No SSL is used.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SslMode.SSL">
            <summary>
            Connection is SSL.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.SslMode.TLS">
            <summary>
            Connection will be switched to SSL with start TLS.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.StringReader">
            <summary>
            String reader.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.StringReader.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="source">Source string.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>source</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.StringReader.AppendString(System.String)">
            <summary>
            Appends specified string to SourceString.
            </summary>
            <param name="value">String value to append.</param>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadToFirstChar">
            <summary>
            Reads to first char, skips white-space(SP,VTAB,HTAB,CR,LF) from the beginning of source string.
            </summary>
            <returns>Returns white-space chars which was readed.</returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadSpecifiedLength(System.Int32)">
            <summary>
            Reads string with specified length. Throws exception if read length is bigger than source string length.
            </summary>
            <param name="length">Number of chars to read.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.QuotedReadToDelimiter(System.Char)">
            <summary>
            Reads string to specified delimiter or to end of underlying string. Notes: Delimiter in quoted string is skipped.
            Delimiter is removed by default.
            For example: delimiter = ',', text = '"aaaa,eee",qqqq' - then result is '"aaaa,eee"'.
            </summary>
            <param name="delimiter">Data delimiter.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.QuotedReadToDelimiter(System.Char[])">
            <summary>
            Reads string to specified delimiter or to end of underlying string. Notes: Delimiters in quoted string is skipped.
            Delimiter is removed by default.
            For example: delimiter = ',', text = '"aaaa,eee",qqqq' - then result is '"aaaa,eee"'.
            </summary>
            <param name="delimiters">Data delimiters.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.QuotedReadToDelimiter(System.Char[],System.Boolean)">
            <summary>
            Reads string to specified delimiter or to end of underlying string. Notes: Delimiters in quoted string is skipped. 
            For example: delimiter = ',', text = '"aaaa,eee",qqqq' - then result is '"aaaa,eee"'.
            </summary>
            <param name="delimiters">Data delimiters.</param>
            <param name="removeDelimiter">Specifies if delimiter is removed from underlying string.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadWord">
            <summary>
            Reads word from string. Returns null if no word is available.
            Word reading begins from first char, for example if SP"text", then space is trimmed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadWord(System.Boolean)">
            <summary>
            Reads word from string. Returns null if no word is available.
            Word reading begins from first char, for example if SP"text", then space is trimmed.
            </summary>
            <param name="unQuote">Specifies if quoted string word is unquoted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadWord(System.Boolean,System.Char[],System.Boolean)">
            <summary>
            Reads word from string. Returns null if no word is available.
            Word reading begins from first char, for example if SP"text", then space is trimmed.
            </summary>
            <param name="unQuote">Specifies if quoted string word is unquoted.</param>
            <param name="wordTerminatorChars">Specifies chars what terminate word.</param>
            <param name="removeWordTerminator">Specifies if work terminator is removed.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadParenthesized">
            <summary>
            Reads parenthesized value. Supports {},(),[],&lt;&gt; parenthesis. 
            Throws exception if there isn't parenthesized value or closing parenthesize is missing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.ReadToEnd">
            <summary>
            Reads all remaining string, returns null if no chars left to read.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.RemoveFromEnd(System.Int32)">
            <summary>
            Removes specified count of chars from the end of the source string.
            </summary>
            <param name="count">Char count.</param>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.StringReader.StartsWith(System.String)">
            <summary>
            Gets if source string starts with specified value. Compare is case-sensitive.
            </summary>
            <param name="value">Start string value.</param>
            <returns>Returns true if source string starts with specified value.</returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.StartsWith(System.String,System.Boolean)">
            <summary>
            Gets if source string starts with specified value.
            </summary>
            <param name="value">Start string value.</param>
            <param name="case_sensitive">Specifies if compare is case-sensitive.</param>
            <returns>Returns true if source string starts with specified value.</returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.EndsWith(System.String)">
            <summary>
            Gets if source string ends with specified value. Compare is case-sensitive.
            </summary>
            <param name="value">Start string value.</param>
            <returns>Returns true if source string ends with specified value.</returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.EndsWith(System.String,System.Boolean)">
            <summary>
            Gets if source string ends with specified value.
            </summary>
            <param name="value">Start string value.</param>
            <param name="case_sensitive">Specifies if compare is case-sensitive.</param>
            <returns>Returns true if source string ends with specified value.</returns>
        </member>
        <member name="M:LumiSoft.Net.StringReader.StartsWithWord">
            <summary>
            Gets if current source string starts with word. For example if source string starts with
            whiter space or parenthesize, this method returns false.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.StringReader.Available">
            <summary>
            Gets how many chars are available for reading.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.StringReader.OriginalString">
            <summary>
            Gets original string passed to class constructor.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.StringReader.SourceString">
            <summary>
            Gets currently remaining string.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.StringReader.Position">
            <summary>
            Gets position in original string.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client">
            <summary>
            This class implements generic TCP client.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Dispose">
            <summary>
            Cleans up any resources being used. This method is thread-safe.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Connect(System.String,System.Int32)">
            <summary>
            Connects to the specified host. If the hostname resolves to more than one IP address, 
            all IP addresses will be tried for connection, until one of them connects.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port to connect.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Connect(System.String,System.Int32,System.Boolean)">
            <summary>
            Connects to the specified host. If the hostname resolves to more than one IP address, 
            all IP addresses will be tried for connection, until one of them connects.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Connect(System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Connects to the specified remote end point.
            </summary>
            <param name="remoteEP">Remote IP end point where to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Connect(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Connects to the specified remote end point.
            </summary>
            <param name="localEP">Local IP end point to use. Value null means that system will allocate it.</param>
            <param name="remoteEP">Remote IP end point to connect.</param>
            <param name="ssl">Specifies if connection switches to SSL affter connect.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Connect(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Connects to the specified remote end point.
            </summary>
            <param name="localEP">Local IP end point to use. Value null means that system will allocate it.</param>
            <param name="remoteEP">Remote IP end point to connect.</param>
            <param name="ssl">Specifies if connection switches to SSL affter connect.</param>
            <param name="certCallback">SSL server certificate validation callback. Value null means any certificate is accepted.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsync(LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Default constructor.
            </summary>
            <param name="localEP">Local IP end point to use. Value null means that system will allocate it.</param>
            <param name="remoteEP">Remote IP end point to connect.</param>
            <param name="ssl">Specifies if connection switches to SSL affter connect.</param>
            <param name="certCallback">SSL server certificate validation callback. Value null means any certificate is accepted.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.Start(LumiSoft.Net.TCP.TCP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner TCP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.BeginConnectCompleted(System.IAsyncResult)">
            <summary>
            This method is called when "BeginConnect" has completed.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.BeginAuthenticateAsClientCompleted(System.IAsyncResult)">
            <summary>
            This method is called when "BeginAuthenticateAsClient" has completed.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.RemoteCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            This method is called when we need to validate remote server certificate.
            </summary>
            <param name="sender">Sender.</param>
            <param name="certificate">Certificate.</param>
            <param name="chain">Certificate chain.</param>
            <param name="sslPolicyErrors">SSL policy errors.</param>
            <returns>Returns true if certificate validated, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.CleanupSocketRelated">
            <summary>
            Cleans up any socket related resources.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.InternalConnectCompleted">
            <summary>
            Is called when when connecting has finished.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.CompleteConnectCallback(System.Exception)">
            <summary>
            This method is called when this derrived class OnConnected processing has completed.
            </summary>
            <param name="error">Exception happened or null if no errors.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.Socket">
            <summary>
            Gets connected socket.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.Stream">
            <summary>
            Gets connected TCP stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ConnectAsync(LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP)">
            <summary>
            Starts connecting to remote end point.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.TCP.TCP_Client.ConnectAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.Disconnect">
            <summary>
            Disconnects connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client.DisconnectDelegate">
            <summary>
            Internal helper method for asynchronous Disconnect method.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.BeginDisconnect(System.AsyncCallback,System.Object)">
            <summary>
            Starts disconnecting connection.
            </summary>
            <param name="callback">Callback to call when the asynchronous operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous disconnect.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.EndDisconnect(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous disconnect request.
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when argument <b>asyncResult</b> was not returned by a call to the <b>BeginDisconnect</b> method.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>EndDisconnect</b> was previously called for the asynchronous connection.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecure">
            <summary>
            Switches session to secure connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected or is already secure.</exception>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsync(LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.#ctor(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Default constructor.
            </summary>
            <param name="certCallback">SSL server certificate validation callback. Value null means any certificate is accepted.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.Start(LumiSoft.Net.TCP.TCP_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner TCP client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.RemoteCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            This method is called when we need to validate remote server certificate.
            </summary>
            <param name="sender">Sender.</param>
            <param name="certificate">Certificate.</param>
            <param name="chain">Certificate chain.</param>
            <param name="sslPolicyErrors">SSL policy errors.</param>
            <returns>Returns true if certificate validated, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.BeginAuthenticateAsClientCompleted(System.IAsyncResult)">
            <summary>
            This method is called when "BeginAuthenticateAsClient" has completed.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsync(LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP)">
            <summary>
            Starts switching connection to secure.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected or connection is already secure.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.OnConnected">
            <summary>
            This method is called after TCP client has sucessfully connected.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client.CompleteConnectCallback">
            <summary>
            Represents callback to be called when to complete connect operation.
            </summary>
            <param name="error">Exception happened or null if no errors.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.OnConnected(LumiSoft.Net.TCP.TCP_Client.CompleteConnectCallback)">
            <summary>
            This method is called when TCP client has sucessfully connected.
            </summary>
            <param name="callback">Callback to be called to complete connect operation.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.ReadLine">
            <summary>
            Reads and logs specified line from connected host.
            </summary>
            <returns>Returns readed line.</returns>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.WriteLine(System.String)">
            <summary>
            Sends and logs specified line to connected host.
            </summary>
            <param name="line">Line to send.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>line</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.LogAddRead(System.Int64,System.String)">
            <summary>
            Logs read operation.
            </summary>
            <param name="size">Number of bytes readed.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.LogAddWrite(System.Int64,System.String)">
            <summary>
            Logs write operation.
            </summary>
            <param name="size">Number of bytes written.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.LogAddText(System.String)">
            <summary>
            Logs free text entry.
            </summary>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.LogAddException(System.String,System.Exception)">
            <summary>
            Logs exception.
            </summary>
            <param name="text">Log text.</param>
            <param name="x">Exception happened.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.Logger">
            <summary>
            Gets or sets TCP client logger. Value null means no logging.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.IsConnected">
            <summary>
            Gets if TCP client is connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ID">
            <summary>
            Gets session ID.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ConnectTime">
            <summary>
            Gets the time when session was connected.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.LastActivity">
            <summary>
            Gets the last time when data was sent or received.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.LocalEndPoint">
            <summary>
            Gets session local IP end point.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.RemoteEndPoint">
            <summary>
            Gets session remote IP end point.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.IsSecureConnection">
            <summary>
            Gets if this session TCP connection is secure connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.TcpStream">
            <summary>
            Gets TCP stream which must be used to send/receive data through this session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.ValidateCertificateCallback">
            <summary>
            Gets or stes remote callback which is called when remote server certificate needs to be validated.
            Value null means not sepcified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Client.Timeout">
            <summary>
            Gets or sets default TCP read/write timeout.
            </summary>
            <remarks>This timeout applies only synchronous TCP read/write operations.</remarks>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client.BeginConnectHostDelegate">
            <summary>
            Internal helper method for asynchronous Connect method.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Client.BeginConnectEPDelegate">
            <summary>
            Internal helper method for asynchronous Connect method.
            </summary>
            <param name="localEP">Local IP end point to use for connect.</param>
            <param name="remoteEP">Remote IP end point where to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Starts connection to the specified host.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port to connect.</param>
            <param name="callback">Callback to call when the connect operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.BeginConnect(System.String,System.Int32,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Starts connection to the specified host.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">Port to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
            <param name="callback">Callback to call when the connect operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.BeginConnect(System.Net.IPEndPoint,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Starts connection to the specified remote end point.
            </summary>
            <param name="remoteEP">Remote IP end point where to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
            <param name="callback">Callback to call when the connect operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.BeginConnect(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Starts connection to the specified remote end point.
            </summary>
            <param name="localEP">Local IP end point to use for connect.</param>
            <param name="remoteEP">Remote IP end point where to connect.</param>
            <param name="ssl">Specifies if connects to SSL end point.</param>
            <param name="callback">Callback to call when the connect operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>remoteEP</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.EndConnect(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous connection request.
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when argument <b>asyncResult</b> was not returned by a call to the <b>BeginConnect</b> method.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>EndConnect</b> was previously called for the asynchronous connection.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Client.OnError(System.Exception)">
            <summary>
            This must be called when unexpected error happens. When inheriting <b>TCP_Client</b> class, be sure that you call <b>OnError</b>
            method for each unexpected error.
            </summary>
            <param name="x">Exception happened.</param>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Server`1">
            <summary>
            This class implements generic TCP session based server.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Server`1.ListeningPoint">
            <summary>
            This class holds listening point info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.ListeningPoint.#ctor(System.Net.Sockets.Socket,LumiSoft.Net.IPBindInfo)">
            <summary>
            Default constructor.
            </summary>
            <param name="socket">Listening socket.</param>
            <param name="bind">Bind info what acceped socket.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.ListeningPoint.Socket">
            <summary>
            Gets socket.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.ListeningPoint.BindInfo">
            <summary>
            Gets bind info.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor">
            <summary>
            Implements single TCP connection acceptor.
            </summary>
            <remarks>For higher performance, mutiple acceptors per socket must be created.</remarks>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Default constructor.
            </summary>
            <param name="socket">Socket.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>socket</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.Start">
            <summary>
            Starts accpeting connections.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this calss is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.IOCompletionAccept">
            <summary>
            Accpets connection synchornously(if connection(s) available now) or starts waiting TCP connection asynchronously if no connections at moment.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.AsyncSocketAccept(System.IAsyncResult)">
            <summary>
            Is called BeginAccept has completed.
            </summary>
            <param name="ar">The result of the asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.Tags">
            <summary>
            Gets user data items.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.ConnectionAccepted">
            <summary>
            Is raised when new TCP connection was accepted.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.OnConnectionAccepted(System.Net.Sockets.Socket)">
            <summary>
            Raises <b>ConnectionAccepted</b> event.
            </summary>
            <param name="socket">Accepted socket.</param>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.Error">
            <summary>
            Is raised when unhandled error happens.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.TCP_Acceptor.OnError(System.Exception)">
            <summary>
            Raises <b>Error</b> event.
            </summary>
            <param name="x">Exception happened.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.m_pTimer_IdleTimeout_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Is called when session idle check timer triggered.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.Start">
            <summary>
            Starts TCP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.Stop">
            <summary>
            Stops TCP server, all active connections will be terminated.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.Restart">
            <summary>
            Restarts TCP server.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnMaxConnectionsExceeded(`0)">
            <summary>
            Is called when new incoming session and server maximum allowed connections exceeded.
            </summary>
            <param name="session">Incoming session.</param>
            <remarks>This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnMaxConnectionsPerIPExceeded(`0)">
            <summary>
            Is called when new incoming session and server maximum allowed connections per connected IP exceeded.
            </summary>
            <param name="session">Incoming session.</param>
            <remarks>This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.StartListen">
            <summary>
            Starts listening incoming connections. NOTE: All active listening points will be disposed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.ProcessConnection(System.Net.Sockets.Socket,LumiSoft.Net.IPBindInfo)">
            <summary>
            Processes specified connection.
            </summary>
            <param name="socket">Accpeted socket.</param>
            <param name="bindInfo">Local bind info what accpeted connection.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>socket</b> or <b>bindInfo</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.IsDisposed">
            <summary>
            Gets if server is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.IsRunning">
            <summary>
            Gets if server is running.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.Bindings">
            <summary>
            Gets or sets TCP server IP bindings.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.LocalEndPoints">
            <summary>
            Gets local listening IP end points.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.MaxConnections">
            <summary>
            Gets or sets maximum allowed concurent connections. Value 0 means unlimited.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when negative value is passed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.MaxConnectionsPerIP">
            <summary>
            Gets or sets maximum allowed connections for 1 IP address. Value 0 means unlimited.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.SessionIdleTimeout">
            <summary>
            Gets or sets maximum allowed session idle time in seconds, after what session will be terminated. Value 0 means unlimited,
            but this is strongly not recommened.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when negative value is passed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.Logger">
            <summary>
            Gets or sets logger. Value null means no logging.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.StartTime">
            <summary>
            Gets the time when server was started.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP server is not running and this property is accesed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.ConnectionsProcessed">
            <summary>
            Gets how many connections this TCP server has processed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP server is not running and this property is accesed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Server`1.Sessions">
            <summary>
            Gets TCP server active sessions.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when TCP server is not running and this property is accesed.</exception>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.Started">
            <summary>
            This event is raised when TCP server has started.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnStarted">
            <summary>
            Raises <b>Started</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.Stopped">
            <summary>
            This event is raised when TCP server has stopped.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnStopped">
            <summary>
            Raises <b>Stopped</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.Disposed">
            <summary>
            This event is raised when TCP server has disposed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnDisposed">
            <summary>
            Raises <b>Disposed</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.SessionCreated">
            <summary>
            This event is raised when TCP server creates new session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnSessionCreated(`0)">
            <summary>
            Raises <b>SessionCreated</b> event.
            </summary>
            <param name="session">TCP server session that was created.</param>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_Server`1.Error">
            <summary>
            This event is raised when TCP server has unknown unhandled error.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Server`1.OnError(System.Exception)">
            <summary>
            Raises <b>Error</b> event.
            </summary>
            <param name="x">Exception happened.</param>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_ServerSession">
            <summary>
            This class implements generic TCP server session.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.Init(System.Object,System.Net.Sockets.Socket,System.String,System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes session. This method is called from TCP_Server when new session created.
            </summary>
            <param name="server">Owner TCP server.</param>
            <param name="socket">Connected socket.</param>
            <param name="hostName">Local host name.</param>
            <param name="ssl">Specifies if session should switch to SSL.</param>
            <param name="certificate">SSL certificate.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.StartI">
            <summary>
            This method is called from TCP server when session should start processing incoming connection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.Start">
            <summary>
            This method is called from TCP server when session should start processing incoming connection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecure">
            <summary>
            Switches session to secure connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when connection is already secure or when SSL certificate is not specified.</exception>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsync(LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.Start(LumiSoft.Net.TCP.TCP_ServerSession)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner TCP session.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.BeginAuthenticateAsServerCompleted(System.IAsyncResult)">
            <summary>
            This method is called when "BeginAuthenticateAsServer" has completed.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsync(LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP)">
            <summary>
            Starts switching connection to secure.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.TCP.TCP_ServerSession.SwitchToSecureAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when connection is already secure or when SSL certificate is not specified.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.Disconnect">
            <summary>
            Disconnects session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.Disconnect(System.String)">
            <summary>
            Disconnects session.
            </summary>
            <param name="text">Text what is sent to connected host before disconnecting.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.OnTimeout">
            <summary>
            This method is called when specified session times out.
            </summary>
            <remarks>
            This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.OnTimeoutI">
            <summary>
            Just calls <b>OnTimeout</b> method.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.LogAddText(System.String)">
            <summary>
            Logs specified text.
            </summary>
            <param name="text">text to log.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.LogAddException(System.Exception)">
            <summary>
            Logs specified exception.
            </summary>
            <param name="exception">Exception to log.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>exception</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.IsDisposed">
            <summary>
            Gets if TCP server session is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.Server">
            <summary>
            Gets owner TCP server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.LocalHostName">
            <summary>
            Gets local host name.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.Certificate">
            <summary>
            Gets session certificate.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.Tag">
            <summary>
            Gets or sets user data.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.Tags">
            <summary>
            Gets user data items collection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.IsConnected">
            <summary>
            Gets if session is connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.ID">
            <summary>
            Gets session ID.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.ConnectTime">
            <summary>
            Gets the time when session was connected.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.LastActivity">
            <summary>
            Gets the last time when data was sent or received.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.LocalEndPoint">
            <summary>
            Gets session local IP end point.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.RemoteEndPoint">
            <summary>
            Gets session remote IP end point.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.IsSecureConnection">
            <summary>
            Gets if this session TCP connection is secure connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSession.TcpStream">
            <summary>
            Gets TCP stream which must be used to send/receive data through this session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_ServerSession.IdleTimeout">
            <summary>
            This event is raised when session idle(no activity) timeout reached.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.OnIdleTimeout">
            <summary>
            Raises <b>IdleTimeout</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_ServerSession.Disonnected">
            <summary>
            This event is raised when session has disconnected and will be disposed soon.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.OnDisonnected">
            <summary>
            Raises <b>Disonnected</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_ServerSession.Disposed">
            <summary>
            This event is raised when session has disposed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.OnDisposed">
            <summary>
            Raises <b>Disposed</b> event.
            </summary>
        </member>
        <member name="E:LumiSoft.Net.TCP.TCP_ServerSession.Error">
            <summary>
            This event is raised when TCP server session has unknown unhandled error.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSession.OnError(System.Exception)">
            <summary>
            Raises <b>Error</b> event.
            </summary>
            <param name="x">Exception happened.</param>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_ServerSessionEventArgs`1">
            <summary>
            This class provides data to .... .
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_ServerSessionEventArgs`1.#ctor(LumiSoft.Net.TCP.TCP_Server{`0},`0)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">TCP server.</param>
            <param name="session">TCP server session.</param>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSessionEventArgs`1.Server">
            <summary>
            Gets TCP server.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_ServerSessionEventArgs`1.Session">
            <summary>
            Gets TCP server session.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_Session">
            <summary>
            This is base class for TCP_Client and TCP_ServerSession.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Session.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Session.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_Session.Disconnect">
            <summary>
            Disconnects session.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.IsConnected">
            <summary>
            Gets if session is connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.ID">
            <summary>
            Gets session ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.ConnectTime">
            <summary>
            Gets the time when session was connected.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.LastActivity">
            <summary>
            Gets the last time when data was sent or received.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.LocalEndPoint">
            <summary>
            Gets session local IP end point.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.RemoteEndPoint">
            <summary>
            Gets session remote IP end point.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.IsSecureConnection">
            <summary>
            Gets if this session TCP connection is secure connection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.IsAuthenticated">
            <summary>
            Gets if this session is authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.AuthenticatedUserIdentity">
            <summary>
            Gets session authenticated user identity , returns null if not authenticated.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_Session.TcpStream">
            <summary>
            Gets TCP stream which must be used to send/receive data through this session.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.TCP.TCP_SessionCollection`1">
            <summary>
            This class implements TCP session collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_SessionCollection`1.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_SessionCollection`1.Add(`0)">
            <summary>
            Adds specified TCP session to the colletion.
            </summary>
            <param name="session">TCP server session to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>session</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_SessionCollection`1.Remove(`0)">
            <summary>
            Removes specified TCP server session from the collection.
            </summary>
            <param name="session">TCP server session to remove.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>session</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_SessionCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_SessionCollection`1.ToArray">
            <summary>
            Copies all TCP server session to new array. This method is thread-safe.
            </summary>
            <returns>Returns TCP sessions array.</returns>
        </member>
        <member name="M:LumiSoft.Net.TCP.TCP_SessionCollection`1.GetConnectionsPerIP(System.Net.IPAddress)">
            <summary>
            Gets number of connections per specified IP.
            </summary>
            <param name="ip">IP address.</param>
            <returns>Returns current number of connections of the specified IP.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_SessionCollection`1.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.TCP.TCP_SessionCollection`1.Item(System.String)">
            <summary>
            Gets TCP session with the specified ID.
            </summary>
            <param name="id">Session ID.</param>
            <returns>Returns TCP session with the specified ID.</returns>
        </member>
        <member name="T:LumiSoft.Net.TextUtils">
            <summary>
            This class provides usefull text methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.QuoteString(System.String)">
            <summary>
            Qoutes string and escapes fishy('\',"') chars.
            </summary>
            <param name="text">Text to quote.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.UnQuoteString(System.String)">
            <summary>
            Unquotes and unescapes escaped chars specified text. For example "xxx" will become to 'xxx', "escaped quote \"", will become to escaped 'quote "'.
            </summary>
            <param name="text">Text to unquote.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.EscapeString(System.String,System.Char[])">
            <summary>
            Escapes specified chars in the specified string.
            </summary>
            <param name="text">Text to escape.</param>
            <param name="charsToEscape">Chars to escape.</param>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.UnEscapeString(System.String)">
            <summary>
            Unescapes all escaped chars.
            </summary>
            <param name="text">Text to unescape.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.SplitQuotedString(System.String,System.Char)">
            <summary>
            Splits string into string arrays. This split method won't split qouted strings, but only text outside of qouted string.
            For example: '"text1, text2",text3' will be 2 parts: "text1, text2" and text3.
            </summary>
            <param name="text">Text to split.</param>
            <param name="splitChar">Char that splits text.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.SplitQuotedString(System.String,System.Char,System.Boolean)">
            <summary>
            Splits string into string arrays. This split method won't split qouted strings, but only text outside of qouted string.
            For example: '"text1, text2",text3' will be 2 parts: "text1, text2" and text3.
            </summary>
            <param name="text">Text to split.</param>
            <param name="splitChar">Char that splits text.</param>
            <param name="unquote">If true, splitted parst will be unqouted if they are qouted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.SplitQuotedString(System.String,System.Char,System.Boolean,System.Int32)">
            <summary>
            Splits string into string arrays. This split method won't split qouted strings, but only text outside of qouted string.
            For example: '"text1, text2",text3' will be 2 parts: "text1, text2" and text3.
            </summary>
            <param name="text">Text to split.</param>
            <param name="splitChar">Char that splits text.</param>
            <param name="unquote">If true, splitted parst will be unqouted if they are qouted.</param>
            <param name="count">Maximum number of substrings to return.</param>
            <returns>Returns splitted string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.QuotedIndexOf(System.String,System.Char)">
            <summary>
            Gets first index of specified char. The specified char in quoted string is skipped.
            Returns -1 if specified char doesn't exist.
            </summary>
            <param name="text">Text in what to check.</param>
            <param name="indexChar">Char what index to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.SplitString(System.String,System.Char)">
            <summary>
            Splits string into string arrays.
            </summary>
            <param name="text">Text to split.</param>
            <param name="splitChar">Char Char that splits text.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.TextUtils.IsToken(System.String)">
            <summary>
            Gets if specified string is valid "token" value.
            </summary>
            <param name="value">String value to check.</param>
            <returns>Returns true if specified string value is valid "token" value.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised if <b>value</b> is null.</exception>
        </member>
        <member name="T:LumiSoft.Net.TimerEx">
            <summary>
            Simple timer implementation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TimerEx.#ctor">
            <summary>
            Default contructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.TimerEx.#ctor(System.Double)">
            <summary>
            Default contructor.
            </summary>
            <param name="interval">The time in milliseconds between events.</param>
        </member>
        <member name="M:LumiSoft.Net.TimerEx.#ctor(System.Double,System.Boolean)">
            <summary>
            Default contructor.
            </summary>
            <param name="interval">The time in milliseconds between events.</param>
            <param name="autoReset">Specifies if timer is auto reseted.</param>
        </member>
        <member name="T:LumiSoft.Net.KeyValueCollection`2">
            <summary>
            Represents a collection that can be accessed either with the key or with the index. 
            </summary>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the collection.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.Remove(`0)">
            <summary>
            Removes the value with the specified key from the collection.
            </summary>
            <param name="key">Key.</param>
            <returns>Returns if key found and removed, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.ContainsKey(`0)">
            <summary>
            Gets if the collection contains the specified key.
            </summary>
            <param name="key">Key.</param>
            <returns>Returns true if the collection contains specified key.</returns>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">Key.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found.</param>
            <returns>Returns true if the collection contains specified key and value stored to <b>value</b> argument.</returns>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.TryGetValueAt(System.Int32,`1@)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="index">Zero based item index.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found.</param>
            <returns>Returns true if the collection contains specified key and value stored to <b>value</b> argument.</returns>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.ToArray">
            <summary>
            Copies all elements to new array, all elements will be in order they added. This method is thread-safe.
            </summary>
            <returns>Returns elements in a new array.</returns>
        </member>
        <member name="M:LumiSoft.Net.KeyValueCollection`2.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns>Returns IEnumerator interface.</returns>
        </member>
        <member name="P:LumiSoft.Net.KeyValueCollection`2.Count">
            <summary>
            Gets number of items int he collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.KeyValueCollection`2.Item(`0)">
            <summary>
            Gets item with the specified key.
            </summary>
            <param name="key">Key.</param>
            <returns>Returns item with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException.</returns>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b">
            <summary>
            This class is base class for MIME entity bodies.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b.SetParent(LumiSoft.Net.MIME.MIME_Entity,System.Boolean)">
            <summary>
            Sets body parent.
            </summary>
            <param name="entity">Owner entity.</param>
            <param name="setContentType">If true sets entity.ContentType header value.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores MIME entity body to the specified stream.
            </summary>
            <param name="stream">Stream where to store body data.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b.IsModified">
            <summary>
            Gets if body has modified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b.Entity">
            <summary>
            Gets body owner entity. Returns null if body not bounded to any entity yet.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b.MediaType">
            <summary>
            Gets body media type. For example: 'text/plain'.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Application">
            <summary>
            This class represents MIME application/xxx bodies. Defined in RFC 2046 4.2.
            </summary>
            <remarks>
            The "application" media type is to be used for discrete data which do
            not fit in any of the other categories, and particularly for data to
            be processed by some type of application program.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Application.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Application.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>strean</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime">
            <summary>
            This class represents MIME application/pkcs7-mime body. Defined in RFC 5751 3.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>strean</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime.GetCertificates">
            <summary>
            Gets certificates contained in pkcs 7.
            </summary>
            <returns>Returns certificates contained in pkcs 7. Returns null if no certificates.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime.VerifySignature">
            <summary>
            Checks if signature is valid and data not altered.
            </summary>
            <returns>Returns true if signature is valid, otherwise false.</returns>
            <remarks>This method is valid only if <b>Content-Type</b> parameter <b>smime-type=signed-data</b>.</remarks>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>smime-type != signed-data</b>.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime.GetSignedMime">
            <summary>
            Gets signed mime content. Value null means no content.
            </summary>
            <returns>Returns signed mime content. Value null means no content.</returns>
            <remarks>This method is valid only if <b>Content-Type</b> parameter <b>smime-type=signed-data</b>.</remarks>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>smime-type != signed-data</b>.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_ApplicationPkcs7Mime.GetEnvelopedMime(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Decrypts enveloped mime content.
            </summary>
            <param name="cert">Decrypting certificate.</param>
            <returns>Returns decrypted enveloped mime content.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cert</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when <b>smime-type != enveloped-data</b>.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Audio">
            <summary>
            This class represents MIME audio/xxx bodies. Defined in RFC 2046 4.3.
            </summary>
            <remarks>A media type of "audio" indicates that the body contains audio data.</remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Audio.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Audio.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Image">
            <summary>
            This class represents MIME image/xxx bodies. Defined in RFC 2046 4.2.
            </summary>
            <remarks>
            A media type of "image" indicates that the body contains an image.
            The subtype names the specific image format.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Image.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Image.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Message">
            <summary>
            This class represents MIME message/xxx bodies. Defined in RFC 2046 5.2.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Message.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Message.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus">
            <summary>
            This class represents MIME <b>message/delivery-status</b> body. Defined in RFC 3464.
            </summary>
            <remarks>
            <code>
            delivery-status-content =  per-message-fields 1*( CRLF per-recipient-fields )
            
            per-message-fields =
                       [ original-envelope-id-field CRLF ]
                       reporting-mta-field CRLF
                       [ dsn-gateway-field CRLF ]
                       [ received-from-mta-field CRLF ]
                       [ arrival-date-field CRLF ]
                       *( extension-field CRLF )
                       
            per-recipient-fields =
                     [ original-recipient-field CRLF ]
                     final-recipient-field CRLF
                     action-field CRLF
                     status-field CRLF
                     [ remote-mta-field CRLF ]
                     [ diagnostic-code-field CRLF ]
                     [ last-attempt-date-field CRLF ]
                     [ final-log-id-field CRLF ]
                     [ will-retry-until-field CRLF ]
                    *( extension-field CRLF )
            </code>
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores MIME entity body to the specified stream.
            </summary>
            <param name="stream">Stream where to store body data.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus.IsModified">
            <summary>
            Gets if body has modified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus.MessageFields">
            <summary>
            Gets per-message fields collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_MessageDeliveryStatus.RecipientBlocks">
            <summary>
            Gets reciepent report blocks collection.
            </summary>
            <remarks>Each block contains per-recipient-fields.</remarks>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MessageRfc822">
            <summary>
            This class represents MIME message/rfc822 body. Defined in RFC 2046 5.2.1.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MessageRfc822.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MessageRfc822.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MessageRfc822.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores MIME entity body to the specified stream.
            </summary>
            <param name="stream">Stream where to store body data.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_MessageRfc822.IsModified">
            <summary>
            Gets if body has modified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_MessageRfc822.Message">
            <summary>
            Gets embbed mail message.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference passed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Multipart">
            <summary>
            This class represents MIME application/xxx bodies. Defined in RFC 2046 5.1.
            </summary>
            <remarks>
            The "multipart" represents single MIME body containing multiple child MIME entities.
            The "multipart" body must contain at least 1 MIME entity.
            </remarks>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader">
            <summary>
            Implements  multipart "body parts" reader.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.State">
            <summary>
            This enum specified multipart reader sate.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.State.SeekFirst">
            <summary>
            First boundary must be seeked.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.State.ReadNext">
            <summary>
            Read next boundary. (Method Next must be called to continue next boundary reading)
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.State.InBoundary">
            <summary>
            Active boundary reading pending.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.State.Done">
            <summary>
            All boundraies readed.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader._DataLine">
            <summary>
            This class holds readed data line info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader._DataLine.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader._DataLine.AssignFrom(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Assigns data line info from rea line operation.
            </summary>
            <param name="op">Read line operation.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader._DataLine.LineBuffer">
            <summary>
            Gets line data buffer.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader._DataLine.BytesInBuffer">
            <summary>
            Gets number of bytes used in <b>LineBuffer</b>.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.#ctor(LumiSoft.Net.IO.SmartStream,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream from where to read body part.</param>
            <param name="boundary">Boundry ID what separates body parts.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> or <b>boundary</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Next">
            <summary>
            Moves to next "body part". Returns true if moved to next "body part" or false if there are no more parts.
            </summary>
            <returns>Returns true if moved to next "body part" or false if there are no more body parts.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the <b>origin</b> parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Seek(System.Int64,System.IO.SeekOrigin)">Is raised when this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>buffer</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.NotSupportedException">Is raised when this method is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Length">
            <summary>
            Gets the length in bytes of the stream.  This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.Position">
            <summary>
            Gets or sets the position within the current stream. This method is not supported and always throws a NotSupportedException.
            </summary>
            <exception cref="T:System.NotSupportedException">Is raised when this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.TextPreamble">
            <summary>
            Gets "preamble" text. Defined in RFC 2046 5.1.1.
            </summary>
            <remarks>Preamble text is text between MIME entiy headers and first boundary.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.TextEpilogue">
            <summary>
            Gets "epilogue" text. Defined in RFC 2046 5.1.1.
            </summary>
            <remarks>Epilogue text is text after last boundary end.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart._MultipartReader.ReaderState">
            <summary>
            Gets reader state.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart.ParseInternal(LumiSoft.Net.MIME.MIME_Entity,System.String,LumiSoft.Net.IO.SmartStream,LumiSoft.Net.MIME.MIME_b_Multipart)">
            <summary>
            Internal body parsing.
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="mediaType">MIME media type. For example: text/plain.</param>
            <param name="stream">Stream from where to read body.</param>
            <param name="body">Multipart body instance.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>mediaType</b>, <b>stream</b> or <b>body</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart.SetParent(LumiSoft.Net.MIME.MIME_Entity,System.Boolean)">
            <summary>
            Sets body parent.
            </summary>
            <param name="entity">Owner entity.</param>
            <param name="setContentType">If true sets entity.ContentType header value.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Multipart.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores MIME entity body to the specified stream.
            </summary>
            <param name="stream">Stream where to store body data.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart.IsModified">
            <summary>
            Gets if body has modified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart.DefaultBodyPartContentType">
            <summary>
            Gets default body part Content-Type. For more info see RFC 2046 5.1.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart.BodyParts">
            <summary>
            Gets multipart body body-parts collection.
            </summary>
            <remarks>Multipart entity child entities are called "body parts" in RFC 2045.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart.TextPreamble">
            <summary>
            Gets or sets "preamble" text. Defined in RFC 2046 5.1.1.
            </summary>
            <remarks>Preamble text is text between MIME entiy headers and first boundary.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Multipart.TextEpilogue">
            <summary>
            Gets or sets "epilogue" text. Defined in RFC 2046 5.1.1.
            </summary>
            <remarks>Epilogue text is text after last boundary end.</remarks>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartAlternative">
            <summary>
            This class represents MIME multipart/alternative body. Defined in RFC 2046 5.1.4.
            </summary>
            <remarks>
            The "multipart/alternative" is intended for use when each of the body parts is an "alternative" version of the same information.
            In general, user agents that compose "multipart/alternative" entities
            must place the body parts in increasing order of preference, that is,
            with the preferred format last.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartAlternative.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartAlternative.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartDigest">
            <summary>
            This class represents MIME multipart/digest body. Defined in RFC 2046 5.1.5.
            </summary>
            <remarks>
            The "multipart/digest" Content-Type is intended to be used to send collections of messages.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartDigest.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartDigest.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_MultipartDigest.DefaultBodyPartContentType">
            <summary>
            Gets default body part Content-Type. For more info see RFC 2046 5.1.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartEncrypted">
            <summary>
            This class represents MIME multipart/encrypted body. Defined in rfc 1847.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartEncrypted.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartEncrypted.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartFormData">
            <summary>
            This class represents MIME multipart/form-data body. Defined in RFC 2046.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartFormData.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartFormData.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartMixed">
            <summary>
            This class represents MIME multipart/mixed body. Defined in RFC 2046 5.1.3.
            </summary>
            <remarks>
            The "mixed" subtype of "multipart" is intended for use when the body
            parts are independent and need to be bundled in a particular order.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartMixed.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartMixed.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartParallel">
            <summary>
            This class represents MIME multipart/parallel bodies.  Defined in RFC 2046 5.1.6.
            </summary>
            <remarks>
            The "parallel" subtype of "multipart" is intended for use when the body
            parts are independent and their order is not important. Parts can be processed parallel.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartParallel.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartParallel.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartRelated">
            <summary>
            This class represents MIME multipart/related body. Defined in RFC 2387.
            </summary>
            <remarks>
             The Multipart/Related content-type provides a common mechanism for
             representing objects that are aggregates of related MIME body parts.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartRelated.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartRelated.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartReport">
            <summary>
            This class represents MIME multipart/report body. Defined in RFC 3462.
            </summary>
            <remarks>
            The Multipart/Report Multipurpose Internet Mail Extensions (MIME) content-type is a general "family" or 
            "container" type for electronic mail reports of any kind. The most used type is <b>delivery-status</b>.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartReport.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartReport.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_MultipartSigned">
            <summary>
            This class represents MIME multipart/signed body. Defined in RFC 5751.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartSigned.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_MultipartSigned.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>mediaTypedefaultContentTypeb></b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Provider">
            <summary>
            This class represent MIME entity body provider.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Provider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Provider.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.IO.SmartStream,LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Parses MIME entity body from specified stream.
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="stream">Stream from where to parse entity body.</param>
            <param name="defaultContentType">Default content type.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b>, <b>strean</b> or <b>defaultContentType</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_SinglepartBase">
            <summary>
            This class is base class for singlepart media bodies like: text,video,audio,image.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.#ctor(LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Default constructor.
            </summary>
            <param name="contentType">Content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.Finalize">
            <summary>
            Destructor - Just incase user won't call dispose.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.SetParent(LumiSoft.Net.MIME.MIME_Entity,System.Boolean)">
            <summary>
            Sets body parent.
            </summary>
            <param name="entity">Owner entity.</param>
            <param name="setContentType">If true sets entity.ContentType header value.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores MIME entity body to the specified stream.
            </summary>
            <param name="stream">Stream where to store body data.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.SetModified(System.Boolean)">
            <summary>
            Sets IsModified property value.
            </summary>
            <param name="isModified">Modified flag.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.GetEncodedDataStream">
            <summary>
            Gets body encoded data stream.
            </summary>
            <returns>Returns body encoded data stream.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.SetEncodedData(System.String,System.IO.Stream)">
            <summary>
            Sets body encoded data from specified stream.
            </summary>
            <param name="contentTransferEncoding">Content-Transfer-Encoding in what encoding <b>stream</b> data is.</param>
            <param name="stream">Stream data to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>contentTransferEncoding</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the argumennts has invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.GetDataStream">
            <summary>
            Gets body decoded data stream.
            </summary>
            <returns>Returns body decoded data stream.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when body contains not supported Content-Transfer-Encoding.</exception>
            <remarks>The returned stream should be closed/disposed as soon as it's not needed any more.</remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.SetData(System.IO.Stream,System.String)">
            <summary>
            Sets body data from the specified stream.
            </summary>
            <param name="stream">Source stream.</param>
            <param name="transferEncoding">Specifies content-transfer-encoding to use to encode data.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> or <b>transferEncoding</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.SetDataFromFile(System.String,System.String)">
            <summary>
            Sets body data from the specified file.
            </summary>
            <param name="file">File name with optional path.</param>
            <param name="transferEncoding">Specifies content-transfer-encoding to use to encode data.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_SinglepartBase.IsModified">
            <summary>
            Gets if body has modified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_SinglepartBase.EncodedDataSize">
            <summary>
            Gets encoded body data size in bytes.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_SinglepartBase.EncodedData">
            <summary>
            Gets body encoded data. 
            </summary>
            <remarks>NOTE: Use this property with care, because body data may be very big and you may run out of memory.
            For bigger data use <see cref="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.GetEncodedDataStream"/> method instead.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_SinglepartBase.Data">
            <summary>
            Gets body decoded data.
            </summary>
            <remarks>NOTE: Use this property with care, because body data may be very big and you may run out of memory.
            For bigger data use <see cref="M:LumiSoft.Net.MIME.MIME_b_SinglepartBase.GetDataStream"/> method instead.</remarks>
            <exception cref="T:System.NotSupportedException">Is raised when body contains not supported Content-Transfer-Encoding.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_SinglepartBase.EncodedStream">
            <summary>
            Gets encoded data stream.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Text">
            <summary>
            This class represents MIME text/xxx bodies. Defined in RFC 2045.
            </summary>
            <remarks>
            The "text" media type is intended for sending material which is principally textual in form.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Text.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaSubType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Text.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>mediaType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Text.SetText(System.String,System.Text.Encoding,System.String)">
            <summary>
            Sets text.
            </summary>
            <param name="transferEncoding">Content transfer encoding.</param>
            <param name="charset">Charset to use to encode text. If not sure, utf-8 is recommended.</param>
            <param name="text">Text.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>transferEncoding</b>, <b>charset</b> or <b>text</b> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this method is accessed and this body is not bounded to any entity.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when body contains not supported Content-Transfer-Encoding.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Text.GetCharset">
            <summary>
            Gets charset from Content-Type. If char set isn't specified, "ascii" is defined as default and it will be returned.
            </summary>
            <returns>Returns content charset.</returns>
            <exception cref="T:System.ArgumentException">Is raised when Content-Type has not supported charset parameter value.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_b_Text.Text">
            <summary>
            Gets body decoded text.
            </summary>
            <exception cref="T:System.ArgumentException">Is raised when not supported content-type charset or not supported content-transfer-encoding value.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when body contains not supported Content-Transfer-Encoding.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Unknown">
            <summary>
            This class represents MIME unknown bodies.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Unknown.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Unknown.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>defaultContentType</b> or <b>strean</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_b_Video">
            <summary>
            This class represents MIME video/xxx bodies. Defined in RFC 2046 4.4.
            </summary>
            <remarks>
            A media type of "video" indicates that the body contains a time-
            varying-picture image, possibly with color and coordinated sound.
            </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Video.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">MIME media type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_b_Video.Parse(LumiSoft.Net.MIME.MIME_Entity,LumiSoft.Net.MIME.MIME_h_ContentType,LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses body from the specified stream
            </summary>
            <param name="owner">Owner MIME entity.</param>
            <param name="defaultContentType">Default content-type for this body.</param>
            <param name="stream">Stream from where to read body.</param>
            <returns>Returns parsed body.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>, <b>mediaType</b> or <b>stream</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when any parsing errors.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord">
            <summary>
            Implements 'encoded-word' encoding. Defined in RFC 2047.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.#ctor(LumiSoft.Net.MIME.MIME_EncodedWordEncoding,System.Text.Encoding)">
            <summary>
            Default constructor.
            </summary>
            <param name="encoding">Encoding to use to encode text.</param>
            <param name="charset">Charset to use for encoding. If not sure UTF-8 is strongly recommended.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>charset</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.Encode(System.String)">
            <summary>
            Encodes specified text if it contains 8-bit chars, otherwise text won't be encoded.
            </summary>
            <param name="text">Text to encode.</param>
            <returns>Returns encoded text.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.Decode(System.String)">
            <summary>
            Decodes specified encoded-word.
            </summary>
            <param name="text">Encoded-word value.</param>
            <returns>Returns decoded text.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.MustEncode(System.String)">
            <summary>
            Checks if specified text must be encoded.
            </summary>
            <param name="text">Text to encode.</param>
            <returns>Returns true if specified text must be encoded, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.EncodeS(LumiSoft.Net.MIME.MIME_EncodedWordEncoding,System.Text.Encoding,System.Boolean,System.String)">
            <summary>
            Encodes specified text if it contains 8-bit chars, otherwise text won't be encoded.
            </summary>
            <param name="encoding">Encoding to use to encode text.</param>
            <param name="charset">Charset to use for encoding. If not sure UTF-8 is strongly recommended.</param>
            <param name="split">If true, words are splitted after 75 chars.</param>
            <param name="text">Text to encode.</param>
            <returns>Returns encoded text.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>charset</b> or <b>text</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.DecodeS(System.String)">
            <summary>
            Decodes non-ascii word with MIME <b>encoded-word</b> method. Defined in RFC 2047 2.
            </summary>
            <param name="word">MIME encoded-word value.</param>
            <returns>Returns decoded word.</returns>
            <remarks>If <b>word</b> is not encoded-word or has invalid syntax, <b>word</b> is leaved as is.</remarks>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>word</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.DecodeTextS(System.String)">
            <summary>
            Decodes non-ascii text with MIME <b>encoded-word</b> method. Defined in RFC 2047 2.
            </summary>
            <param name="text">Text.</param>
            <returns>Returns decoded text.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Encoding_EncodedWord.Split">
            <summary>
            Gets or sets if long words(over 75 char) are splitted.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h">
            <summary>
            This is base class for MIME header fields. Defined in RFC 2045 3.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h.ToString">
            <summary>
            Returns header field as string.
            </summary>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.
            If encoding needed, UTF-8 is strongly reccomended if not sure.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded. 
            If encoding needed, UTF-8 is strongly reccomended if not sure.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h.ValueToString">
            <summary>
            Returns header field value as string.
            </summary>
            <returns>Returns header field value as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h.ValueToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Returns header field value as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.
            If encoding needed, UTF-8 is strongly reccomended if not sure.</param>
            <returns>Returns header field value as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h.Name">
            <summary>
            Gets header field name. For example "Content-Type".
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_Collection">
            <summary>
            This class represents MIME header fields collection. Defined in RFC 2045.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.#ctor(LumiSoft.Net.MIME.MIME_h_Provider)">
            <summary>
            Default constructor.
            </summary>
            <param name="provider">Header fields provider.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>provider</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Insert(System.Int32,LumiSoft.Net.MIME.MIME_h)">
            <summary>
            Inserts a new header field into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the item.</param>
            <param name="field">Header field to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Add(System.String)">
            <summary>
            Parses and adds specified header field to the end of the collection.
            </summary>
            <param name="field">Header field string (Name: value).</param>
            <returns>Retunrs added header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Add(LumiSoft.Net.MIME.MIME_h)">
            <summary>
            Adds specified header field to the end of the collection.
            </summary>
            <param name="field">Header field to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Remove(LumiSoft.Net.MIME.MIME_h)">
            <summary>
            Removes specified header field from the collection.
            </summary>
            <param name="field">Header field to remove.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.RemoveAll(System.String)">
            <summary>
            Removes all header fields with the specified name.
            </summary>
            <param name="name">Header field name.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Contains(System.String)">
            <summary>
            Gets if collection has item with the specified name.
            </summary>
            <param name="name">Header field name.</param>
            <returns>Returns true if specified item exists in the collection, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Contains(LumiSoft.Net.MIME.MIME_h)">
            <summary>
            Gets if collection contains the specified item.
            </summary>
            <param name="field">Header field.</param>
            <returns>Returns true if specified item exists in the collection, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.GetFirst(System.String)">
            <summary>
            Gets first header field with the specified name. returns null if specified header field doesn't exist.
            </summary>
            <param name="name">Header field name.</param>
            <returns>Returns first header field with the specified name. returns null if specified header field doesn't exist.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ReplaceFirst(LumiSoft.Net.MIME.MIME_h)">
            <summary>
            Replaces first header field with specified name with specified value.
            </summary>
            <param name="field">Hedaer field.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToArray">
            <summary>
            Copies header fields to new array.
            </summary>
            <returns>Returns header fields array.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToFile(System.String,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Stores header to the specified file.
            </summary>
            <param name="fileName">File name with optional path.</param>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>fileName</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToByte(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Returns header as byte[] data.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <returns>Returns header as byte[] data.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Stores header to the specified stream.
            </summary>
            <param name="stream">Stream where to store header.</param>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores header to the specified stream.
            </summary>
            <param name="stream">Stream where to store header.</param>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="reEncod">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToString">
            <summary>
            Returns MIME header as string.
            </summary>
            <returns>Returns MIME header as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Returns MIME header as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <returns>Returns MIME header as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns MIME header as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header fields which value not modified, original encoding is kept.</param>
            <returns>Returns MIME header as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Parse(System.String)">
            <summary>
            Parses MIME header from the specified value.
            </summary>
            <param name="value">MIME header string.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Parse(LumiSoft.Net.IO.SmartStream)">
            <summary>
            Parses MIME header from the specified stream.
            </summary>
            <param name="stream">MIME header stream.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.Parse(LumiSoft.Net.IO.SmartStream,System.Text.Encoding)">
            <summary>
            Parses MIME header from the specified stream.
            </summary>
            <param name="stream">MIME header stream.</param>
            <param name="encoding">Headers fields reading encoding. If not sure, UTF-8 is recommended.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> or <b>encoding</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Collection.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Collection.IsModified">
            <summary>
            Gets if header has modified since it was loaded.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Collection.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Collection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>Returns the element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Collection.Item(System.String)">
            <summary>
            Gets header fields with the specified name.
            </summary>
            <param name="name">Header field name.</param>
            <returns>Returns header fields with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Collection.FieldsProvider">
            <summary>
            Gets header fields provider.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_ContentDisposition">
             <summary>
             Represents "Content-Disposition:" header. Defined in RFC 2183.
             </summary>
             <example>
             <code>
             RFC 2183.
                 In the extended BNF notation of [RFC 822], the Content-Disposition
                 header field is defined as follows:
            
                 disposition := "Content-Disposition" ":" disposition-type *(";" disposition-parm)
            
                 disposition-type := "inline" / "attachment" / extension-token
                                     ; values are not case-sensitive
            
                 disposition-parm := filename-parm 
                                     / creation-date-parm
                                     / modification-date-parm
                                     / read-date-parm
                                     / size-parm
                                     / parameter
            
                 filename-parm := "filename" "=" value
            
                 creation-date-parm := "creation-date" "=" quoted-date-time
             
                 modification-date-parm := "modification-date" "=" quoted-date-time
            
                 read-date-parm := "read-date" "=" quoted-date-time
            
                 size-parm := "size" "=" 1*DIGIT
            
                 quoted-date-time := quoted-string
                                     ; contents MUST be an RFC 822 `date-time'
                                     ; numeric timezones (+HHMM or -HHMM) MUST be used
             </code>
             </example>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentDisposition.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="dispositionType">The disposition-type. Known values are in <see cref="T:LumiSoft.Net.MIME.MIME_DispositionTypes">MIME_DispositionTypes</see>.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>dispositionType</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentDisposition.#ctor">
            <summary>
            Internal parser constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentDisposition.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Name">
            <summary>
            Returns always "Content-Disposition".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.DispositionType">
            <summary>
            Gets the disposition-type. Known values are in <see cref="T:LumiSoft.Net.MIME.MIME_DispositionTypes">MIME_DispositionTypes</see>.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Parameters">
            <summary>
            Gets Content-Type parameters collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Param_FileName">
            <summary>
            Gets or sets the suggested file name. Value null means not specified. Defined in RFC 2183 2.3.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Param_CreationDate">
            <summary>
            Gets or sets the creation date for a file. Value DateTime.MinValue means not specified. Defined in RFC 2183 2.4.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Param_ModificationDate">
            <summary>
            Gets or sets the modification date of a file. Value DateTime.MinValue means not specified. Defined in RFC 2183 2.5.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Param_ReadDate">
            <summary>
            Gets or sets the last read date of a file. Value DateTime.MinValue means not specified. Defined in RFC 2183 2.6.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentDisposition.Param_Size">
            <summary>
            Gets or sets the size of a file. Value -1 means not specified. Defined in RFC 2183 2.7.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_ContentType">
             <summary>
             Represents "Content-Type:" header. Defined in RFC 2045 5.1.
             </summary>
             <remarks>
             <code>
             RFC 2045 5.1.
             In the Augmented BNF notation of RFC 822, a Content-Type header field
             value is defined as follows:
            
                 content := "Content-Type" ":" type "/" subtype
                            *(";" parameter)
                            ; Matching of media type and subtype
                            ; is ALWAYS case-insensitive.
            
                 type := discrete-type / composite-type
            
                 discrete-type := "text" / "image" / "audio" / "video" / "application" / extension-token
            
                 composite-type := "message" / "multipart" / extension-token
            
                 extension-token := ietf-token / x-token
            
                 ietf-token := (An extension token defined by a standards-track RFC and registered with IANA.)
            
                 x-token := (The two characters "X-" or "x-" followed, with no intervening white space, by any token)
            
                 subtype := extension-token / iana-token
            
                 iana-token := (A publicly-defined extension token. Tokens of this form must be registered with IANA as specified in RFC 2048.)
            
                 parameter := attribute "=" value
            
                 attribute := token
                              ; Matching of attributes
                              ; is ALWAYS case-insensitive.
            
                 value := token / quoted-string
            
                 token := 1*(any (US-ASCII) CHAR except SPACE, CTLs,or tspecials)
            
                 tspecials :=  "(" / ")" / "&lt;" / "&gt;" / "@" /
                               "," / ";" / ":" / "\" / "
                               "/" / "[" / "]" / "?" / "="
                               ; Must be in quoted-string,
                               ; to use within parameter values
             </code>
             </remarks>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentType.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="mediaType">Media type with subtype. For example <b>text/plain</b>.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>mediaType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentType.#ctor">
            <summary>
            Internal parser constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentType.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ContentType.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.Name">
            <summary>
            Returns always "Content-Type".
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.Type">
            <summary>
            Gets media type. For example: application,image,text, ... .
            </summary>
            <remarks>The official list of reggistered types are http://www.iana.org/assignments/media-types .</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.SubType">
            <summary>
            Gets media sub-type. For example for text/plain, sub-type is 'plain'.
            </summary>
            <remarks>The official list of reggistered types are http://www.iana.org/assignments/media-types .</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.TypeWithSubype">
            <summary>
            Gets media type with subtype as Type/SubType. Well known value are in <see cref="T:LumiSoft.Net.MIME.MIME_MediaTypes">MIME_MediaTypes</see>. For example: text/plain.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.TypeWithSubtype">
            <summary>
            Gets media type with subtype as Type/SubType. Well known value are in <see cref="T:LumiSoft.Net.MIME.MIME_MediaTypes">MIME_MediaTypes</see>. For example: text/plain.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.Parameters">
            <summary>
            Gets Content-Type parameters collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.Param_Name">
            <summary>
            Gets or sets Content-Type <b>name</b> parameter value. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.Param_Charset">
            <summary>
            Gets or sets Content-Type <b>charset</b> parameter value. Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ContentType.Param_Boundary">
            <summary>
            Gets or sets Content-Type <b>boundary</b> parameter value. Value null means not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_Provider">
            <summary>
            This class represents MIME headers provider.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Provider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Provider.Parse(System.String)">
            <summary>
            Parses specified header field.
            </summary>
            <param name="field">Header field string (Name: value).</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Provider.DefaultHeaderField">
            <summary>
            Gets or sets default header field what is used to reperesent unknown header fields.
            </summary>
            <remarks>This property value value must be based on <see cref="T:LumiSoft.Net.MIME.MIME_h"/> class.</remarks>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference passed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid value is passed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Provider.HeaderFields">
            <summary>
            Gets header fields parsers collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_Parameter">
            <summary>
            Represents MIME header field parameter.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Parameter.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="value">Parameter value. Value null means not specified.</param>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Parameter.IsModified">
            <summary>
            Gets if this header field parameter is modified since it has loaded.
            </summary>
            <remarks>All new added header fields parameters has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Parameter.Name">
            <summary>
            Gets parameter name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Parameter.Value">
            <summary>
            Gets or sets parameter value. Value null means not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_ParameterCollection">
            <summary>
            Represents MIME header field parameters collection.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_ParameterCollection._ParameterBuilder">
            <summary>
            This class represents header field parameter builder.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection._ParameterBuilder.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">Parameter name.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection._ParameterBuilder.AddPart(System.Int32,System.Boolean,System.String)">
            <summary>
            Adds header field parameter part to paramter buffer.
            </summary>
            <param name="index">Parameter part index.</param>
            <param name="encoded">If true parameter part is encoded.</param>
            <param name="value">Parameter part value.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection._ParameterBuilder.GetParamter">
            <summary>
            Gets header field parameter(splitted paramter values concated).
            </summary>
            <returns>Returns header field parameter.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ParameterCollection._ParameterBuilder.Name">
            <summary>
            Gets parameter name.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.#ctor(LumiSoft.Net.MIME.MIME_h)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner">Owner MIME header field.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Remove(System.String)">
            <summary>
            Removes specified parametr from the collection.
            </summary>
            <param name="name">Parameter name.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.ToArray">
            <summary>
            Copies header fields parameters to new array.
            </summary>
            <returns>Returns header fields parameters array.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.ToString">
            <summary>
            Returns header field parameters as string.
            </summary>
            <returns>Returns header field parameters as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.ToString(System.Text.Encoding)">
            <summary>
            Returns header field parameters as string.
            </summary>
            <param name="charset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <returns>Returns header field parameters as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Parse(System.String)">
            <summary>
            Parses parameters from the specified value.
            </summary>
            <param name="value">Header field parameters string.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Parse(LumiSoft.Net.MIME.MIME_Reader)">
            <summary>
            Parses parameters from the specified reader.
            </summary>
            <param name="reader">MIME reader.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>reader</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.DecodeExtOctet(System.String,System.Text.Encoding)">
            <summary>
            Decodes non-ascii text with MIME <b>ext-octet</b> method. Defined in RFC 2231 7.
            </summary>
            <param name="text">Text to decode,</param>
            <param name="charset">Charset to use.</param>
            <returns>Returns decoded text.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> or <b>charset</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_ParameterCollection.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ParameterCollection.IsModified">
            <summary>
            Gets if this header field parameters are modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Owner">
            <summary>
            Gets owner MIME header field.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_ParameterCollection.Item(System.String)">
            <summary>
            Gets or sets specified header field parameter value. Value null means not specified.
            </summary>
            <param name="name">Header field name.</param>
            <returns>Returns specified header field value or null if specified parameter doesn't exist.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_Unparsed">
            <summary>
            This class represent header field what parsing has failed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unparsed.#ctor(System.String,System.Exception)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <param name="exception">Parsing error.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unparsed.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.InvalidOperationException">Is alwyas raised when this mewthod is accsessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unparsed.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unparsed.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unparsed.Name">
            <summary>
            Gets header field name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unparsed.Value">
            <summary>
            Gets header field value.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unparsed.Exception">
            <summary>
            Gets error happened during parse.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_h_Unstructured">
            <summary>
            This class represents normal unstructured text header field.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unstructured.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="name">Header field name.</param>
            <param name="value">Header field value.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>name</b> or <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unstructured.#ctor">
            <summary>
            Internal parser constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unstructured.Parse(System.String)">
            <summary>
            Parses header field from the specified value.
            </summary>
            <param name="value">Header field value. Header field name must be included. For example: 'Content-Type: text/plain'.</param>
            <returns>Returns parsed header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_h_Unstructured.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns header field as string.
            </summary>
            <param name="wordEncoder">8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="parmetersCharset">Charset to use to encode 8-bit characters. Value null means parameters not encoded.</param>
            <param name="reEncode">If true always specified encoding is used. If false and header field value not modified, original encoding is kept.</param>
            <returns>Returns header field as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unstructured.IsModified">
            <summary>
            Gets if this header field is modified since it has loaded.
            </summary>
            <remarks>All new added header fields has <b>IsModified = true</b>.</remarks>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unstructured.Name">
            <summary>
            Gets header field name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_h_Unstructured.Value">
            <summary>
            Gets or sets header field value.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when when null reference is passed.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_DispositionTypes">
            <summary>
            This class holds MIME content disposition types. Defined in RFC 2183.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_DispositionTypes.Inline">
            <summary>
            A bodypart should be marked `inline' if it is intended to be displayed automatically upon display of the message. 
            Inline bodyparts should be presented in the order in which they occur, subject to the normal semantics of multipart messages.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_DispositionTypes.Attachment">
            <summary>
            Bodyparts can be designated `attachment' to indicate that they are separate from the main body of the mail message, 
            and that their display should not be automatic, but contingent upon some further action of the user.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_MediaTypes">
            <summary>
            This class holds well known Content-Type header field media types. For example: text/plain, application/octet-stream.
            Full IANA registered list can be found from: http://www.iana.org/assignments/media-types.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_MediaTypes.Application">
            <summary>
            This class holds well-known application/xxx media types.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.octet_stream">
            <summary>
            "application/octet-stream". Defined in RFC 2045,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.pdf">
            <summary>
            "application/pdf". Defined in RFC 3778.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.sdp">
            <summary>
            "application/sdp". Defined in RFC 4566.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.xml">
            <summary>
            "application/xml". Defined RFC 3023.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.zip">
            <summary>
            "application/zip". Defined in RFC 4566.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.x_pkcs7_signature">
            <summary>
            "application/x-pkcs7-signature". Defined in RFC 2311,2633.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Application.pkcs7_mime">
            <summary>
            "application/pkcs7-mime". Defined in RFC 5751.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_MediaTypes.Image">
            <summary>
            This class holds well-known image/xxx media types.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Image.gif">
            <summary>
            "image/gif".
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Image.jpeg">
            <summary>
            "image/jpeg".
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Image.tiff">
            <summary>
            "image/tiff".
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_MediaTypes.Text">
            <summary>
            This class holds well-known text/xxx media types.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.calendar">
            <summary>
            "text/calendar". Defined in RFC 2445.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.css">
            <summary>
            "text/css". Defined in RFC 2854
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.html">
            <summary>
            "text/html". Defined in RFC 2854.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.plain">
            <summary>
            "text/plain". Defined in RFC 2646,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.rfc822_headers">
            <summary>
            "text/rfc822-headers". Defined in RFC 1892.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.richtext">
            <summary>
            "text/richtext". Defined in RFC 2045,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Text.xml">
            <summary>
            "text/xml". Defined in RFC 3023.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart">
            <summary>
            This class holds well-known multipart/xxx media types.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.alternative">
            <summary>
            "multipart/alternative". Defined in RFC 2045,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.digest">
            <summary>
            "multipart/digest". Defined in RFC 2045,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.encrypted">
            <summary>
            "multipart/digest". Defined in RFC 1847.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.form_data">
            <summary>
            "multipart/form-data". Defined in RFC 2388.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.mixed">
            <summary>
            "multipart/mixed". Defined in RFC 2045,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.parallel">
            <summary>
            "multipart/parallel". Defined in RFC 2045,2046.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.related">
            <summary>
            "multipart/related". Defined in RFC 2387.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.report">
            <summary>
            "multipart/report". Defined in RFC 1892.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.signed">
            <summary>
            "multipart/signed". Defined in RFC 1847.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Multipart.voice_message">
            <summary>
            "multipart/voice-message". Defined in RFC 2421,2423.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_MediaTypes.Message">
            <summary>
            This class holds well-known message/xxx media types.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Message.rfc822">
            <summary>
            "message/rfc822". 
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Message.disposition_notification">
            <summary>
            "message/disposition-notification". 
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_MediaTypes.Message.delivery_status">
            <summary>
            "message/delivery-status". Defined in RFC 3464.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_EncodedWordEncoding">
            <summary>
            This enum specifies MIME RFC 2047 'encoded-word' encoding method.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_EncodedWordEncoding.Q">
            <summary>
            The "B" encoding. Defined in RFC 2047 (section 4.1).
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_EncodedWordEncoding.B">
            <summary>
            The "Q" encoding. Defined in RFC 2047 (section 4.2).
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_Entity">
            <summary>
            Represents a MIME entity. Defined in RFC 2045 2.4.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.Dispose">
            <summary>
            Cleans up any resources being used. This method is thread-safe.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToFile(System.String,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Stores MIME entity to the specified file.
            </summary>
            <param name="file">File name with path where to store MIME entity.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToFile(System.String,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Stores MIME entity to the specified file.
            </summary>
            <param name="file">File name with path where to store MIME entity.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Store MIME enity to the specified stream.
            </summary>
            <param name="stream">Stream where to store MIME entity. Storing starts form stream current position.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToStream(System.IO.Stream,LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Store MIME enity to the specified stream.
            </summary>
            <param name="stream">Stream where to store MIME entity. Storing starts form stream current position.</param>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToString">
            <summary>
            Returns MIME entity as string.
            </summary>
            <returns>Returns MIME entity as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding)">
            <summary>
            Returns MIME entity as string.
            </summary>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <returns>Returns MIME entity as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToString(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns MIME entity as string.
            </summary>
            <param name="headerWordEncoder">Header 8-bit words ecnoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Charset to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <returns>Returns MIME entity as string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.ToByte(LumiSoft.Net.MIME.MIME_Encoding_EncodedWord,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns MIME entity as byte[].
            </summary>
            <param name="headerWordEncoder">Header 8-bit words encoder. Value null means that words are not encoded.</param>
            <param name="headerParmetersCharset">Char set to use to encode 8-bit header parameters. Value null means parameters not encoded.</param>
            <param name="headerReencode">If true always specified encoding is used for header. If false and header field value not modified, 
            original encoding is kept.</param>
            <returns>Returns MIME entity as byte[].</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.Parse(LumiSoft.Net.IO.SmartStream,System.Text.Encoding,LumiSoft.Net.MIME.MIME_h_ContentType)">
            <summary>
            Parses MIME entiry from the specified stream.
            </summary>
            <param name="stream">Source stream.</param>
            <param name="headerEncoding">Header reading encoding. If not sure UTF-8 is recommended.</param>
            <param name="defaultContentType">Default content type.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b>,<b>headerEncoding</b> or <b>defaultContentType</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Entity.SetParent(LumiSoft.Net.MIME.MIME_Entity)">
            <summary>
            Sets MIME entity parent entity.
            </summary>
            <param name="parent">Parent entity.</param>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.IsModified">
            <summary>
            Gets if this entity is modified since it has loaded.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is riased when this class is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.Parent">
            <summary>
            Gets the parent entity of this entity, returns null if this is the root entity.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.Header">
            <summary>
            Gets MIME entity header field collection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.MimeVersion">
            <summary>
            Gets or sets MIME version number. Value null means that header field does not exist. Normally this value is 1.0. Defined in RFC 2045 section 4.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>An indicator that this message is formatted according to the MIME
            standard, and an indication of which version of MIME is used.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentID">
            <summary>
            Gets or sets content body part ID. Value null means that header field does not exist. Defined in RFC 2045 7.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Specifies a Unique ID for one MIME body part of the content of a message.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentDescription">
            <summary>
            Gets or sets description of message body part. Value null means that header field does not exist. Defined in RFC 2045 8.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Description of a particular body part of a message; for example, a caption for an image body part.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentTransferEncoding">
            <summary>
            Gets or sets content transfer encoding. Value null means that header field does not exist. 
            RFC defined values are in <see cref="T:LumiSoft.Net.MIME.MIME_TransferEncodings">MIME_TransferEncodings</see>. Defined in RFC 2045 6.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Coding method used in a MIME message body part.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentType">
            <summary>
            Gets or sets MIME content type. Value null means that header field does not exist. Defined in RFC 2045 5.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentBase">
            <summary>
            Gets or sets base to be used for resolving relative URIs within this content part. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Base to be used for resolving relative URIs within this content part. See also Content-Location.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentLocation">
            <summary>
            Gets or sets URI for retrieving a body part. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>URI using which the content of this body-part part was retrieved,
            might be retrievable, or which otherwise gives a globally unique identification of the content.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.Contentfeatures">
            <summary>
            Gets or sets content features of a MIME body part. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>The 'Content-features:' header can be used to annotate a MIME body part with a media feature expression, 
            to indicate features of the body part content. See also RFC 2533, RFC 2506, and RFC 2045.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentDisposition">
            <summary>
            Gets or sets content disposition. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Indicates whether a MIME body part is to be shown inline or is an attachment; can also indicate a 
            suggested filename for use when saving an attachment to a file.</remarks>
            <exception cref="T:LumiSoft.Net.ParseException">Is raised when header field parsing errors.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentLanguage">
            <summary>
            Gets or sets language of message content. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Can include a code for the natural language used in a message; e.g., 'en' for English. 
            Can also contain a list of languages for a message containing more than one language.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentAlternative">
            <summary>
            Gets or sets message alternative content. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Information about the media features of alternative content formats available for the current message.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentMD5">
            <summary>
            Gets or sets content MD5 checksum. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Checksum of content to ensure that it has not been modified.</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.ContentDuration">
            <summary>
            Gets or sets time duration of content. Value null means that header field does not exist.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <remarks>Time duration of body part content, in seconds (e.g., for audio message).</remarks>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Entity.Body">
            <summary>
            Gets or sets MIME entity body.
            </summary>
            <exception cref="T:System.ArgumentNullException">Is raised when null reference passed.</exception>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_EntityCollection">
            <summary>
            Represents MIME child entity collection in multipart/xxx entity.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.Add(LumiSoft.Net.MIME.MIME_Entity)">
            <summary>
            Adds specified MIME enity to the collection.
            </summary>
            <param name="entity">MIME entity.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>entity</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.Insert(System.Int32,LumiSoft.Net.MIME.MIME_Entity)">
            <summary>
            Inserts a new MIME entity into the collection at the specified location.
            </summary>
            <param name="index">The location in the collection where you want to add the MIME entity.</param>
            <param name="entity">MIME entity.</param>
            <exception cref="T:System.IndexOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>entity</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.Remove(LumiSoft.Net.MIME.MIME_Entity)">
            <summary>
            Removes specified MIME entity from the collection.
            </summary>
            <param name="entity">MIME entity.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>field</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.Remove(System.Int32)">
            <summary>
            Removes MIME entity at the specified index from the collection.
            </summary>
            <param name="index">The index of the MIME entity to remove.</param>
            <exception cref="T:System.IndexOutOfRangeException">Is raised when <b>index</b> is out of range.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.Contains(LumiSoft.Net.MIME.MIME_Entity)">
            <summary>
            Gets if the collection contains specified MIME entity.
            </summary>
            <param name="entity">MIME entity.</param>
            <returns>Returns true if the specified MIME entity exists in the collection, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>entity</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.SetModified(System.Boolean)">
            <summary>
            Sets IsModified property value.
            </summary>
            <param name="isModified">Modified flag.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_EntityCollection.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns>Returns IEnumerator interface.</returns>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_EntityCollection.IsModified">
            <summary>
            Gets if enity collection has modified.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_EntityCollection.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_EntityCollection.Item(System.Int32)">
            <summary>
            Gets MIME entity at the specified index.
            </summary>
            <param name="index">MIME entity zero-based index.</param>
            <returns>Returns MIME entity.</returns>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_Message">
            <summary>
            Represents a MIME message. Defined in RFC 2045 2.3.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.ParseFromFile(System.String)">
            <summary>
            Parses MIME message from the specified file.
            </summary>
            <param name="file">File name with path from where to parse MIME message.</param>
            <returns>Returns parsed MIME message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.ParseFromFile(System.String,System.Text.Encoding)">
            <summary>
            Parses MIME message from the specified file.
            </summary>
            <param name="file">File name with path from where to parse MIME message.</param>
            <param name="headerEncoding">Header reading encoding. If not sure UTF-8 is recommended.</param>
            <returns>Returns parsed MIME message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> or <b>headerEncoding</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.ParseFromStream(System.IO.Stream)">
            <summary>
            Parses MIME message from the specified stream.
            </summary>
            <param name="stream">Stream from where to parse MIME message. Parsing starts from current stream position.</param>
            <returns>Returns parsed MIME message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.ParseFromStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Parses MIME message from the specified stream.
            </summary>
            <param name="stream">Stream from where to parse MIME message. Parsing starts from current stream position.</param>
            <param name="headerEncoding">Header reading encoding. If not sure UTF-8 is recommended.</param>
            <returns>Returns parsed MIME message.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> or <b>headerEncoding</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.CreateAttachment(System.String)">
            <summary>
            Creates attachment entity.
            </summary>
            <param name="file">File name with optional path.</param>
            <returns>Returns created attachment entity.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>file</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.CreateAttachment(System.IO.Stream,System.String)">
            <summary>
            Creates attachment entity.
            </summary>
            <param name="stream">Attachment data stream. Data is read from stream current position.</param>
            <param name="fileName">File name.</param>
            <returns>Returns created attachment entity.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> or <b>fileName</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.GetAllEntities(System.Boolean)">
            <summary>
            Gets all MIME entities as list.
            </summary>
            <param name="includeEmbbedMessage">If true, then embedded RFC822 message child entities are included.</param>
            <returns>Returns all MIME entities as list.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this class is disposed and this method is accessed.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Message.GetEntityByCID(System.String)">
            <summary>
            Gets MIME entity with the specified Content-ID. Returns null if no such entity.
            </summary>
            <param name="cid">Content ID.</param>
            <returns>Returns MIME entity with the specified Content-ID or null if no such entity.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this class is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>cid</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Message.AllEntities">
            <summary>
            Gets all MIME entities as list.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this class is disposed and this property is accessed.</exception>
            <remarks>The nestetd entities of embbed messages with <b>Content-Type: Message/Rfc822</b> are also included.</remarks>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_Reader">
            <summary>
            MIME lexical tokens parser.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Value to read.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Atom">
            <summary>
            Reads RFC 2822 'atom' from source stream.
            </summary>
            <returns>Returns RFC 2822 'atom' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.DotAtom">
            <summary>
            Reads RFC 2822 'dot-atom' from source stream.
            </summary>
            <returns>Returns RFC 2822 'dot-atom' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Token">
            <summary>
            Reads RFC 2045 (section 5) 'token' from source stream.
            </summary>
            <returns>Returns RFC 2045 (section 5) 'token' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Comment">
            <summary>
            Reads RFC 822 'comment' from source stream.
            </summary>
            <returns>Returns RFC 822 'comment' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Word">
            <summary>
            Reads RFC 2822 (section 3.2.6) 'word' from source stream.
            </summary>
            <returns>Returns RFC 2822 (section 3.2.6) 'word' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.EncodedWord">
            <summary>
            Reads RFC 2047 'encoded-word' from source stream.
            </summary>
            <returns>Returns RFC 2047 'encoded-word' or null if end of stream reached.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when source stream has no encoded-word at current position.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.QuotedString">
            <summary>
            Reads RFC 822 'quoted-string' from source stream.
            </summary>
            <returns>Returns RFC 822 'quoted-string' or null if end of stream reached.</returns>
            <exception cref="T:System.InvalidOperationException">Is raised when source stream has no quoted-string at current position.</exception>
            <exception cref="T:System.ArgumentException">Is raised when not valid 'quoted-string'.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Value">
            <summary>
            Reads RFC 2045 (section 5) 'token' from source stream.
            </summary>
            <returns>Returns 2045 (section 5) 'token' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Phrase">
            <summary>
            Reads RFC 2047 (section 5) 'phrase' from source stream.
            </summary>
            <returns>Returns RFC 2047 (section 5) 'phrase' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Text">
            <summary>
            Reads RFC 822 '*text' from source stream.
            </summary>
            <returns>Returns RFC 822 '*text' or null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.ToFirstChar">
            <summary>
            Reads all white-space chars + CR and LF.
            </summary>
            <returns>Returns readed chars.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Char(System.Boolean)">
            <summary>
            Reads 1 char from source stream.
            </summary>
            <param name="readToFirstChar">Specifies if postion is moved to char(skips white spaces).</param>
            <returns>Returns readed char or -1 if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.Peek(System.Boolean)">
            <summary>
            Shows next char in source stream, this method won't consume that char.
            </summary>
            <param name="readToFirstChar">Specifies if postion is moved to char(skips white spaces).</param>
            <returns>Returns next char in source stream, returns -1 if end of stream.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.StartsWith(System.String)">
            <summary>
            Gets if source stream valu starts with the specified value. Compare is case-insensitive.
            </summary>
            <param name="value">Value to check.</param>
            <returns>Returns true if source steam satrs with specified string.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.ToEnd">
            <summary>
            Reads all data from current postion to the end.
            </summary>
            <returns>Retruns readed data. Returns null if end of string is reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.IsAlpha(System.Char)">
            <summary>
            Gets if the specified char is RFC 822 'ALPHA'.
            </summary>
            <param name="c">Char to check.</param>
            <returns>Returns true if specified char is RFC 822 'ALPHA'.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.IsAText(System.Char)">
            <summary>
            Gets if the specified char is RFC 2822 'atext'.
            </summary>
            <param name="c">Char to check.</param>
            <returns>Returns true if specified char is RFC 2822 'atext'.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.IsDotAtom(System.String)">
            <summary>
            Gets if the specified value can be represented as "dot-atom".
            </summary>
            <param name="value">Value to check.</param>
            <returns>Returns true if the specified value can be represented as "dot-atom".</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.IsToken(System.String)">
            <summary>
            Gets if specified valu is RFC 2045 (section 5) 'token'.
            </summary>
            <param name="text">Text to check.</param>
            <returns>Returns true if specified char is RFC 2045 (section 5) 'token'.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>text</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.IsToken(System.Char)">
            <summary>
            Gets if the specified char is RFC 2045 (section 5) 'token'.
            </summary>
            <param name="c">Char to check.</param>
            <returns>Returns true if specified char is RFC 2045 (section 5) 'token'.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.IsAttributeChar(System.Char)">
            <summary>
            Gets if the specified char is RFC 2231 (section 7) 'attribute-char'.
            </summary>
            <param name="c">Char to check.</param>
            <returns>Returns true if specified char is RFC 2231 (section 7) 'attribute-char'.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.ReadParenthesized">
            <summary>
            Reads parenthesized value. Supports {},(),[],&lt;&gt; parenthesis. 
            Throws exception if there isn't parenthesized value or closing parenthesize is missing.
            </summary>
            <returns>Returns value between parenthesized.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Reader.QuotedReadToDelimiter(System.Char[])">
            <summary>
            Reads string to specified delimiter or to end of underlying string. Notes: Delimiters in quoted string is skipped. 
            For example: delimiter = ',', text = '"aaaa,eee",qqqq' - then result is '"aaaa,eee"'.
            </summary>
            <param name="delimiters">Data delimiters.</param>
            <returns>Returns readed string or null if end of string reached.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>delimiters</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Reader.Available">
            <summary>
            Gets number of chars has left for processing.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.MIME.MIME_Reader.Position">
            <summary>
            Gets position in string.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_TransferEncodings">
            <summary>
            This class holds MIME content transfer encodings. Defined in RFC 2045 6.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_TransferEncodings.SevenBit">
            <summary>
            Up to 998 octets per line of the code range 1..127 with CR and LF (codes 13 and 10 respectively) only allowed to 
            appear as part of a CRLF line ending. This is the default value.
            Defined in RFC 2045 6.2.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_TransferEncodings.EightBit">
            <summary>
            Up to 998 octets per line with CR and LF (codes 13 and 10 respectively) only allowed to appear as part of a CRLF line ending.
            Defined in RFC 2045 6.2.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_TransferEncodings.QuotedPrintable">
            <summary>
            Used to encode arbitrary octet sequences into a form that satisfies the rules of 7bit. 
            Designed to be efficient and mostly human readable when used for text data consisting primarily of US-ASCII characters 
            but also containing a small proportion of bytes with values outside that range.
            Defined in RFC 2045 6.7.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_TransferEncodings.Base64">
            <summary>
            Used to encode arbitrary octet sequences into a form that satisfies the rules of 7bit. Has a fixed overhead and is 
            intended for non text data and text that is not ASCII heavy.
            Defined in RFC 2045 6.8.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.MIME.MIME_TransferEncodings.Binary">
            <summary>
            Any sequence of octets. This type is not widely used. Defined in RFC 3030.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.MIME.MIME_Utils">
            <summary>
            Provides MIME related utility methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.DateTimeToRfc2822(System.DateTime)">
            <summary>
            Converts date to RFC 2822 date time string.
            </summary>
            <param name="dateTime">Date time value to convert..</param>
            <returns>Returns RFC 2822 date time string.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.ParseRfc2822DateTime(System.String)">
            <summary>
            Parses RFC 2822 date-time from the specified value.
            </summary>
            <param name="value">RFC 2822 date-time string value.</param>
            <returns>Returns parsed datetime value.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.UnfoldHeader(System.String)">
            <summary>
            Unfolds folded header field.
            </summary>
            <param name="value">Header field.</param>
            <returns>Returns unfolded header field.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.CreateMessageID">
            <summary>
            Creates Rfc 2822 3.6.4 message-id. Syntax: '&lt;' id-left '@' id-right '&gt;'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.ParseHeaders(System.IO.Stream)">
            <summary>
            Parses headers from message or mime entry.
            </summary>
            <param name="entryStrm">Stream from where to read headers.</param>
            <returns>Returns header lines.</returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.ParseHeaderField(System.String,System.IO.Stream)">
            <summary>
            Parse header specified header field value.
            
            Use this method only if you need to get only one header field, otherwise use
            MimeParser.ParseHeaderField(string fieldName,string headers).
            This avoid parsing headers multiple times.
            </summary>
            <param name="fieldName">Header field which to parse. Eg. Subject: .</param>
            <param name="entryStrm">Stream from where to read headers.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.ParseHeaderField(System.String,System.String)">
            <summary>
            Parse header specified header field value.
            </summary>
            <param name="fieldName">Header field which to parse. Eg. Subject: .</param>
            <param name="headers">Full headers string. Use MimeParser.ParseHeaders() to get this value.</param>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.QDecode(System.Text.Encoding,System.String)">
            <summary>
            "Q" decoder. This is same as quoted-printable, except '_' is converted to ' '.
            Defined in RFC 2047 4.2.
            </summary>
            <param name="encoding">Input string encoding.</param>
            <param name="data">String which to encode.</param>
            <returns>Returns decoded string.</returns>		
            <exception cref="T:System.ArgumentNullException">Is raised when <b>encoding</b> or <b>data</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.MIME.MIME_Utils.QuotedPrintableDecode(System.Byte[])">
            <summary>
            quoted-printable decoder. Defined in RFC 2045 6.7.
            </summary>
            <param name="data">Data which to encode.</param>
            <returns>Returns decoded data.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>data</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.BalanceMode">
            <summary>
            This enum specified balance mode.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.BalanceMode.LoadBalance">
            <summary>
            Operation is load balanched by all workers.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.BalanceMode.FailOver">
            <summary>
            Operation will be handed over to next worker, if last one fails.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.EventArgs`1">
            <summary>
            This class universal event arguments for transporting single value.
            </summary>
            <typeparam name="T">Event data.</typeparam>
        </member>
        <member name="M:LumiSoft.Net.EventArgs`1.#ctor(`0)">
            <summary>
            Default constructor.
            </summary>
            <param name="value">Event data.</param>
        </member>
        <member name="P:LumiSoft.Net.EventArgs`1.Value">
            <summary>
            Gets event data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.ExceptionEventArgs">
            <summary>
            This class provides data for error events and methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Default constructor.
            </summary>
            <param name="exception">Exception.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>exception</b> is null reference value.</exception>
        </member>
        <member name="P:LumiSoft.Net.ExceptionEventArgs.Exception">
            <summary>
            Gets exception.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.HostEndPoint">
            <summary>
            Represents a network endpoint as an host(name or IP address) and a port number.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.HostEndPoint.#ctor(System.String,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="host">Host name or IP address.</param>
            <param name="port">The port number associated with the host. Value -1 means port not specified.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>host</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.HostEndPoint.#ctor(System.Net.IPEndPoint)">
            <summary>
            Default constructor.
            </summary>
            <param name="endPoint">Host IP end point.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>endPoint</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.HostEndPoint.Parse(System.String)">
            <summary>
            Parses HostEndPoint from the specified string.
            </summary>
            <param name="value">HostEndPoint value.</param>
            <returns>Returns parsed HostEndPoint value.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.HostEndPoint.Parse(System.String,System.Int32)">
            <summary>
            Parses HostEndPoint from the specified string.
            </summary>
            <param name="value">HostEndPoint value.</param>
            <param name="defaultPort">If port isn't specified in value, specified port will be used.</param>
            <returns>Returns parsed HostEndPoint value.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>value</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.HostEndPoint.ToString">
            <summary>
            Returns HostEndPoint as string.
            </summary>
            <returns>Returns HostEndPoint as string.</returns>
        </member>
        <member name="P:LumiSoft.Net.HostEndPoint.IsIPAddress">
            <summary>
            Gets if <b>Host</b> is IP address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.HostEndPoint.Host">
            <summary>
            Gets host name or IP address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.HostEndPoint.Port">
            <summary>
            Gets the port number of the endpoint. Value -1 means port not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Log.WriteLogEventArgs">
            <summary>
            This class provides data for <b>Logger.WriteLog</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log.WriteLogEventArgs.#ctor(LumiSoft.Net.Log.LogEntry)">
            <summary>
            Default constructor.
            </summary>
            <param name="logEntry">New log entry.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>logEntry</b> is null.</exception>
        </member>
        <member name="P:LumiSoft.Net.Log.WriteLogEventArgs.LogEntry">
            <summary>
            Gets new log entry.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Log.LogEntry">
            <summary>
            Implements log entry.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log.LogEntry.#ctor(LumiSoft.Net.Log.LogEntryType,System.String,System.Int64,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="type">Log entry type.</param>
            <param name="id">Log entry ID.</param>
            <param name="size">Specified how much data was readed or written.</param>
            <param name="text">Description text.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.LogEntry.#ctor(LumiSoft.Net.Log.LogEntryType,System.String,System.Security.Principal.GenericIdentity,System.Int64,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Byte[])">
            <summary>
            Default constructor.
            </summary>
            <param name="type">Log entry type.</param>
            <param name="id">Log entry ID.</param>
            <param name="userIdentity">Log entry owner user or null if none.</param>
            <param name="size">Log entry read/write size in bytes.</param>
            <param name="text">Log text.</param>
            <param name="localEP">Local IP end point.</param>
            <param name="remoteEP">Remote IP end point.</param>
            <param name="data">Log data.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.LogEntry.#ctor(LumiSoft.Net.Log.LogEntryType,System.String,System.Security.Principal.GenericIdentity,System.Int64,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Exception)">
            <summary>
            Default constructor.
            </summary>
            <param name="type">Log entry type.</param>
            <param name="id">Log entry ID.</param>
            <param name="userIdentity">Log entry owner user or null if none.</param>
            <param name="size">Log entry read/write size in bytes.</param>
            <param name="text">Log text.</param>
            <param name="localEP">Local IP end point.</param>
            <param name="remoteEP">Remote IP end point.</param>
            <param name="exception">Exception happened. Can be null.</param>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.EntryType">
            <summary>
            Gets log entry type.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.ID">
            <summary>
            Gets log entry ID.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.Time">
            <summary>
            Gets time when log entry was created.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.UserIdentity">
            <summary>
            Gets log entry related user identity.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.Size">
            <summary>
            Gets how much data was readed or written, depends on <b>LogEntryType</b>.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.Text">
            <summary>
            Gets describing text.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.Exception">
            <summary>
            Gets exception happened. This property is available only if LogEntryType.Exception.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.LocalEndPoint">
            <summary>
            Gets local IP end point. Value null means no local end point.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.RemoteEndPoint">
            <summary>
            Gets remote IP end point. Value null means no remote end point.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.Log.LogEntry.Data">
            <summary>
            Gest log data. Value null means no log data.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Log.LogEntryType">
            <summary>
            Specifies log entry type.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Log.LogEntryType.Read">
            <summary>
            Read entry.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Log.LogEntryType.Write">
            <summary>
            Write entry.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Log.LogEntryType.Text">
            <summary>
            Text entry.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.Log.LogEntryType.Exception">
            <summary>
            Exception entry.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.Log.Logger">
            <summary>
            General logging module.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddRead(System.Int64,System.String)">
            <summary>
            Adds read log entry.
            </summary>
            <param name="size">Readed data size in bytes.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddRead(System.String,System.Security.Principal.GenericIdentity,System.Int64,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Adds read log entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="size">Readed data size in bytes.</param>
            <param name="text">Log text.</param>
            <param name="userIdentity">Authenticated user identity.</param>
            <param name="localEP">Local IP endpoint.</param>
            <param name="remoteEP">Remote IP endpoint.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddRead(System.String,System.Security.Principal.GenericIdentity,System.Int64,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Byte[])">
            <summary>
            Adds read log entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="size">Readed data size in bytes.</param>
            <param name="text">Log text.</param>
            <param name="userIdentity">Authenticated user identity.</param>
            <param name="localEP">Local IP endpoint.</param>
            <param name="remoteEP">Remote IP endpoint.</param>
            <param name="data">Log data.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddWrite(System.Int64,System.String)">
            <summary>
            Add write log entry.
            </summary>
            <param name="size">Written data size in bytes.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddWrite(System.String,System.Security.Principal.GenericIdentity,System.Int64,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Add write log entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="size">Written data size in bytes.</param>
            <param name="text">Log text.</param>
            <param name="userIdentity">Authenticated user identity.</param>
            <param name="localEP">Local IP endpoint.</param>
            <param name="remoteEP">Remote IP endpoint.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddWrite(System.String,System.Security.Principal.GenericIdentity,System.Int64,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Byte[])">
            <summary>
            Add write log entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="size">Written data size in bytes.</param>
            <param name="text">Log text.</param>
            <param name="userIdentity">Authenticated user identity.</param>
            <param name="localEP">Local IP endpoint.</param>
            <param name="remoteEP">Remote IP endpoint.</param>
            <param name="data">Log data.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddText(System.String)">
            <summary>
            Adds text entry.
            </summary>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddText(System.String,System.String)">
            <summary>
            Adds text entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddText(System.String,System.Security.Principal.GenericIdentity,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Adds text entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="text">Log text.</param>
            <param name="userIdentity">Authenticated user identity.</param>
            <param name="localEP">Local IP endpoint.</param>
            <param name="remoteEP">Remote IP endpoint.</param>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.AddException(System.String,System.Security.Principal.GenericIdentity,System.String,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Exception)">
            <summary>
            Adds exception entry.
            </summary>
            <param name="id">Log entry ID.</param>
            <param name="text">Log text.</param>
            <param name="userIdentity">Authenticated user identity.</param>
            <param name="localEP">Local IP endpoint.</param>
            <param name="remoteEP">Remote IP endpoint.</param>
            <param name="exception">Exception happened.</param>
        </member>
        <member name="E:LumiSoft.Net.Log.Logger.WriteLog">
            <summary>
            Is raised when new log entry is available.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.Log.Logger.OnWriteLog(LumiSoft.Net.Log.LogEntry)">
            <summary>
            Raises WriteLog event.
            </summary>
            <param name="entry">Log entry.</param>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_ClientException">
            <summary>
            POP3 client exception.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientException.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="responseLine">IMAP server response line.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>responseLine</b> is null.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientException.StatusCode">
            <summary>
            Gets POP3 server error status code.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientException.ResponseText">
            <summary>
            Gets POP3 server response text after status code.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_ClientMessage">
            <summary>
            This class represents POP3 client message.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.#ctor(LumiSoft.Net.POP3.Client.POP3_Client,System.Int32,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="pop3">Owner POP3 client.</param>
            <param name="seqNumber">Message 1 based sequence number.</param>
            <param name="size">Message size in bytes.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletion">
            <summary>
            Marks message as deleted.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 serveer returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsync(LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_ClientMessage)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client message.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.DeleCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when DELE command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.DeleReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server DELE response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsync(LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP)">
            <summary>
            Starts sending DELE command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.HeaderToString">
            <summary>
            Gets message header as string.
            </summary>
            <returns>Returns message header as string.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when message is marked for deletion and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 serveer returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.HeaderToByte">
            <summary>
            Gets message header as byte[] data.
            </summary>
            <returns>Returns message header as byte[] data.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when message is marked for deletion and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 serveer returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.HeaderToStream(System.IO.Stream)">
            <summary>
            Stores message header to the specified stream.
            </summary>
            <param name="stream">Stream where to store data.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when argument <b>stream</b> value is null.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 serveer returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToByte">
            <summary>
            Gets message as byte[] data.
            </summary>
            <returns>Returns message as byte[] data.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when message is marked for deletion and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStream(System.IO.Stream)">
            <summary>
            Stores message to specified stream.
            </summary>
            <param name="stream">Stream where to store message.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when argument <b>stream</b> value is null.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when message is marked for deletion and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 serveer returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsync(LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream where to store message.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_ClientMessage)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client message.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.RetrCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when RETR command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.RetrReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server RETR response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.MessageReadingCompleted(LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP)">
            <summary>
            Is called when message reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsync(LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageToStreamAsyncOP)">
            <summary>
            Starts sending RETR command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MarkForDeletionAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToByte(System.Int32)">
            <summary>
            Gets message header + specified number lines of message body.
            </summary>
            <param name="lineCount">Number of lines to get from message body.</param>
            <returns>Returns message header + specified number lines of message body.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when <b>numberOfLines</b> is negative value.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when message is marked for deletion and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 serveer returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStream(System.IO.Stream,System.Int32)">
            <summary>
            Stores message header + specified number lines of message body to the specified stream.
            </summary>
            <param name="stream">Stream where to store data.</param>
            <param name="lineCount">Number of lines to get from message body.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when argument <b>stream</b> value is null.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when message is marked for deletion and this method is accessed.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsync(LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="stream">Stream where to store message.</param>
            <param name="lineCount">Number of lines to get from body(after message header) of the message.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>stream</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_ClientMessage)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client message.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.TopCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when TOP command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.TopReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server TOP response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.MessageReadingCompleted(LumiSoft.Net.IO.SmartStream.ReadPeriodTerminatedAsyncOP)">
            <summary>
            Is called when message reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsync(LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP)">
            <summary>
            Starts sending TOP command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_ClientMessage.MessageTopLinesToStreamAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.Dispose">
            <summary>
            Disposes message.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.SetUID(System.String)">
            <summary>
            Sets message UID value.
            </summary>
            <param name="uid">UID value.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessage.SetMarkedForDeletion(System.Boolean)">
            <summary>
            Sets IsMarkedForDeletion flag value.
            </summary>
            <param name="isMarkedForDeletion">New IsMarkedForDeletion value.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.IsDisposed">
            <summary>
            Gets if POP3 message is Disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.SequenceNumber">
            <summary>
            Gets message 1 based sequence number.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.UID">
            <summary>
            Gets message UID. NOTE: Before accessing this property, check that server supports UIDL command.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when POP3 server doesnt support UIDL command.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.Size">
            <summary>
            Gets message size in bytes.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessage.IsMarkedForDeletion">
            <summary>
            Gets if message is marked for deletion.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection">
            <summary>
            This class represents POP3 client messages collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.#ctor(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Default constructor.
            </summary>
            <param name="pop3">Owner POP3 client.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.Add(System.Int32)">
            <summary>
            Adds new message to messages collection.
            </summary>
            <param name="size">Message size in bytes.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.GetEnumerator">
            <summary>
            Gets enumerator.
            </summary>
            <returns>Returns IEnumerator interface.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.TotalSize">
            <summary>
            Gets total size of messages, messages marked for deletion are included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.Count">
            <summary>
            Gets number of messages in the collection, messages marked for deletion are included.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.Item(System.Int32)">
            <summary>
            Gets message from specified index.
            </summary>
            <param name="index">Message zero based index in the collection.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is raised when index is out of range.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_ClientMessageCollection.Item(System.String)">
            <summary>
            Gets message with specified UID value.
            </summary>
            <param name="uid">Message UID value.</param>
            <returns>Returns message or null if message doesn't exist.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.NotSupportedException">Is raised when POP3 server doesn't support UIDL.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client">
            <summary>
            POP3 Client. Defined in RFC 1939.
            </summary>
            <example>
            <code>
            
            /*
             To make this code to work, you need to import following namespaces:
             using LumiSoft.Net.Mail;
             using LumiSoft.Net.POP3.Client; 
             */
            
            using(POP3_Client c = new POP3_Client()){
            	c.Connect("ivx",WellKnownPorts.POP3);
            	c.Login("test","test");
            	// Or Auth(sasl-method);
            			
            	// Get first message if there is any
            	if(c.Messages.Count > 0){
            		// Do your suff
            		
            		// Parse message
            		Mail_Message m = Mail_Message.Parse(c.Messages[0].MessageToByte());
            		string subject = m.Subject;			
            		// ... 
            	}		
            }
            </code>
            </example>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Disconnect">
            <summary>
            Closes connection to POP3 server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Capa">
            <summary>
            Executes CAPA command.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsync(LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.CapaCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when CAPA command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.CapaReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server CAPA response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.ReadMultiLineResponseLineCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server multiline response single line reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsync(LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP)">
            <summary>
            Starts sending CAPA command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.CapaAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Stls(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Executes STLS command.
            </summary>
            <param name="certCallback">SSL server certificate validation callback. Value null means any certificate is accepted.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is authenticated or is already secure connection.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsync(LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.#ctor(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Default constructor.
            </summary>
            <param name="certCallback">SSL server certificate validation callback. Value null means any certificate is accepted.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.StlsCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when STLS command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.StlsReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server STLS response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.SwitchToSecureCompleted(LumiSoft.Net.TCP.TCP_Client.SwitchToSecureAsyncOP)">
            <summary>
            Is called when TLS handshake has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsync(LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP)">
            <summary>
            Starts sending STLS command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.StlsAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Login(System.String,System.String)">
            <summary>
            Executes USER/PASS command.
            </summary>
            <param name="user">User name.</param>
            <param name="password">User password.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is already authenticated.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>user</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsync(LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="user">User name.</param>
            <param name="password">User password.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>user</b> or <b>password</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.UserCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when USER command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.UserReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server USER response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.PassCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when PASS command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.PassReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server PASS response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.FillMessagesCompleted(LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP)">
            <summary>
            Is called when FillMessagesAsync method has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsync(LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP)">
            <summary>
            Starts executing USER/PASS command.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.LoginAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Auth(LumiSoft.Net.AUTH.AUTH_SASL_Client)">
            <summary>
            Sends AUTH command to POP3 server.
            </summary>
            <param name="sasl">SASL authentication.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is already authenticated.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsync(LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.#ctor(LumiSoft.Net.AUTH.AUTH_SASL_Client)">
            <summary>
            Default constructor.
            </summary>
            <param name="sasl">SASL authentication.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sasl</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.Dispose">
            <summary>
            Cleans up any resource being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.AuthCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when AUTH command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.AuthReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.FillMessagesCompleted(LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP)">
            <summary>
            Is called when FillMessagesAsync method has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsync(LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP)">
            <summary>
            Starts sending AUTH command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.AuthAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or connection is already authenticated.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Noop">
            <summary>
            Send NOOP command to server. This method can be used for keeping connection alive(not timing out).
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsync(LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.NoopCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when NOOP command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.NoopReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server NOOP response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsync(LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP)">
            <summary>
            Starts sending NOOP command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.NoopAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Rset">
            <summary>
            Resets session. Messages marked for deletion will be unmarked.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected and authenticated.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsync(LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.RsetCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when RSET command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.RsetReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server RSET response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsync(LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP)">
            <summary>
            Starts sending RSET command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.RsetAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsync(LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.ListCompleted(LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP)">
            <summary>
            Is called when LIST command has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.UidlCompleted(LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP)">
            <summary>
            Is called when LIST command has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsync(LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP)">
            <summary>
            Starts filling mailbox messages info.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.FillMessagesAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsync(LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.ListCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when LIST command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.ListReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server LIST response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.ReadMultiLineResponseLineCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server multiline response single line reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.ResponseLines">
            <summary>
            Gets response lines.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ListAsync(LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP)">
            <summary>
            Starts sending LIST command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.ListAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP">
            <summary>
            This class represents <see cref="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsync(LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP)"/> asynchronous operation.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.Start(LumiSoft.Net.POP3.Client.POP3_Client)">
            <summary>
            Starts operation processing.
            </summary>
            <param name="owner">Owner POP3 client.</param>
            <returns>Returns true if asynchronous operation in progress or false if operation completed synchronously.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>owner</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.SetState(LumiSoft.Net.AsyncOP_State)">
            <summary>
            Sets operation state.
            </summary>
            <param name="state">New state.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.UidlCommandSendingCompleted(System.IAsyncResult)">
            <summary>
            Is called when UIDL command sending has finished.
            </summary>
            <param name="ar">Asynchronous result.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.UidlReadResponseCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server UIDL response reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.ReadMultiLineResponseLineCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Is called when POP3 server multiline response single line reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.State">
            <summary>
            Gets asynchronous operation state.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.Error">
            <summary>
            Gets error happened during operation. Returns null if no error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.ResponseLines">
            <summary>
            Gets response lines.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed other than <b>AsyncOP_State.Completed</b> state.</exception>
        </member>
        <member name="E:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.CompletedAsync">
            <summary>
            Is called when asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.OnCompletedAsync">
            <summary>
            Raises <b>CompletedAsync</b> event.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsync(LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP)">
            <summary>
            Starts sending UIDL command to POP3 server.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <returns>Returns true if aynchronous operation is pending (The <see cref="E:LumiSoft.Net.POP3.Client.POP3_Client.UidlAsyncOP.CompletedAsync"/> event is raised upon completion of the operation).
            Returns false if operation completed synchronously.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not in valid state. For example 'not connected'.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>op</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.OnConnected(LumiSoft.Net.TCP.TCP_Client.CompleteConnectCallback)">
            <summary>
            This method is called when TCP client has sucessfully connected.
            </summary>
            <param name="callback">Callback to be called to complete connect operation.</param>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.ReadServerGreetingCompleted(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP,LumiSoft.Net.TCP.TCP_Client.CompleteConnectCallback)">
            <summary>
            Is called when POP3 server greeting reading has completed.
            </summary>
            <param name="op">Asynchronous operation.</param>
            <param name="connectCallback">Callback to be called to complete connect operation.</param>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.GreetingText">
            <summary>
            Gets greeting text which was sent by POP3 server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and POP3 client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.ExtenededCapabilities">
            <summary>
            Gets POP3 exteneded capabilities supported by POP3 server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and POP3 client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.ExtendedCapabilities">
            <summary>
            Gets POP3 exteneded capabilities supported by POP3 server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and POP3 client is not connected.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.IsUidlSupported">
            <summary>
            Gets if POP3 server supports UIDL command.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and 
            POP3 client is not connected and authenticated.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.Messages">
            <summary>
            Gets messages collection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and 
            POP3 client is not connected and authenticated.</exception>
        </member>
        <member name="P:LumiSoft.Net.POP3.Client.POP3_Client.AuthenticatedUserIdentity">
            <summary>
            Gets session authenticated user identity, returns null if not authenticated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when this property is accessed and POP3 client is not connected.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.StartTLS">
            <summary>
            Switches POP3 connection to SSL.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is authenticated or is already secure connection.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.StartTLSDelegate">
            <summary>
            Internal helper method for asynchronous StartTLS method.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.BeginStartTLS(System.AsyncCallback,System.Object)">
            <summary>
            Starts switching to SSL.
            </summary>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is authenticated or is already secure connection.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.EndStartTLS(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous StartTLS request.
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Authenticate(System.String,System.String,System.Boolean)">
            <summary>
            Authenticates user.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">Password.</param>
            <param name="tryApop"> If true and POP3 server supports APOP, then APOP is used, otherwise normal login used.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is already authenticated.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.AuthenticateDelegate">
            <summary>
            Internal helper method for asynchronous Authenticate method.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.BeginAuthenticate(System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Starts authentication.
            </summary>
            <param name="userName">User login name.</param>
            <param name="password">Password.</param>
            <param name="tryApop"> If true and POP3 server supports APOP, then APOP is used, otherwise normal login used.</param>
            <param name="callback">Callback to call when the asynchronous operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected or is already authenticated.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.EndAuthenticate(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous authentication request.
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.NoopDelegate">
            <summary>
            Internal helper method for asynchronous Noop method.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.BeginNoop(System.AsyncCallback,System.Object)">
            <summary>
            Starts sending NOOP command to server. This method can be used for keeping connection alive(not timing out).
            </summary>
            <param name="callback">Callback to call when the asynchronous operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.EndNoop(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous Noop request.
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="T:LumiSoft.Net.POP3.Client.POP3_Client.ResetDelegate">
            <summary>
            Internal helper method for asynchronous Reset method.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.BeginReset(System.AsyncCallback,System.Object)">
            <summary>
            Starts resetting session. Messages marked for deletion will be unmarked.
            </summary>
            <param name="callback">Callback to call when the asynchronous operation is complete.</param>
            <param name="state">User data.</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected and authenticated.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.EndReset(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous reset request.
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>asyncResult</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid <b>asyncResult</b> passed to this method.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.Reset">
            <summary>
            Resets session. Messages marked for deletion will be unmarked.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this method is accessed.</exception>
            <exception cref="T:System.InvalidOperationException">Is raised when POP3 client is not connected and authenticated.</exception>
            <exception cref="T:LumiSoft.Net.POP3.Client.POP3_ClientException">Is raised when POP3 server returns error.</exception>        
        </member>
        <member name="M:LumiSoft.Net.POP3.Client.POP3_Client.FillMessages">
            <summary>
            Fills messages info.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.StreamLineReader">
            <summary>
            Stream line reader.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.StreamLineReader.#ctor(System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="strmSource">Source stream from where to read data. Reading begins from stream current position.</param>
        </member>
        <member name="M:LumiSoft.Net.StreamLineReader.ReadLine">
            <summary>
            Reads byte[] line from stream. NOTE: Returns null if end of stream reached.
            </summary>
            <returns>Return null if end of stream reached.</returns>
        </member>
        <member name="M:LumiSoft.Net.StreamLineReader.ReadLineString">
            <summary>
            Reads string line from stream. String is converted with specified Encoding property from byte[] line. NOTE: Returns null if end of stream reached.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.Net.StreamLineReader.Encoding">
            <summary>
            Gets or sets charset encoding to use for string based methods. Default("") encoding is system default encoding.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.StreamLineReader.CRLF_LinesOnly">
            <summary>
            Gets or sets if lines must be CRLF terminated or may be only LF terminated too.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.WellKnownPorts">
            <summary>
            This class provides well known TCP/UDP service ports.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.FTP_Data">
            <summary>
            FTP - data port.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.FTP_Control">
            <summary>
            FTP - control (command) port.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.SMTP">
            <summary>
            SMTP protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.DNS">
            <summary>
            DNS protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.HTTP">
            <summary>
            HTTP protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.POP3">
            <summary>
            POP3 protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.NNTP">
            <summary>
            NNTP (Network News Transfer Protocol)  protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.NTP">
            <summary>
            NTP (Network Time Protocol) protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.IMAP4">
            <summary>
            IMAP4 protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.HTTPS">
            <summary>
            HTTPS protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.SMTP_SSL">
            <summary>
            SMTP over SSL protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.FTP_Control_SSL">
            <summary>
            FTP over SSL protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.IMAP4_SSL">
            <summary>
            IMAP4 over SSL protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.WellKnownPorts.POP3_SSL">
            <summary>
            POP3 over SSL protocol.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.AsyncResultState">
            <summary>
            (For internal use only). This class provides holder for IAsyncResult interface and extends it's features.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.AsyncResultState.#ctor(System.Object,System.Delegate,System.AsyncCallback,System.Object)">
            <summary>
            Default constructor.
            </summary>
            <param name="asyncObject">Caller's async object.</param>
            <param name="asyncDelegate">Delegate which is called asynchronously.</param>
            <param name="callback">Callback to call when the connect operation is complete.</param>
            <param name="state">User data.</param>
        </member>
        <member name="M:LumiSoft.Net.AsyncResultState.SetAsyncResult(System.IAsyncResult)">
            <summary>
            Sets AsyncResult value.
            </summary>
            <param name="asyncResult">Asycnhronous result to wrap.</param>
        </member>
        <member name="M:LumiSoft.Net.AsyncResultState.CompletedCallback(System.IAsyncResult)">
            <summary>
            This method is called by AsyncDelegate when asynchronous operation completes. 
            </summary>
            <param name="ar">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.AsyncObject">
            <summary>
            Gets or sets caller's async object.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.AsyncDelegate">
            <summary>
            Gets delegate which is called asynchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.AsyncResult">
            <summary>
            Gets source asynchronous result what we wrap.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.IsEndCalled">
            <summary>
            Gets if the user called the End*() method.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.AsyncWaitHandle">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.AsyncResultState.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.IPBindInfo">
            <summary>
            Holds IP bind info.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.IPBindInfo.#ctor(System.String,LumiSoft.Net.BindInfoProtocol,System.Net.IPAddress,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="hostName">Host name.</param>
            <param name="protocol">Bind protocol.</param>
            <param name="ip">IP address to listen.</param>
            <param name="port">Port to listen.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IPBindInfo.#ctor(System.String,System.Net.IPAddress,System.Int32,LumiSoft.Net.SslMode,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Default constructor.
            </summary>
            <param name="hostName">Host name.</param>
            <param name="ip">IP address to listen.</param>
            <param name="port">Port to listen.</param>
            <param name="sslMode">Specifies SSL mode.</param>
            <param name="sslCertificate">Certificate to use for SSL connections.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.IPBindInfo.#ctor(System.String,LumiSoft.Net.BindInfoProtocol,System.Net.IPAddress,System.Int32,LumiSoft.Net.SslMode,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Default constructor.
            </summary>
            <param name="hostName">Host name.</param>
            <param name="protocol">Bind protocol.</param>
            <param name="ip">IP address to listen.</param>
            <param name="port">Port to listen.</param>
            <param name="sslMode">Specifies SSL mode.</param>
            <param name="sslCertificate">Certificate to use for SSL connections.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Net.IPBindInfo.Equals(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>Returns true if two objects are equal.</returns>
        </member>
        <member name="M:LumiSoft.Net.IPBindInfo.GetHashCode">
            <summary>
            Returns the hash code.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.HostName">
            <summary>
            Gets host name.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.Protocol">
            <summary>
            Gets protocol.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.EndPoint">
            <summary>
            Gets IP end point.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.IP">
            <summary>
            Gets IP address.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.Port">
            <summary>
            Gets port.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.SslMode">
            <summary>
            Gets SSL mode.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.SSL_Certificate">
            <summary>
            Gets SSL certificate.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.Certificate">
            <summary>
            Gets SSL certificate.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.IPBindInfo.Tag">
            <summary>
            Gets or sets user data. This is used internally don't use it !!!.
            </summary>
        </member>
        <member name="T:LumiSoft.Net.CircleCollection`1">
            <summary>
            Circle collection. Elements will be circled clockwise.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.Add(`0[])">
            <summary>
            Adds specified items to the collection.
            </summary>
            <param name="items">Items to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>items</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.Add(`0)">
            <summary>
            Adds specified item to the collection.
            </summary>
            <param name="item">Item to add.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>item</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.Remove(`0)">
            <summary>
            Removes specified item from the collection.
            </summary>
            <param name="item">Item to remove.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>item</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.Clear">
            <summary>
            Clears all items from collection.
            </summary>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.Contains(`0)">
            <summary>
            Gets if the collection contain the specified item.
            </summary>
            <param name="item">Item to check.</param>
            <returns>Returns true if the collection contain the specified item, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.Next">
            <summary>
            Gets next item from the collection. This method is thread-safe.
            </summary>
            <exception cref="T:System.InvalidOperationException">Is raised when thre is no items in the collection.</exception>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.ToArray">
            <summary>
            Copies all elements to new array, all elements will be in order they added. This method is thread-safe.
            </summary>
            <returns>Returns elements in a new array.</returns>
        </member>
        <member name="M:LumiSoft.Net.CircleCollection`1.ToCurrentOrderArray">
            <summary>
            Copies all elements to new array, all elements will be in current circle order. This method is thread-safe.
            </summary>
            <returns>Returns elements in a new array.</returns>
        </member>
        <member name="P:LumiSoft.Net.CircleCollection`1.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:LumiSoft.Net.CircleCollection`1.Item(System.Int32)">
            <summary>
            Gets item at the specified index.
            </summary>
            <param name="index">Item zero based index.</param>
            <returns>Returns item at the specified index.</returns>
        </member>
        <member name="T:LumiSoft.Net.BindInfoProtocol">
            <summary>
            Specifies BindInfo protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.BindInfoProtocol.TCP">
            <summary>
            TCP protocol.
            </summary>
        </member>
        <member name="F:LumiSoft.Net.BindInfoProtocol.UDP">
            <summary>
            UDP protocol.
            </summary>
        </member>
    </members>
</doc>
